{"version":3,"file":"react-dom.profiling.min.js","mappings":"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","names":["React","require","_assign","Scheduler","tracing","formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","Error","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","canUseDOM","window","document","createElement","VALID_ATTRIBUTE_NAME_REGEX","hasOwnProperty","Object","prototype","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","attributeName","call","test","shouldRemoveAttributeWithWarning","name","value","propertyInfo","isCustomComponentTag","RESERVED","type","acceptsBooleans","prefix","toLowerCase","slice","shouldRemoveAttribute","BOOLEAN","OVERLOADED_BOOLEAN","NUMERIC","isNaN","POSITIVE_NUMERIC","PropertyInfoRecord","mustUseProperty","attributeNamespace","sanitizeURL","removeEmptyString","BOOLEANISH_STRING","propertyName","properties","reservedProps","forEach","_ref","STRING","CAMELIZE","capitalize","token","toUpperCase","replace","setValueForProperty","node","removeAttribute","setAttribute","attributeValue","setAttributeNS","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_OPAQUE_ID_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","maybeIterator","FAUX_ITERATOR_SYMBOL","describeBuiltInComponentFrame","undefined","x","match","stack","trim","reentry","describeNativeComponentFrame","fn","construct","previousPrepareStackTrace","prepareStackTrace","Fake","defineProperty","set","Reflect","control","sample","sampleLines","split","controlLines","s","c","syntheticFrame","displayName","describeFiber","fiber","tag","HostComponent","LazyComponent","SuspenseComponent","SuspenseListComponent","FunctionComponent","IndeterminateComponent","SimpleMemoComponent","ForwardRef","render","Block","_render","ClassComponent","getComponentName","$$typeof","_context","functionName","innerType","wrapperName","payload","_payload","init","_init","getToStringValue","isCheckable","elem","nodeName","trackValueOnNode","valueField","descriptor","getOwnPropertyDescriptor","constructor","currentValue","get","configurable","enumerable","tracker","getValue","setValue","stopTracking","_valueTracker","track","updateValueIfChanged","lastValue","checked","nextValue","getActiveElement","doc","activeElement","body","e","getHostProps","element","props","hostProps","defaultChecked","defaultValue","_wrapperState","initialChecked","initWrapperState","initialValue","controlled","updateChecked","updateWrapper","setDefaultValue","postMountWrapper","isHydrating","ownerDocument","flattenChildren","children","content","Children","child","getHostProps$1","updateOptions","multiple","propValue","setDefaultSelected","options","selectedValue","selected","defaultSelected","disabled","getHostProps$3","dangerouslySetInnerHTML","initWrapperState$2","Array","isArray","updateWrapper$1","newValue","postMountWrapper$3","textContent","Namespaces","html","HTML_NAMESPACE","mathml","MATH_NAMESPACE","svg","SVG_NAMESPACE","getIntrinsicNamespace","getChildNamespace","parentNamespace","reusableSVGContainer","setInnerHTML","createMicrosoftUnsafeLocalFunction","func","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","namespaceURI","innerHTML","valueOf","toString","svgNode","firstChild","removeChild","appendChild","setTextContent","text","lastChild","TEXT_NODE","nodeType","nodeValue","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","keys","prop","charAt","substring","dangerousStyleValue","isCustomProperty","setValueForStyles","styles","style","styleName","indexOf","styleValue","setProperty","voidElementTags","menuitem","omittedCloseTags","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","wbr","assertValidProps","HTML","isCustomComponent","tagName","is","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","parentNode","restoreImpl","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","getInstanceFromNode","stateNode","getFiberCurrentPropsFromNode","enqueueStateRestore","push","restoreStateIfNeeded","queuedTargets","batchedUpdatesImpl","bookkeeping","discreteUpdatesImpl","a","b","d","flushDiscreteUpdatesImpl","batchedEventUpdatesImpl","isInsideEventHandler","isBatchingEventUpdates","finishEventHandler","batchedEventUpdates","getListener","inst","listener","passiveBrowserEventsSupported","addEventListener","removeEventListener","invokeGuardedCallbackProd","context","f","funcArgs","apply","error","onError","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackImpl","invokeGuardedCallbackAndCatchFirstError","getNearestMountedFiber","nearestMounted","alternate","return","nextNode","NoFlags","flags","HostRoot","getSuspenseInstanceFromFiber","suspenseState","memoizedState","current","dehydrated","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","HostText","doesFiberContain","parentFiber","childFiber","parentFiberAlternate","attemptUserBlockingHydration","attemptContinuousHydration","attemptHydrationAtCurrentPriority","attemptHydrationAtPriority","hasScheduledReplayAttempt","queuedDiscreteEvents","queuedFocus","queuedDrag","queuedMouse","queuedPointers","Map","queuedPointerCaptures","queuedExplicitHydrationTargets","discreteReplayableEvents","createQueuedReplayableEvent","blockedOn","domEventName","eventSystemFlags","targetContainer","IS_REPLAYED","targetContainers","clearIfContinuousEvent","delete","pointerId","accumulateOrCreateContinuousQueuedReplayableEvent","existingQueuedEvent","queuedEvent","queueIfContinuousEvent","attemptExplicitHydrationTarget","queuedTarget","targetInst","getClosestInstanceFromNode","instance","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","attemptReplayContinuousQueuedEvent","nextBlockedOn","attemptToDispatchEvent","shift","attemptReplayContinuousQueuedEventInMap","key","map","replayUnblockedEvents","nextDiscreteEvent","scheduleCallbackIfUnblocked","unblocked","unstable_scheduleCallback","unstable_NormalPriority","retryIfBlockedOn","unblock","nextExplicitTarget","makePrefixMap","styleProp","eventName","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","animation","transition","getVendorPrefixedEventName","prefixMap","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_END","topLevelEventsToReactNames","eventPriorities","continuousPairsForSimpleEventPlugin","registerSimplePluginEventsAndSetTheirPriorities","eventTypes","topEvent","event","reactName","Scheduler_now","unstable_now","__interactionsRef","return_highestLanePriority","DefaultLanePriority","getHighestPriorityLanes","lanes","NoLanes","SyncLane","SyncLanePriority","SyncBatchedLane","SyncBatchedLanePriority","InputDiscreteHydrationLane","InputDiscreteHydrationLanePriority","inputDiscreteLanes","InputDiscreteLanes","InputDiscreteLanePriority","InputContinuousHydrationLane","InputContinuousHydrationLanePriority","inputContinuousLanes","InputContinuousLanes","InputContinuousLanePriority","DefaultHydrationLane","DefaultHydrationLanePriority","defaultLanes","DefaultLanes","TransitionHydrationLane","TransitionHydrationPriority","transitionLanes","TransitionLanes","TransitionPriority","retryLanes","RetryLanes","RetryLanePriority","SelectiveHydrationLane","SelectiveHydrationLanePriority","IdleHydrationLane","IdleHydrationLanePriority","idleLanes","IdleLanes","IdleLanePriority","OffscreenLane","OffscreenLanePriority","schedulerPriorityToLanePriority","schedulerPriorityLevel","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","NoLanePriority","lanePriorityToSchedulerPriority","NoPriority","getNextLanes","root","wipLanes","pendingLanes","nextLanes","nextLanePriority","expiredLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","NonIdleLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","index","clz32","entangledLanes","entanglements","lane","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","findUpdateLane","getHighestPriorityLane","NoLane","createLaneMap","initial","laneMap","TotalLanes","markRootUpdated","updateLane","eventTime","higherPriorityLanes","eventTimes","Math","clz32Fallback","log","LN2","UserBlockingPriority$1","unstable_UserBlockingPriority","runWithPriority","_enabled","dispatchDiscreteEvent","container","dispatchEvent","prevIsInsideEventHandler","dispatchUserBlockingUpdate","bind","allowReplay","IS_CAPTURE_PHASE","dispatchEventForPluginEventSystem","nativeEventTarget","startText","fallbackText","getData","start","startValue","startLength","end","endValue","endLength","minEnd","sliceTail","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactEventType","_reactName","_targetInst","currentTarget","propName","normalize","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","lastMovementX","lastMovementY","lastMouseEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","DragEventInterface","dataTransfer","SyntheticDragEvent","FocusEventInterface","SyntheticFocusEvent","AnimationEventInterface","animationName","elapsedTime","pseudoElement","SyntheticAnimationEvent","ClipboardEventInterface","clipboardData","SyntheticClipboardEvent","CompositionEventInterface","data","SyntheticCompositionEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","syntheticEvent","keyProp","KeyboardEventInterface","getEventKey","String","fromCharCode","location","repeat","locale","which","SyntheticKeyboardEvent","PointerEventInterface","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticPointerEvent","TouchEventInterface","touches","targetTouches","changedTouches","SyntheticTouchEvent","TransitionEventInterface","SyntheticTransitionEvent","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticWheelEvent","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","SPACEBAR_CODE","hasSpaceKeypress","isFallbackCompositionEnd","START_KEYCODE","getDataFromCustomEvent","isComposing","getNativeBeforeInputChars","chars","getFallbackBeforeInputChars","char","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","dispatchQueue","listeners","accumulateTwoPhaseListeners","activeElementInst","runEventInBatch","processDispatchQueue","getInstIfValueChanged","targetNode","getNodeFromInstance","getTargetInstForChangeEvent","isInputEventSupported","isSupported","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","y","objectIs","hasOwnProperty$1","shallowEqual","objA","objB","keysA","keysB","getLeafNode","getNodeForCharacterOffset","offset","nodeStart","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","win","HTMLIFrameElement","contentWindow","href","err","hasSelectionCapabilities","contentEditable","skipSelectionChangeEvent","activeElement$1","activeElementInst$1","lastSelection","mouseDown","constructSelectEvent","DOCUMENT_NODE","selectionStart","selectionEnd","selection","getSelection","defaultView","anchorNode","anchorOffset","focusNode","focusOffset","currentSelection","discreteEventPairsForSimpleEventPlugin","DiscreteEvent","userBlockingPairsForSimpleEventPlugin","UserBlockingEvent","ContinuousEvent","otherDiscreteEvents","mediaEventTypes","nonDelegatedEvents","concat","executeDispatch","inCapturePhase","_dispatchQueue$i","previousInstance","_dispatchListeners$i","_dispatchListeners$i2","listenToNonDelegatedEvent","targetElement","listenerSet","getEventListenerSet","listenerSetKey","has","addTrappedEventListener","IS_NON_DELEGATED","isCapturePhaseListener","listeningMarker","random","listenToAllSupportedEvents","rootContainerElement","listenToNativeEvent","eventPriority","listenerWrapper","isPassiveListener","capture","passive","ancestorInst","IS_EVENT_HANDLE_NON_MANAGED_NODE","nodeTag","HostPortal","COMMENT_NODE","grandNode","grandTag","grandContainer","parentTag","SyntheticEventCtor","accumulateTargetOnly","reactEventName","captureName","lastHostComponent","_instance","createDispatchListener","SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS","isOverEvent","isOutEvent","related","internalContainerInstanceKey","parentWindow","from","to","leaveEventType","enterEventType","eventTypePrefix","fromNode","toNode","leave","enter","nativeTargetInst","enterEvent","nodeA","instA","nodeB","instB","depthA","tempA","getParent","depthB","tempB","depth","accumulateEnterLeaveListenersForEvent","common","getTargetInstFunc","handleEventFunc","state","fallbackData","eventType","customData","SyntheticInputEvent","targetFiber","_instance2","captureListener","unshift","bubbleListener","_instance3","noop","eventsEnabled","selectionInformation","shouldAutoFocusHostComponent","autoFocus","shouldSetTextContent","__html","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","clearContainer","ELEMENT_NODE","getNextHydratable","getParentSuspenseInstance","targetInstance","previousSibling","SUSPENSE_START_DATA","SUSPENSE_FALLBACK_START_DATA","SUSPENSE_PENDING_START_DATA","SUSPENSE_END_DATA","clientId","makeOpaqueHydratingObject","attemptToReadValue","randomKey","internalInstanceKey","internalPropsKey","internalEventHandlersKey","suspenseInstance","targetSuspenseInst","elementListenerSet","valueStack","createCursor","pop","cursor","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getMaskedContext","workInProgress","unmaskedContext","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","isContextProvider","childContextTypes","popContext","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","rendererID","injectedHook","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","Scheduler_runWithPriority","Scheduler_scheduleCallback","Scheduler_cancelCallback","unstable_cancelCallback","Scheduler_shouldYield","unstable_shouldYield","Scheduler_requestPaint","unstable_requestPaint","Scheduler_now$1","Scheduler_getCurrentPriorityLevel","unstable_getCurrentPriorityLevel","Scheduler_ImmediatePriority","unstable_ImmediatePriority","Scheduler_UserBlockingPriority","Scheduler_NormalPriority","Scheduler_LowPriority","unstable_LowPriority","Scheduler_IdlePriority","unstable_IdlePriority","fakeCallbackNode","requestPaint","syncQueue","immediateQueueCallbackNode","isFlushingSyncQueue","initialTimeMs$1","getCurrentPriorityLevel","ImmediatePriority$1","UserBlockingPriority$2","NormalPriority$1","LowPriority$1","IdlePriority$1","reactPriorityToSchedulerPriority","reactPriorityLevel","runWithPriority$1","priorityLevel","scheduleCallback","callback","flushSyncCallbackQueue","flushSyncCallbackQueueImpl","queue","isSync","ReactCurrentBatchConfig","resolveDefaultProps","Component","baseProps","defaultProps","valueCursor","currentlyRenderingFiber","lastContextDependency","lastContextWithAllBitsObserved","resetContextDependencies","popProvider","providerFiber","_currentValue","scheduleWorkOnParentPath","renderLanes","childLanes","prepareToReadContext","firstContext","didReceiveUpdate","readContext","observedBits","MAX_SIGNED_31_BIT_INT","resolvedObservedBits","contextItem","next","responders","hasForceUpdate","initializeUpdateQueue","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","cloneUpdateQueue","currentQueue","clone","createUpdate","update","UpdateState","enqueueUpdate","sharedQueue","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","processUpdateQueue","pendingQueue","lastPendingUpdate","firstPendingUpdate","currentLastBaseUpdate","newState","newLanes","newLastBaseUpdate","newFirstBaseUpdate","newBaseState","updateEventTime","ReplaceState","nextState","prevState","nextProps","CaptureUpdate","DidCapture","partialState","ForceUpdate","Callback","workInProgressRootSkippedLanes","commitUpdateQueue","finishedWork","finishedQueue","effect","emptyRefsObject","refs","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","classComponentUpdater","isMounted","component","_reactInternals","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","oldState","nextContext","shouldComponentUpdate","shouldUpdate","isPureReactComponent","constructClassInstance","isLegacyContextConsumer","contextType","updater","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","mountClassInstance","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Update","coerceRef","returnFiber","mixedRef","ref","_owner","owner","stringRef","_stringRef","throwOnInvalidObjectType","newChild","join","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","last","lastEffect","nextEffect","firstEffect","Deletion","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","pendingProps","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","Placement","placeSingleChild","updateTextNode","created","createFiberFromText","mode","existing","updateElement","elementType","createFiberFromTypeAndProps","updatePortal","portal","implementation","createFiberFromPortal","updateFragment","fragment","Fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","reconcileChildrenIterator","newChildrenIterable","iteratorFn","step","done","reconcileChildFibers","isUnkeyedTopLevelFragment","isObject","mountChildFibers","NO_CONTEXT","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","pushHostContainer","nextRootInstance","DOCUMENT_FRAGMENT_NODE","namespace","documentElement","ownNamespace","nextRootContext","popHostContainer","pushHostContext","popHostContext","suspenseStackCursor","DefaultSuspenseContext","findFirstSuspended","row","memoizedProps","revealOrder","hydrationParentFiber","nextHydratableInstance","deleteHydratableInstance","createFiber","NoMode","tryHydrate","nextInstance","textInstance","tryToClaimNextHydratableInstance","firstAttemptedInstance","popToNextHostParent","popHydrationState","resetHydrationState","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionPrimary","ReactCurrentDispatcher$1","ReactCurrentDispatcher","ReactCurrentBatchConfig$1","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","HooksDispatcherOnMount","HooksDispatcherOnUpdate","numberOfReRenders","RE_RENDER_LIMIT","HooksDispatcherOnRerender","ContextOnlyDispatcher","didRenderTooFewHooks","mountWorkInProgressHook","hook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","basicStateReducer","action","updateReducer","reducer","lastRenderedReducer","baseFirst","first","newBaseQueueLast","newBaseQueueFirst","eagerReducer","eagerState","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","readFromUnsubcribedMutableSource","getSnapshot","getVersion","_getVersion","version","_source","currentRenderVersion","isSafeToReadFromSource","mutableReadLanes","subset","snapshot","useMutableSource","subscribe","workInProgressRoot","dispatcher","_dispatcher$useState","useState","setSnapshot","currentSnapshot","stateHook","prevGetSnapshot","prevSource","prevSubscribe","useEffect","maybeNewVersion","maybeNewSnapshot","unsubscribe","handleChange","latestGetSnapshot","latestSetSnapshot","newQueue","dispatchAction","updateMutableSource","mountState","initialState","pushEffect","create","destroy","deps","componentUpdateQueue","mountRef","updateRef","mountEffectImpl","fiberFlags","hookFlags","HasEffect","updateEffectImpl","prevEffect","mountEffect","Passive$1","updateEffect","updateLayoutEffect","Layout","imperativeHandleEffect","updateImperativeHandle","effectDeps","mountDebugValue","updateCallback","updateMemo","nextCreate","startTransition","setPending","prevTransition","currentState","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useOpaqueIdentifier","unstable_isNewReconciler","enableNewReconciler","mountCallback","mountImperativeHandle","mountLayoutEffect","mountMemo","mountReducer","initialArg","mountDeferredValue","_mountState","prevValue","mountTransition","_mountState2","isPending","mountMutableSource","mountOpaqueIdentifier","didUpgrade","id","readValue","setId","BlockingMode","updateState","updateDebugValue","updateDeferredValue","_updateState","updateTransition","_updateState2","startRef","updateOpaqueIdentifier","rerenderState","rerenderDeferredValue","_rerenderState","rerenderTransition","_rerenderState2","rerenderOpaqueIdentifier","now$1","commitTime","profilerStartTime","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","actualDuration","selfBaseDuration","transferActualDuration","ReactCurrentOwner$1","ReactCurrentOwner","reconcileChildren","nextChildren","updateForwardRef","bailoutOnAlreadyFinishedWork","PerformedWork","updateMemoComponent","updateLanes","shouldConstruct","compare","updateSimpleMemoComponent","currentChild","prevProps","ForceUpdateForLegacySuspense","updateFunctionComponent","updateOffscreenComponent","ConcurrentMode","baseLanes","pushRenderLanes","subtreeRenderLanes","nextBaseLanes","markSpawnedWork","markRef","Ref","updateClassComponent","hasContext","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","unresolvedOldProps","unresolvedNewProps","nextUnmaskedContext","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Snapshot","finishClassComponent","nextUnitOfWork","didCaptureError","getDerivedStateFromError","pushHostRootContext","pendingContext","SUSPENDED_MARKER","retryLane","updateSuspenseComponent","suspenseContext","showFallback","didSuspend","ForceSuspenseFallback","fallback","unstable_avoidThisFallback","InvisibleParentSuspenseContext","SubtreeSuspenseContextMask","nextPrimaryChildren","nextFallbackChildren","fallbackFragment","mountSuspenseFallbackChildren","unstable_expectedLoadTime","SomeRetryLane","primaryChildFragment","createFiberFromOffscreen","primaryChildProps","fallbackChildFragment","updateSuspenseFallbackChildren","prevOffscreenState","updateSuspensePrimaryChildren","primaryChildren","fallbackChildren","progressedPrimaryFragment","ProfileMode","actualStartTime","treeBaseDuration","currentPrimaryChildFragment","currentFallbackChildFragment","offscreenProps","progressedLastEffect","scheduleWorkOnFiber","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","lastEffectBeforeRendering","renderState","rendering","renderingStartTime","updateSuspenseListComponent","currentRow","nextRow","appendAllChildren","updateHostContainer","updateHostComponent$1","updateHostText$1","updatePayload","lastProps","onClick","onclick","styleUpdates","propKey","STYLE","lastStyle","DANGEROUSLY_SET_INNER_HTML","CHILDREN","SUPPRESS_CONTENT_EDITABLE_WARNING","SUPPRESS_HYDRATION_WARNING","AUTOFOCUS","nextProp","lastProp","nextHtml","lastHtml","oldText","newText","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","completeWork","Mode","Profiler","ContextConsumer","MemoComponent","fiberRoot","wasHydrated","rootContainerInstance","rootInstance","currentHostContext","wasMultiple","HTML_NAMESPACE$1","div","domElement","size","createElementNS","textNode","createTextNode","nextDidTimeout","prevDidTimeout","RootIncomplete","workInProgressRootExitStatus","RootSuspended","RootSuspendedWithDelay","workInProgressRootUpdatedLanes","markRootSuspended$1","workInProgressRootRenderLanes","ContextProvider","IncompleteClassComponent","didSuspendAlready","renderedTail","suspended","newThennables","currentDependencies","workInProgressRootRenderTargetTime","OffscreenComponent","LegacyHiddenComponent","popRenderLanes","unwindWork","ShouldCapture","createCapturedValue","info","message","logCapturedError","boundary","errorInfo","console","PossiblyWeakMap","WeakMap","createRootErrorUpdate","NoTimestamp","update.callback","hasUncaughtError","firstUncaughtError","createClassErrorUpdate","update.payload","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","componentStack","PossiblyWeakSet","WeakSet","safelyDetachRef","refError","captureCommitPhaseError","commitBeforeMutationLifeCycles","__reactInternalSnapshotBeforeUpdate","commitLifeCycles","finishedRoot","_effect","NoFlags$1","enqueuePendingPassiveHookEffectUnmount","enqueuePendingPassiveHookEffectMount","focus","onRender","memoizedInteractions","FundamentalComponent","ScopeComponent","hideOrUnhideAllChildren","isHidden","display","commitUnmount","onCommitFiberUnmount","_effect2","componentWillUnmount","unmountError","unmountHostComponents","detachFiberMutation","isHostParent","commitPlacement","parentStateNode","isContainer","ContentReset","DehydratedFragment","insertOrAppendPlacementNodeIntoContainer","before","insertOrAppendPlacementNode","isHost","insertBefore","reactRootContainer","_reactRootContainer","currentParentIsValid","currentParentIsContainer","commitWork","globalMostRecentFallbackTime","attachSuspenseRetryListeners","wakeables","retryCache","wakeable","retry","resolveRetryWakeable","__reactDoNotTraceInteractions","unstable_wrap","then","isSuspenseBoundaryBeingHidden","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","executionContext","NoContext","subtreeRenderLanesCursor","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootPingedLanes","mostRecentlyUpdatedRoot","Infinity","resetRenderTimer","RENDER_TIMEOUT_MS","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsRenderPriority","NoPriority$1","pendingPassiveEffectsLanes","pendingPassiveHookEffectsMount","pendingPassiveHookEffectsUnmount","rootsWithPendingDiscreteUpdates","nestedUpdateCount","rootWithNestedUpdates","spawnedWorkDuringRender","currentEventTime","currentEventWipLanes","currentEventPendingLanes","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","NoTransition","schedulerPriority","DiscreteEventContext","schedulerLanePriority","NESTED_UPDATE_LIMIT","markUpdateLaneFromFiberToRoot","LegacyUnbatchedContext","schedulePendingInteractions","performSyncWorkOnRoot","ensureRootIsScheduled","sourceFiber","currentTime","existingCallbackNode","callbackNode","expirationTimes","expirationTime","newCallbackPriority","callbackPriority","newCallbackNode","performConcurrentWorkOnRoot","originalCallbackNode","flushPassiveEffects","didFlushPassiveEffects","prevExecutionContext","RenderContext","prevDispatcher","pushDispatcher","prepareFreshStack","startWorkOnPendingInteractions","prevInteractions","pushInteractions","workLoopConcurrent","thrownValue","handleError","exitStatus","RootErrored","RetryAfterError","renderRootSync","RootFatalErrored","fatalError","finishedLanes","commitRoot","msUntilTimeout","FALLBACK_THROTTLE_MS","timeoutHandle","mostRecentEventTime","timeElapsedMs","RootCompleted","LegacyRoot","flushPendingDiscreteUpdates","roots","batchedUpdates$1","BatchedContext","unbatchedUpdates","noTimeout","interruptedWork","erroredWork","Incomplete","currentSource","hasInvisibleParentBoundary","hasInvisibleParent","threadIDs","rootRenderLanes","pingCache","ping","pingSuspendedRoot","completeUnitOfWork","yetAnotherThrownValue","workLoopSync","performUnitOfWork","shouldYield","unitOfWork","beginWork$1","completedWork","newChildLanes","shouldBubbleActualDurations","HostEffectMask","siblingFiber","renderPriorityLevel","commitRootImpl","remainingLanes","noLongerPendingLanes","CommitContext","focusedElem","rangeCount","indexWithinAnchor","indexWithinFocus","selectionRange","activeInstance","commitBeforeMutationEffects","currentRef","PlacementAndUpdate","Hydrating","HydratingAndUpdate","curFocusedElem","priorFocusedElem","priorSelectionInformation","priorSelectionRange","min","extend","temp","startMarker","endMarker","createRange","setStart","removeAllRanges","addRange","setEnd","ancestors","ancestor","left","scrollLeft","top","scrollTop","instanceToUse","rootDidHavePassiveEffects","nextNextEffect","scheduleInteractions","finishPendingInteractions","onCommitFiberRoot","Passive","flushPassiveEffectsImpl","unmountEffects","mountEffects","captureCommitPhaseErrorOnRoot","rootFiber","errorToIgnore","boundaryFiber","beginWork","effectDuration","passiveEffectDuration","hasChildWork","resolvedTag","resolveLazyComponentTag","resolvedProps","hint","unresolvedProps","prevChildren","mutableSourceEagerHydrationData","isDirectTextChild","oldValue","changedBits","_calculateChangedBits","list","nextFiber","dependency","unstable_observedBits","updateLegacyHiddenComponent","interactions","pendingInteractionMap","pendingInteractions","interaction","__count","subscriber","__subscriberRef","onWorkScheduled","interactionThreadID","scheduledInteractions","scheduledLane","threadID","onWorkStarted","committedLanes","remainingLanesAfterCommit","onWorkStopped","onInteractionScheduledWorkCompleted","FiberNode","isReactComponent","fiberTag","resolvedType","DebugTracingMode","StrictMode","elements","pendingChildren","FiberRootNode","unstable_getThreadID","createPortal","updateContainer","parentComponent","getPublicRootInstance","containerFiber","markRetryLaneImpl","markRetryLaneIfNotHydrated","emptyFindFiberByHostInstance","ReactDOMBlockingRoot","mutableSources","hydrationOptions","ConcurrentRoot","BlockingRoot","uninitializedFiber","_internalRoot","ReactDOMBlockingRoot.prototype.render","unmount","ReactDOMBlockingRoot.prototype.unmount","isValidContainer","legacyCreateRootFromDOMContainer","forceHydrate","rootElement","hasAttribute","ROOT_ATTRIBUTE_NAME","shouldHydrate","rootSibling","legacyRenderSubtreeIntoContainer","originalCallback","attemptUserBlockingHydration$1","attemptContinuousHydration$1","attemptHydrationAtCurrentPriority$1","runWithPriority$2","restoreControlledState$3","queryRoot","group","querySelectorAll","JSON","stringify","otherNode","form","otherProps","discreteUpdates$1","flushDiscreteUpdates","batchedEventUpdates$1","EventContext","createPortal$1","Internals","Events","IsThisRendererActing","findFiberByHostInstance","bundleType","ReactVersion","rendererPackageName","devToolsConfig","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","hostFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","isDisabled","supportsFiber","inject","internals","exports","findDOMNode","componentOrElement","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","renderSubtreeIntoContainer","containerNode"],"sources":["react-dom.profiling.js"],"sourcesContent":["'use strict';\n\nvar React = require('react');\nvar _assign = require('object-assign');\nvar Scheduler = require('scheduler');\nvar tracing = require('scheduler/tracing');\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n\n  return \"Minified React error #\" + code + \"; visit \" + url + \" for the full message or \" + 'use the non-minified dev environment for full errors and additional ' + 'helpful warnings.';\n}\n\nif (!React) {\n  {\n    throw Error( formatProdErrorMessage(227));\n  }\n}\n\nconst FunctionComponent = 0;\nconst ClassComponent = 1;\nconst IndeterminateComponent = 2; // Before we know whether it is function or class\n\nconst HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nconst HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\nconst HostComponent = 5;\nconst HostText = 6;\nconst Fragment = 7;\nconst Mode = 8;\nconst ContextConsumer = 9;\nconst ContextProvider = 10;\nconst ForwardRef = 11;\nconst Profiler = 12;\nconst SuspenseComponent = 13;\nconst MemoComponent = 14;\nconst SimpleMemoComponent = 15;\nconst LazyComponent = 16;\nconst IncompleteClassComponent = 17;\nconst DehydratedFragment = 18;\nconst SuspenseListComponent = 19;\nconst FundamentalComponent = 20;\nconst ScopeComponent = 21;\nconst Block = 22;\nconst OffscreenComponent = 23;\nconst LegacyHiddenComponent = 24;\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nconst enableProfilerTimer = true; // Record durations for commit and passive effects phases.\n\nconst enableProfilerCommitHooks = false; // Trace which interactions trigger each commit.\n\nconst enableFundamentalAPI = false; // Experimental Scope support.\nconst enableNewReconciler = false; // Errors that are thrown while unmounting (or after in the case of passive effects)\n\nconst allNativeEvents = new Set();\n/**\n * Mapping from registration name to event name\n */\n\n\nconst registrationNameDependencies = {};\n\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + 'Capture', dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n\n  registrationNameDependencies[registrationName] = dependencies;\n\n  for (let i = 0; i < dependencies.length; i++) {\n    allNativeEvents.add(dependencies[i]);\n  }\n}\n\nconst canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nconst RESERVED = 0; // A simple string attribute.\n// Attributes that aren't in the filter are presumed to have this type.\n\nconst STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\n\nconst BOOLEANISH_STRING = 2; // A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n\nconst BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\n\nconst OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\n\nconst NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\n\nconst POSITIVE_NUMERIC = 6;\n\n/* eslint-disable max-len */\nconst ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\nconst ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst ROOT_ATTRIBUTE_NAME = 'data-reactroot';\nconst VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst illegalAttributeNameCache = {};\nconst validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n\n  illegalAttributeNameCache[attributeName] = true;\n\n  return false;\n}\nfunction shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n\n  if (isCustomComponentTag) {\n    return false;\n  }\n\n  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\n    return true;\n  }\n\n  return false;\n}\nfunction shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n\n  switch (typeof value) {\n    case 'function': // $FlowIssue symbol is perfectly valid here\n\n    case 'symbol':\n      // eslint-disable-line\n      return true;\n\n    case 'boolean':\n      {\n        if (isCustomComponentTag) {\n          return false;\n        }\n\n        if (propertyInfo !== null) {\n          return !propertyInfo.acceptsBooleans;\n        } else {\n          const prefix = name.toLowerCase().slice(0, 5);\n          return prefix !== 'data-' && prefix !== 'aria-';\n        }\n      }\n\n    default:\n      return false;\n  }\n}\nfunction shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n\n  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {\n    return true;\n  }\n\n  if (isCustomComponentTag) {\n    return false;\n  }\n\n  if (propertyInfo !== null) {\n\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n\n      case NUMERIC:\n        return isNaN(value);\n\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || value < 1;\n    }\n  }\n\n  return false;\n}\nfunction getPropertyInfo(name) {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {\n  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n  this.sanitizeURL = sanitizeURL;\n  this.removeEmptyString = removeEmptyString;\n} // When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\n\n\nconst properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.\n\nconst reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular\n// elements (not just inputs). Now that ReactDOMInput assigns to the\n// defaultValue property -- do we need this?\n'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];\nreservedProps.forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n\n[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach((_ref) => {\n  let name = _ref[0],\n      attributeName = _ref[1];\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n\n['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML boolean attributes.\n\n['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM\n// on the client side because the browsers are inconsistent. Instead we call focus().\n'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata\n'itemScope'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n\n['checked', // Note: `option.selected` is not updated if `select.multiple` is\n// disabled with `removeAttribute`. We have special logic for handling this.\n'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n\n['capture', 'download' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be positive numbers.\n\n['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n  name, // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These are HTML attributes that must be numbers.\n\n['rowSpan', 'start'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n  name.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n});\nconst CAMELIZE = /[\\-\\:]([a-z])/g;\n\nconst capitalize = token => token[1].toUpperCase(); // This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML attribute filter.\n// Some of these attributes can be hard to find. This list was created by\n// scraping the MDN documentation.\n\n\n['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xlink namespace.\n\n['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL\n  false);\n}); // String SVG attributes with the xml namespace.\n\n['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,\n// you'll need to set attributeName to name.toLowerCase()\n// instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL\n  false);\n}); // These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n\n['tabIndex', 'crossOrigin'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  false, // sanitizeURL\n  false);\n}); // These attributes accept URLs. These must not allow javascript: URLS.\n// These will also need to accept Trusted Types object in the future.\n\nconst xlinkHref = 'xlinkHref';\nproperties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty\n'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL\nfalse);\n['src', 'href', 'action', 'formAction'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty\n  attributeName.toLowerCase(), // attributeName\n  null, // attributeNamespace\n  true, // sanitizeURL\n  true);\n});\n\nfunction sanitizeURL(url) {\n}\n\n/**\n * Sets the value for a property on a node.\n *\n * @param {DOMElement} node\n * @param {string} name\n * @param {*} value\n */\n\nfunction setValueForProperty(node, name, value, isCustomComponentTag) {\n  const propertyInfo = getPropertyInfo(name);\n\n  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\n    return;\n  }\n\n  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\n    value = null;\n  } // If the prop isn't in the special list, treat it as a simple attribute.\n\n\n  if (isCustomComponentTag || propertyInfo === null) {\n    if (isAttributeNameSafe(name)) {\n      const attributeName = name;\n\n      if (value === null) {\n        node.removeAttribute(attributeName);\n      } else {\n        node.setAttribute(attributeName,  '' + value);\n      }\n    }\n\n    return;\n  }\n\n  const mustUseProperty = propertyInfo.mustUseProperty;\n\n  if (mustUseProperty) {\n    const propertyName = propertyInfo.propertyName;\n\n    if (value === null) {\n      const type = propertyInfo.type;\n      node[propertyName] = type === BOOLEAN ? false : '';\n    } else {\n      // Contrary to `setAttribute`, object properties are properly\n      // `toString`ed by IE8/9.\n      node[propertyName] = value;\n    }\n\n    return;\n  } // The rest are treated as attributes with special cases.\n\n\n  const attributeName = propertyInfo.attributeName,\n        attributeNamespace = propertyInfo.attributeNamespace;\n\n  if (value === null) {\n    node.removeAttribute(attributeName);\n  } else {\n    const type = propertyInfo.type;\n    let attributeValue;\n\n    if (type === BOOLEAN || type === OVERLOADED_BOOLEAN && value === true) {\n      // If attribute type is boolean, we know for sure it won't be an execution sink\n      // and we won't require Trusted Type here.\n      attributeValue = '';\n    } else {\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\n      // ('' + value) makes it output the correct toString()-value.\n      {\n        attributeValue = '' + value;\n      }\n\n      if (propertyInfo.sanitizeURL) {\n        sanitizeURL(attributeValue.toString());\n      }\n    }\n\n    if (attributeNamespace) {\n      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\n    } else {\n      node.setAttribute(attributeName, attributeValue);\n    }\n  }\n}\n\nconst ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nlet REACT_ELEMENT_TYPE = 0xeac7;\nlet REACT_PORTAL_TYPE = 0xeaca;\nlet REACT_FRAGMENT_TYPE = 0xeacb;\nlet REACT_STRICT_MODE_TYPE = 0xeacc;\nlet REACT_PROFILER_TYPE = 0xead2;\nlet REACT_PROVIDER_TYPE = 0xeacd;\nlet REACT_CONTEXT_TYPE = 0xeace;\nlet REACT_FORWARD_REF_TYPE = 0xead0;\nlet REACT_SUSPENSE_TYPE = 0xead1;\nlet REACT_SUSPENSE_LIST_TYPE = 0xead8;\nlet REACT_MEMO_TYPE = 0xead3;\nlet REACT_LAZY_TYPE = 0xead4;\nlet REACT_BLOCK_TYPE = 0xead9;\nlet REACT_SCOPE_TYPE = 0xead7;\nlet REACT_OPAQUE_ID_TYPE = 0xeae0;\nlet REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nlet REACT_OFFSCREEN_TYPE = 0xeae2;\nlet REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  const maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nlet prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nlet reentry = false;\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  let control;\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                const frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  return syntheticFrame;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(ctor, true);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction describeFiber(fiber) {\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy');\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList');\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render);\n\n    case Block:\n      return describeFunctionComponentFrame(fiber.type._render);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type);\n\n    default:\n      return '';\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    let info = '';\n    let node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        const provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          const lazyComponent = type;\n          const payload = lazyComponent._payload;\n          const init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction resetCurrentFiber() {\n}\n\n// Flow does not allow string concatenation of most non-string types. To work\n// around this limitation, we use an opaque type that can only be obtained by\n// passing the value through getToStringValue first.\nfunction toString(value) {\n  return '' + value;\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'object':\n    case 'string':\n    case 'undefined':\n      return value;\n\n    default:\n      // function, symbol are assigned as empty strings\n      return '';\n  }\n}\n\nfunction isCheckable(elem) {\n  const type = elem.type;\n  const nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');\n}\n\nfunction getTracker(node) {\n  return node._valueTracker;\n}\n\nfunction detachTracker(node) {\n  node._valueTracker = null;\n}\n\nfunction getValueFromNode(node) {\n  let value = '';\n\n  if (!node) {\n    return value;\n  }\n\n  if (isCheckable(node)) {\n    value = node.checked ? 'true' : 'false';\n  } else {\n    value = node.value;\n  }\n\n  return value;\n}\n\nfunction trackValueOnNode(node) {\n  const valueField = isCheckable(node) ? 'checked' : 'value';\n  const descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);\n  let currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail\n  // and don't track value will cause over reporting of changes,\n  // but it's better then a hard failure\n  // (needed for certain tests that spyOn input values and Safari)\n\n  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {\n    return;\n  }\n\n  const get = descriptor.get,\n        set = descriptor.set;\n  Object.defineProperty(node, valueField, {\n    configurable: true,\n    get: function () {\n      return get.call(this);\n    },\n    set: function (value) {\n      currentValue = '' + value;\n      set.call(this, value);\n    }\n  }); // We could've passed this the first time\n  // but it triggers a bug in IE11 and Edge 14/15.\n  // Calling defineProperty() again should be equivalent.\n  // https://github.com/facebook/react/issues/11768\n\n  Object.defineProperty(node, valueField, {\n    enumerable: descriptor.enumerable\n  });\n  const tracker = {\n    getValue() {\n      return currentValue;\n    },\n\n    setValue(value) {\n      currentValue = '' + value;\n    },\n\n    stopTracking() {\n      detachTracker(node);\n      delete node[valueField];\n    }\n\n  };\n  return tracker;\n}\n\nfunction track(node) {\n  if (getTracker(node)) {\n    return;\n  } // TODO: Once it's just Fiber we can move this to node._wrapperState\n\n\n  node._valueTracker = trackValueOnNode(node);\n}\nfunction updateValueIfChanged(node) {\n  if (!node) {\n    return false;\n  }\n\n  const tracker = getTracker(node); // if there is no tracker at this point it's unlikely\n  // that trying again will succeed\n\n  if (!tracker) {\n    return true;\n  }\n\n  const lastValue = tracker.getValue();\n  const nextValue = getValueFromNode(node);\n\n  if (nextValue !== lastValue) {\n    tracker.setValue(nextValue);\n    return true;\n  }\n\n  return false;\n}\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nfunction isControlled(props) {\n  const usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\n\n\nfunction getHostProps(element, props) {\n  const node = element;\n  const checked = props.checked;\n\n  const hostProps = _assign({}, props, {\n    defaultChecked: undefined,\n    defaultValue: undefined,\n    value: undefined,\n    checked: checked != null ? checked : node._wrapperState.initialChecked\n  });\n\n  return hostProps;\n}\nfunction initWrapperState(element, props) {\n\n  const node = element;\n  const defaultValue = props.defaultValue == null ? '' : props.defaultValue;\n  node._wrapperState = {\n    initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),\n    controlled: isControlled(props)\n  };\n}\nfunction updateChecked(element, props) {\n  const node = element;\n  const checked = props.checked;\n\n  if (checked != null) {\n    setValueForProperty(node, 'checked', checked, false);\n  }\n}\nfunction updateWrapper(element, props) {\n  const node = element;\n\n  updateChecked(element, props);\n  const value = getToStringValue(props.value);\n  const type = props.type;\n\n  if (value != null) {\n    if (type === 'number') {\n      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.\n      // eslint-disable-next-line\n      node.value != value) {\n        node.value = toString(value);\n      }\n    } else if (node.value !== toString(value)) {\n      node.value = toString(value);\n    }\n  } else if (type === 'submit' || type === 'reset') {\n    // Submit/reset inputs need the attribute removed completely to avoid\n    // blank-text buttons.\n    node.removeAttribute('value');\n    return;\n  }\n\n  {\n    // When syncing the value attribute, the value comes from a cascade of\n    // properties:\n    //  1. The value React property\n    //  2. The defaultValue React property\n    //  3. Otherwise there should be no change\n    if (props.hasOwnProperty('value')) {\n      setDefaultValue(node, props.type, value);\n    } else if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  }\n\n  {\n    // When syncing the checked attribute, it only changes when it needs\n    // to be removed, such as transitioning from a checkbox into a text input\n    if (props.checked == null && props.defaultChecked != null) {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  }\n}\nfunction postMountWrapper(element, props, isHydrating) {\n  const node = element; // Do not assign value if it is already set. This prevents user text input\n  // from being lost during SSR hydration.\n\n  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\n    const type = props.type;\n    const isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the\n    // default value provided by the browser. See: #12872\n\n    if (isButton && (props.value === undefined || props.value === null)) {\n      return;\n    }\n\n    const initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input\n    // from being lost during SSR hydration.\n\n    if (!isHydrating) {\n      {\n        // When syncing the value attribute, the value property should use\n        // the wrapperState._initialValue property. This uses:\n        //\n        //   1. The value React property when present\n        //   2. The defaultValue React property when present\n        //   3. An empty string\n        if (initialValue !== node.value) {\n          node.value = initialValue;\n        }\n      }\n    }\n\n    {\n      // Otherwise, the value attribute is synchronized to the property,\n      // so we assign defaultValue to the same thing as the value property\n      // assignment step above.\n      node.defaultValue = initialValue;\n    }\n  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n  // this is needed to work around a chrome bug where setting defaultChecked\n  // will sometimes influence the value of checked (even after detachment).\n  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n  // We need to temporarily unset name to avoid disrupting radio button groups.\n\n\n  const name = node.name;\n\n  if (name !== '') {\n    node.name = '';\n  }\n\n  {\n    // When syncing the checked attribute, both the checked property and\n    // attribute are assigned at the same time using defaultChecked. This uses:\n    //\n    //   1. The checked React property when present\n    //   2. The defaultChecked React property when present\n    //   3. Otherwise, false\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !!node._wrapperState.initialChecked;\n  }\n\n  if (name !== '') {\n    node.name = name;\n  }\n}\nfunction restoreControlledState(element, props) {\n  const node = element;\n  updateWrapper(node, props);\n  updateNamedCousins(node, props);\n}\n\nfunction updateNamedCousins(rootNode, props) {\n  const name = props.name;\n\n  if (props.type === 'radio' && name != null) {\n    let queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    } // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form. It might not even be in the\n    // document. Let's just use the local `querySelectorAll` to ensure we don't\n    // miss anything.\n\n\n    const group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (let i = 0; i < group.length; i++) {\n      const otherNode = group[i];\n\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      } // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n\n\n      const otherProps = getFiberCurrentPropsFromNode(otherNode);\n\n      if (!otherProps) {\n        {\n          throw Error( formatProdErrorMessage(90));\n        }\n      } // We need update the tracked value on the named cousin since the value\n      // was changed but the input saw no event or value set\n\n\n      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n\n      updateWrapper(otherNode, otherProps);\n    }\n  }\n} // In Chrome, assigning defaultValue to certain input types triggers input validation.\n// For number inputs, the display value loses trailing decimal points. For email inputs,\n// Chrome raises \"The specified value <x> is not a valid email address\".\n//\n// Here we check to see if the defaultValue has actually changed, avoiding these problems\n// when the user is inputting text\n//\n// https://github.com/facebook/react/issues/7253\n\n\nfunction setDefaultValue(node, type, value) {\n  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\n  type !== 'number' || getActiveElement(node.ownerDocument) !== node) {\n    if (value == null) {\n      node.defaultValue = toString(node._wrapperState.initialValue);\n    } else if (node.defaultValue !== toString(value)) {\n      node.defaultValue = toString(value);\n    }\n  }\n}\n\nfunction flattenChildren(children) {\n  let content = ''; // Flatten children. We'll warn if they are invalid\n  // during validateProps() which runs for hydration too.\n  // Note that this would throw on non-element objects.\n  // Elements are stringified (which is normally irrelevant\n  // but matters for <fbt>).\n\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n\n    content += child; // Note: we don't warn about invalid children here.\n    // Instead, this is done separately below so that\n    // it happens during the hydration code path too.\n  });\n  return content;\n}\nfunction postMountWrapper$1(element, props) {\n  // value=\"\" should make a value attribute (#6219)\n  if (props.value != null) {\n    element.setAttribute('value', toString(getToStringValue(props.value)));\n  }\n}\nfunction getHostProps$1(element, props) {\n  const hostProps = _assign({\n    children: undefined\n  }, props);\n\n  const content = flattenChildren(props.children);\n\n  if (content) {\n    hostProps.children = content;\n  }\n\n  return hostProps;\n}\n\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  const options = node.options;\n\n  if (multiple) {\n    const selectedValues = propValue;\n    const selectedValue = {};\n\n    for (let i = 0; i < selectedValues.length; i++) {\n      // Prefix to avoid chaos with special keys.\n      selectedValue['$' + selectedValues[i]] = true;\n    }\n\n    for (let i = 0; i < options.length; i++) {\n      const selected = selectedValue.hasOwnProperty('$' + options[i].value);\n\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n\n      if (selected && setDefaultSelected) {\n        options[i].defaultSelected = true;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    const selectedValue = toString(getToStringValue(propValue));\n    let defaultSelected = null;\n\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n\n        if (setDefaultSelected) {\n          options[i].defaultSelected = true;\n        }\n\n        return;\n      }\n\n      if (defaultSelected === null && !options[i].disabled) {\n        defaultSelected = options[i];\n      }\n    }\n\n    if (defaultSelected !== null) {\n      defaultSelected.selected = true;\n    }\n  }\n}\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\n\n\nfunction getHostProps$2(element, props) {\n  return _assign({}, props, {\n    value: undefined\n  });\n}\nfunction initWrapperState$1(element, props) {\n  const node = element;\n\n  node._wrapperState = {\n    wasMultiple: !!props.multiple\n  };\n}\nfunction postMountWrapper$2(element, props) {\n  const node = element;\n  node.multiple = !!props.multiple;\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (props.defaultValue != null) {\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\n  }\n}\nfunction postUpdateWrapper(element, props) {\n  const node = element;\n  const wasMultiple = node._wrapperState.wasMultiple;\n  node._wrapperState.wasMultiple = !!props.multiple;\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (wasMultiple !== !!props.multiple) {\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n    if (props.defaultValue != null) {\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\n    } else {\n      // Revert the select back to its default unselected state.\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n    }\n  }\n}\nfunction restoreControlledState$1(element, props) {\n  const node = element;\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nfunction getHostProps$3(element, props) {\n  const node = element;\n\n  if (!(props.dangerouslySetInnerHTML == null)) {\n    {\n      throw Error( formatProdErrorMessage(91));\n    }\n  } // Always set children to the same thing. In IE9, the selection range will\n  // get reset if `textContent` is mutated.  We could add a check in setTextContent\n  // to only set the value if/when the value differs from the node value (which would\n  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\n  // solution. The value can be a boolean or object so that's why it's forced\n  // to be a string.\n\n\n  const hostProps = _assign({}, props, {\n    value: undefined,\n    defaultValue: undefined,\n    children: toString(node._wrapperState.initialValue)\n  });\n\n  return hostProps;\n}\nfunction initWrapperState$2(element, props) {\n  const node = element;\n\n  let initialValue = props.value; // Only bother fetching default value if we're going to use it\n\n  if (initialValue == null) {\n    let children = props.children,\n        defaultValue = props.defaultValue;\n\n    if (children != null) {\n\n      {\n        if (!(defaultValue == null)) {\n          {\n            throw Error( formatProdErrorMessage(92));\n          }\n        }\n\n        if (Array.isArray(children)) {\n          if (!(children.length <= 1)) {\n            {\n              throw Error( formatProdErrorMessage(93));\n            }\n          }\n\n          children = children[0];\n        }\n\n        defaultValue = children;\n      }\n    }\n\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n\n    initialValue = defaultValue;\n  }\n\n  node._wrapperState = {\n    initialValue: getToStringValue(initialValue)\n  };\n}\nfunction updateWrapper$1(element, props) {\n  const node = element;\n  const value = getToStringValue(props.value);\n  const defaultValue = getToStringValue(props.defaultValue);\n\n  if (value != null) {\n    // Cast `value` to a string to ensure the value is set correctly. While\n    // browsers typically do this as necessary, jsdom doesn't.\n    const newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed\n\n    if (newValue !== node.value) {\n      node.value = newValue;\n    }\n\n    if (props.defaultValue == null && node.defaultValue !== newValue) {\n      node.defaultValue = newValue;\n    }\n  }\n\n  if (defaultValue != null) {\n    node.defaultValue = toString(defaultValue);\n  }\n}\nfunction postMountWrapper$3(element, props) {\n  const node = element; // This is in postMount because we need access to the DOM node, which is not\n  // available until after the component has mounted.\n\n  const textContent = node.textContent; // Only set node.value if textContent is equal to the expected\n  // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n  // will populate textContent as well.\n  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n\n  if (textContent === node._wrapperState.initialValue) {\n    if (textContent !== '' && textContent !== null) {\n      node.value = textContent;\n    }\n  }\n}\nfunction restoreControlledState$2(element, props) {\n  // DOM component is still mounted; update\n  updateWrapper$1(element, props);\n}\n\nconst HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nconst MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nconst Namespaces = {\n  html: HTML_NAMESPACE,\n  mathml: MATH_NAMESPACE,\n  svg: SVG_NAMESPACE\n}; // Assumes there is no parent namespace.\n\nfunction getIntrinsicNamespace(type) {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n\n    case 'math':\n      return MATH_NAMESPACE;\n\n    default:\n      return HTML_NAMESPACE;\n  }\n}\nfunction getChildNamespace(parentNamespace, type) {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE;\n  } // By default, pass namespace below.\n\n\n  return parentNamespace;\n}\n\n/* globals MSApp */\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\nconst createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nlet reusableSVGContainer;\n/**\n * Set the innerHTML property of a node\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\n\nconst setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  if (node.namespaceURI === Namespaces.svg) {\n\n    if (!('innerHTML' in node)) {\n      // IE does not have innerHTML for SVG nodes, so instead we inject the\n      // new markup in a temp node and then move the child nodes across into\n      // the target node\n      reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';\n      const svgNode = reusableSVGContainer.firstChild;\n\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n\n      while (svgNode.firstChild) {\n        node.appendChild(svgNode.firstChild);\n      }\n\n      return;\n    }\n  }\n\n  node.innerHTML = html;\n});\n\n/**\n * HTML nodeType values that represent the type of the node\n */\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_FRAGMENT_NODE = 11;\n\n/**\n * Set the textContent property of a node. For text updates, it's faster\n * to set the `nodeValue` of the Text node directly instead of using\n * `.textContent` which will remove the existing node and create a new one.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\n\nconst setTextContent = function (node, text) {\n  if (text) {\n    const firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n\n  node.textContent = text;\n};\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nconst isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\n\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\n\n\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\n\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\n\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n  const isEmpty = value == null || typeof value === 'boolean' || value === '';\n\n  if (isEmpty) {\n    return '';\n  }\n\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return ('' + value).trim();\n}\n\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\n\nfunction setValueForStyles(node, styles) {\n  const style = node.style;\n\n  for (let styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n\n    const isCustomProperty = styleName.indexOf('--') === 0;\n\n    const styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\n// For HTML, certain tags should omit their close tag. We keep a list for\n// those special-case tags.\nconst omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.\n\n};\n\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nconst voidElementTags = _assign({\n  menuitem: true\n}, omittedCloseTags);\n\nconst HTML = '__html';\n\nfunction assertValidProps(tag, props) {\n  if (!props) {\n    return;\n  } // Note the use of `==` which checks for null or undefined.\n\n\n  if (voidElementTags[tag]) {\n    if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {\n      {\n        throw Error( formatProdErrorMessage(137, tag));\n      }\n    }\n  }\n\n  if (props.dangerouslySetInnerHTML != null) {\n    if (!(props.children == null)) {\n      {\n        throw Error( formatProdErrorMessage(60));\n      }\n    }\n\n    if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML)) {\n      {\n        throw Error( formatProdErrorMessage(61));\n      }\n    }\n  }\n\n  if (!(props.style == null || typeof props.style === 'object')) {\n    {\n      throw Error( formatProdErrorMessage(62));\n    }\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this list too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n\n    default:\n      return true;\n  }\n}\n\nconst IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;\nconst IS_NON_DELEGATED = 1 << 1;\nconst IS_CAPTURE_PHASE = 1 << 2;\nconst IS_REPLAYED = 1 << 4;\n// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when\n// we call willDeferLaterForLegacyFBSupport, thus not bailing out\n// will result in endless cycles like an infinite loop.\n// We also don't want to defer during event replaying.\n\nconst SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  let target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963\n\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n\n\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nlet restoreImpl = null;\nlet restoreTarget = null;\nlet restoreQueue = null;\n\nfunction restoreStateOfTarget(target) {\n  // We perform this translation at the end of the event loop so that we\n  // always receive the correct fiber here\n  const internalInstance = getInstanceFromNode(target);\n\n  if (!internalInstance) {\n    // Unmounted\n    return;\n  }\n\n  if (!(typeof restoreImpl === 'function')) {\n    {\n      throw Error( formatProdErrorMessage(280));\n    }\n  }\n\n  const stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.\n\n  if (stateNode) {\n    const props = getFiberCurrentPropsFromNode(stateNode);\n    restoreImpl(internalInstance.stateNode, internalInstance.type, props);\n  }\n}\n\nfunction setRestoreImplementation(impl) {\n  restoreImpl = impl;\n}\nfunction enqueueStateRestore(target) {\n  if (restoreTarget) {\n    if (restoreQueue) {\n      restoreQueue.push(target);\n    } else {\n      restoreQueue = [target];\n    }\n  } else {\n    restoreTarget = target;\n  }\n}\nfunction needsStateRestore() {\n  return restoreTarget !== null || restoreQueue !== null;\n}\nfunction restoreStateIfNeeded() {\n  if (!restoreTarget) {\n    return;\n  }\n\n  const target = restoreTarget;\n  const queuedTargets = restoreQueue;\n  restoreTarget = null;\n  restoreQueue = null;\n  restoreStateOfTarget(target);\n\n  if (queuedTargets) {\n    for (let i = 0; i < queuedTargets.length; i++) {\n      restoreStateOfTarget(queuedTargets[i]);\n    }\n  }\n}\n\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n// Defaults\n\nlet batchedUpdatesImpl = function (fn, bookkeeping) {\n  return fn(bookkeeping);\n};\n\nlet discreteUpdatesImpl = function (fn, a, b, c, d) {\n  return fn(a, b, c, d);\n};\n\nlet flushDiscreteUpdatesImpl = function () {};\n\nlet batchedEventUpdatesImpl = batchedUpdatesImpl;\nlet isInsideEventHandler = false;\nlet isBatchingEventUpdates = false;\n\nfunction finishEventHandler() {\n  // Here we wait until all updates have propagated, which is important\n  // when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  // Then we restore state of any controlled component.\n  const controlledComponentsHavePendingUpdates = needsStateRestore();\n\n  if (controlledComponentsHavePendingUpdates) {\n    // If a controlled event was fired, we may need to restore the state of\n    // the DOM node back to the controlled value. This is necessary when React\n    // bails out of the update without touching the DOM.\n    flushDiscreteUpdatesImpl();\n    restoreStateIfNeeded();\n  }\n}\n\nfunction batchedUpdates(fn, bookkeeping) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n\n  isInsideEventHandler = true;\n\n  try {\n    return batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    isInsideEventHandler = false;\n    finishEventHandler();\n  }\n}\nfunction batchedEventUpdates(fn, a, b) {\n  if (isBatchingEventUpdates) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(a, b);\n  }\n\n  isBatchingEventUpdates = true;\n\n  try {\n    return batchedEventUpdatesImpl(fn, a, b);\n  } finally {\n    isBatchingEventUpdates = false;\n    finishEventHandler();\n  }\n}\nfunction discreteUpdates(fn, a, b, c, d) {\n  const prevIsInsideEventHandler = isInsideEventHandler;\n  isInsideEventHandler = true;\n\n  try {\n    return discreteUpdatesImpl(fn, a, b, c, d);\n  } finally {\n    isInsideEventHandler = prevIsInsideEventHandler;\n\n    if (!isInsideEventHandler) {\n      finishEventHandler();\n    }\n  }\n}\nfunction flushDiscreteUpdatesIfNeeded(timeStamp) {\n  {\n    if (!isInsideEventHandler) {\n      flushDiscreteUpdatesImpl();\n    }\n  }\n}\nfunction setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n  discreteUpdatesImpl = _discreteUpdatesImpl;\n  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;\n  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n    case 'onMouseEnter':\n      return !!(props.disabled && isInteractive(type));\n\n    default:\n      return false;\n  }\n}\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\n\n\nfunction getListener(inst, registrationName) {\n  const stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n\n  const props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  const listener = props[registrationName];\n\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n\n  if (!(!listener || typeof listener === 'function')) {\n    {\n      throw Error( formatProdErrorMessage(231, registrationName, typeof listener));\n    }\n  }\n\n  return listener;\n}\n\nlet passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\nif (canUseDOM) {\n  try {\n    const options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value\n\n    Object.defineProperty(options, 'passive', {\n      get: function () {\n        passiveBrowserEventsSupported = true;\n      }\n    });\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = false;\n  }\n}\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nlet invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\nlet hasError = false;\nlet caughtError = null; // Used by event system to capture/rethrow the first error.\n\nlet hasRethrowError = false;\nlet rethrowError = null;\nconst reporter = {\n  onError(error) {\n    hasError = true;\n    caughtError = error;\n  }\n\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n  invokeGuardedCallback.apply(this, arguments);\n\n  if (hasError) {\n    const error = clearCaughtError();\n\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\n\nfunction rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    {\n      {\n        throw Error( formatProdErrorMessage(198));\n      }\n    }\n  }\n}\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction has(key) {\n  return key._reactInternals !== undefined;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nconst NoFlags =\n/*                      */\n0b000000000000000000;\nconst PerformedWork =\n/*                */\n0b000000000000000001; // You can change the rest (and add more).\n\nconst Placement =\n/*                    */\n0b000000000000000010;\nconst Update =\n/*                       */\n0b000000000000000100;\nconst PlacementAndUpdate =\n/*           */\n0b000000000000000110;\nconst Deletion =\n/*                     */\n0b000000000000001000;\nconst ContentReset =\n/*                 */\n0b000000000000010000;\nconst Callback =\n/*                     */\n0b000000000000100000;\nconst DidCapture =\n/*                   */\n0b000000000001000000;\nconst Ref =\n/*                          */\n0b000000000010000000;\nconst Snapshot =\n/*                     */\n0b000000000100000000;\nconst Passive =\n/*                      */\n0b000000001000000000; // TODO (effects) Remove this bit once the new reconciler is synced to the old.\nconst Hydrating =\n/*                    */\n0b000000010000000000;\nconst HydratingAndUpdate =\n/*           */\n0b000000010000000100; // Passive & Update & Callback & Ref & Snapshot\n\nconst LifecycleEffectMask =\n/*          */\n0b000000001110100100; // Union of all host effects\n\nconst HostEffectMask =\n/*               */\n0b000000011111111111; // These are not really side effects, but we still reuse this field.\n\nconst Incomplete =\n/*                   */\n0b000000100000000000;\nconst ShouldCapture =\n/*                */\n0b000001000000000000;\nconst ForceUpdateForLegacySuspense =\n/* */\n0b000100000000000000; // Static tags describe aspects of a fiber that are not specific to a render,\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  let node = fiber;\n  let nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n\n  return null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState = fiber.memoizedState;\n\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n\n  return null;\n}\nfunction getContainerFromFiber(fiber) {\n  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;\n}\nfunction isFiberMounted(fiber) {\n  return getNearestMountedFiber(fiber) === fiber;\n}\nfunction isMounted(component) {\n\n  const fiber = get(component);\n\n  if (!fiber) {\n    return false;\n  }\n\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (!(getNearestMountedFiber(fiber) === fiber)) {\n    {\n      throw Error( formatProdErrorMessage(188));\n    }\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  const alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n\n    if (!(nearestMounted !== null)) {\n      {\n        throw Error( formatProdErrorMessage(188));\n      }\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n\n  let a = fiber;\n  let b = alternate;\n\n  while (true) {\n    const parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    const parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n\n      {\n        {\n          throw Error( formatProdErrorMessage(188));\n        }\n      }\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        child = child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          child = child.sibling;\n        }\n\n        if (!didFindChild) {\n          {\n            throw Error( formatProdErrorMessage(189));\n          }\n        }\n      }\n    }\n\n    if (!(a.alternate === b)) {\n      {\n        throw Error( formatProdErrorMessage(190));\n      }\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n\n  if (!(a.tag === HostRoot)) {\n    {\n      throw Error( formatProdErrorMessage(188));\n    }\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n\n  return alternate;\n}\nfunction findCurrentHostFiber(parent) {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n\n  if (!currentParent) {\n    return null;\n  } // Next we'll drill down this component to find the first HostComponent/Text.\n\n\n  let node = currentParent;\n\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === currentParent) {\n      return null;\n    }\n\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  } // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n\n\n  return null;\n}\nfunction doesFiberContain(parentFiber, childFiber) {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n\n    node = node.return;\n  }\n\n  return false;\n}\n\nlet attemptUserBlockingHydration;\nfunction setAttemptUserBlockingHydration(fn) {\n  attemptUserBlockingHydration = fn;\n}\nlet attemptContinuousHydration;\nfunction setAttemptContinuousHydration(fn) {\n  attemptContinuousHydration = fn;\n}\nlet attemptHydrationAtCurrentPriority;\nfunction setAttemptHydrationAtCurrentPriority(fn) {\n  attemptHydrationAtCurrentPriority = fn;\n}\nlet attemptHydrationAtPriority;\nfunction setAttemptHydrationAtPriority(fn) {\n  attemptHydrationAtPriority = fn;\n} // TODO: Upgrade this definition once we're on a newer version of Flow that\nlet hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.\n\nconst queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.\n// if the last target was dehydrated.\n\nlet queuedFocus = null;\nlet queuedDrag = null;\nlet queuedMouse = null; // For pointer events there can be one latest event per pointerId.\n\nconst queuedPointers = new Map();\nconst queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.\n\nconst queuedExplicitHydrationTargets = [];\nfunction hasQueuedDiscreteEvents() {\n  return queuedDiscreteEvents.length > 0;\n}\nconst discreteReplayableEvents = ['mousedown', 'mouseup', 'touchcancel', 'touchend', 'touchstart', 'auxclick', 'dblclick', 'pointercancel', 'pointerdown', 'pointerup', 'dragend', 'dragstart', 'drop', 'compositionend', 'compositionstart', 'keydown', 'keypress', 'keyup', 'input', 'textInput', // Intentionally camelCase\n'copy', 'cut', 'paste', 'click', 'change', 'contextmenu', 'reset', 'submit'];\nfunction isReplayableDiscreteEvent(eventType) {\n  return discreteReplayableEvents.indexOf(eventType) > -1;\n}\n\nfunction createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  return {\n    blockedOn,\n    domEventName,\n    eventSystemFlags: eventSystemFlags | IS_REPLAYED,\n    nativeEvent,\n    targetContainers: [targetContainer]\n  };\n}\n\nfunction queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  const queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);\n  queuedDiscreteEvents.push(queuedEvent);\n} // Resets the replaying for this type of continuous event to no event.\n\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case 'focusin':\n    case 'focusout':\n      queuedFocus = null;\n      break;\n\n    case 'dragenter':\n    case 'dragleave':\n      queuedDrag = null;\n      break;\n\n    case 'mouseover':\n    case 'mouseout':\n      queuedMouse = null;\n      break;\n\n    case 'pointerover':\n    case 'pointerout':\n      {\n        const pointerId = nativeEvent.pointerId;\n        queuedPointers.delete(pointerId);\n        break;\n      }\n\n    case 'gotpointercapture':\n    case 'lostpointercapture':\n      {\n        const pointerId = nativeEvent.pointerId;\n        queuedPointerCaptures.delete(pointerId);\n        break;\n      }\n  }\n}\n\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {\n    const queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);\n\n    if (blockedOn !== null) {\n      const fiber = getInstanceFromNode(blockedOn);\n\n      if (fiber !== null) {\n        // Attempt to increase the priority of this target.\n        attemptContinuousHydration(fiber);\n      }\n    }\n\n    return queuedEvent;\n  } // If we have already queued this exact event, then it's because\n  // the different event systems have different DOM event listeners.\n  // We can accumulate the flags, and the targetContainers, and\n  // store a single event to be replayed.\n\n\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  const targetContainers = existingQueuedEvent.targetContainers;\n\n  if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {\n    targetContainers.push(targetContainer);\n  }\n\n  return existingQueuedEvent;\n}\n\nfunction queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  // These set relatedTarget to null because the replayed event will be treated as if we\n  // moved from outside the window (no target) onto the target once it hydrates.\n  // Instead of mutating we could clone the event.\n  switch (domEventName) {\n    case 'focusin':\n      {\n        const focusEvent = nativeEvent;\n        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);\n        return true;\n      }\n\n    case 'dragenter':\n      {\n        const dragEvent = nativeEvent;\n        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);\n        return true;\n      }\n\n    case 'mouseover':\n      {\n        const mouseEvent = nativeEvent;\n        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);\n        return true;\n      }\n\n    case 'pointerover':\n      {\n        const pointerEvent = nativeEvent;\n        const pointerId = pointerEvent.pointerId;\n        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));\n        return true;\n      }\n\n    case 'gotpointercapture':\n      {\n        const pointerEvent = nativeEvent;\n        const pointerId = pointerEvent.pointerId;\n        queuedPointerCaptures.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));\n        return true;\n      }\n  }\n\n  return false;\n} // Check if this target is unblocked. Returns true if it's unblocked.\n\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  // TODO: This function shares a lot of logic with attemptToDispatchEvent.\n  // Try to unify them. It's a bit tricky since it would require two return\n  // values.\n  const targetInst = getClosestInstanceFromNode(queuedTarget.target);\n\n  if (targetInst !== null) {\n    const nearestMounted = getNearestMountedFiber(targetInst);\n\n    if (nearestMounted !== null) {\n      const tag = nearestMounted.tag;\n\n      if (tag === SuspenseComponent) {\n        const instance = getSuspenseInstanceFromFiber(nearestMounted);\n\n        if (instance !== null) {\n          // We're blocked on hydrating this boundary.\n          // Increase its priority.\n          queuedTarget.blockedOn = instance;\n          attemptHydrationAtPriority(queuedTarget.lanePriority, () => {\n            Scheduler.unstable_runWithPriority(queuedTarget.priority, () => {\n              attemptHydrationAtCurrentPriority(nearestMounted);\n            });\n          });\n          return;\n        }\n      } else if (tag === HostRoot) {\n        const root = nearestMounted.stateNode;\n\n        if (root.hydrate) {\n          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of\n          // a root other than sync.\n\n          return;\n        }\n      }\n    }\n  }\n\n  queuedTarget.blockedOn = null;\n}\n\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (queuedEvent.blockedOn !== null) {\n    return false;\n  }\n\n  const targetContainers = queuedEvent.targetContainers;\n\n  while (targetContainers.length > 0) {\n    const targetContainer = targetContainers[0];\n    const nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);\n\n    if (nextBlockedOn !== null) {\n      // We're still blocked. Try again later.\n      const fiber = getInstanceFromNode(nextBlockedOn);\n\n      if (fiber !== null) {\n        attemptContinuousHydration(fiber);\n      }\n\n      queuedEvent.blockedOn = nextBlockedOn;\n      return false;\n    } // This target container was successfully dispatched. Try the next.\n\n\n    targetContainers.shift();\n  }\n\n  return true;\n}\n\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {\n    map.delete(key);\n  }\n}\n\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = false; // First replay discrete events.\n\n  while (queuedDiscreteEvents.length > 0) {\n    const nextDiscreteEvent = queuedDiscreteEvents[0];\n\n    if (nextDiscreteEvent.blockedOn !== null) {\n      // We're still blocked.\n      // Increase the priority of this boundary to unblock\n      // the next discrete event.\n      const fiber = getInstanceFromNode(nextDiscreteEvent.blockedOn);\n\n      if (fiber !== null) {\n        attemptUserBlockingHydration(fiber);\n      }\n\n      break;\n    }\n\n    const targetContainers = nextDiscreteEvent.targetContainers;\n\n    while (targetContainers.length > 0) {\n      const targetContainer = targetContainers[0];\n      const nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);\n\n      if (nextBlockedOn !== null) {\n        // We're still blocked. Try again later.\n        nextDiscreteEvent.blockedOn = nextBlockedOn;\n        break;\n      } // This target container was successfully dispatched. Try the next.\n\n\n      targetContainers.shift();\n    }\n\n    if (nextDiscreteEvent.blockedOn === null) {\n      // We've successfully replayed the first event. Let's try the next one.\n      queuedDiscreteEvents.shift();\n    }\n  } // Next replay any continuous events.\n\n\n  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {\n    queuedFocus = null;\n  }\n\n  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {\n    queuedDrag = null;\n  }\n\n  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {\n    queuedMouse = null;\n  }\n\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\n\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  if (queuedEvent.blockedOn === unblocked) {\n    queuedEvent.blockedOn = null;\n\n    if (!hasScheduledReplayAttempt) {\n      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are\n      // now unblocked. This first might not actually be unblocked yet.\n      // We could check it early to avoid scheduling an unnecessary callback.\n\n      Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);\n    }\n  }\n}\n\nfunction retryIfBlockedOn(unblocked) {\n  // Mark anything that was blocked on this as no longer blocked\n  // and eligible for a replay.\n  if (queuedDiscreteEvents.length > 0) {\n    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's\n    // worth it because we expect very few discrete events to queue up and once\n    // we are actually fully unblocked it will be fast to replay them.\n\n    for (let i = 1; i < queuedDiscreteEvents.length; i++) {\n      const queuedEvent = queuedDiscreteEvents[i];\n\n      if (queuedEvent.blockedOn === unblocked) {\n        queuedEvent.blockedOn = null;\n      }\n    }\n  }\n\n  if (queuedFocus !== null) {\n    scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  }\n\n  if (queuedDrag !== null) {\n    scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  }\n\n  if (queuedMouse !== null) {\n    scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  }\n\n  const unblock = queuedEvent => scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n\n  for (let i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    const queuedTarget = queuedExplicitHydrationTargets[i];\n\n    if (queuedTarget.blockedOn === unblocked) {\n      queuedTarget.blockedOn = null;\n    }\n  }\n\n  while (queuedExplicitHydrationTargets.length > 0) {\n    const nextExplicitTarget = queuedExplicitHydrationTargets[0];\n\n    if (nextExplicitTarget.blockedOn !== null) {\n      // We're still blocked.\n      break;\n    } else {\n      attemptExplicitHydrationTarget(nextExplicitTarget);\n\n      if (nextExplicitTarget.blockedOn === null) {\n        // We're unblocked.\n        queuedExplicitHydrationTargets.shift();\n      }\n    }\n  }\n}\n\nconst DiscreteEvent = 0;\nconst UserBlockingEvent = 1;\nconst ContinuousEvent = 2;\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\n\nfunction makePrefixMap(styleProp, eventName) {\n  const prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  return prefixes;\n}\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\n\n\nconst vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\n\nconst prefixedEventNames = {};\n/**\n * Element to check for prefixes on.\n */\n\nlet style = {};\n/**\n * Bootstrap if a DOM exists.\n */\n\nif (canUseDOM) {\n  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  } // Same as above\n\n\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\n\n\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  const prefixMap = vendorPrefixes[eventName];\n\n  for (const styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return eventName;\n}\n\nconst ANIMATION_END = getVendorPrefixedEventName('animationend');\nconst ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');\nconst ANIMATION_START = getVendorPrefixedEventName('animationstart');\nconst TRANSITION_END = getVendorPrefixedEventName('transitionend');\n\nconst topLevelEventsToReactNames = new Map();\nconst eventPriorities = new Map(); // We store most of the events in this module in pairs of two strings so we can re-use\n// the code required to apply the same logic for event prioritization and that of the\n// SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code\n// duplication (for which there would be quite a bit). For the events that are not needed\n// for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an\n// array of top level events.\n// Lastly, we ignore prettier so we can keep the formatting sane.\n// prettier-ignore\n\nconst discreteEventPairsForSimpleEventPlugin = ['cancel', 'cancel', 'click', 'click', 'close', 'close', 'contextmenu', 'contextMenu', 'copy', 'copy', 'cut', 'cut', 'auxclick', 'auxClick', 'dblclick', 'doubleClick', // Careful!\n'dragend', 'dragEnd', 'dragstart', 'dragStart', 'drop', 'drop', 'focusin', 'focus', // Careful!\n'focusout', 'blur', // Careful!\n'input', 'input', 'invalid', 'invalid', 'keydown', 'keyDown', 'keypress', 'keyPress', 'keyup', 'keyUp', 'mousedown', 'mouseDown', 'mouseup', 'mouseUp', 'paste', 'paste', 'pause', 'pause', 'play', 'play', 'pointercancel', 'pointerCancel', 'pointerdown', 'pointerDown', 'pointerup', 'pointerUp', 'ratechange', 'rateChange', 'reset', 'reset', 'seeked', 'seeked', 'submit', 'submit', 'touchcancel', 'touchCancel', 'touchend', 'touchEnd', 'touchstart', 'touchStart', 'volumechange', 'volumeChange'];\nconst otherDiscreteEvents = ['change', 'selectionchange', 'textInput', 'compositionstart', 'compositionend', 'compositionupdate'];\n\n\nconst userBlockingPairsForSimpleEventPlugin = ['drag', 'drag', 'dragenter', 'dragEnter', 'dragexit', 'dragExit', 'dragleave', 'dragLeave', 'dragover', 'dragOver', 'mousemove', 'mouseMove', 'mouseout', 'mouseOut', 'mouseover', 'mouseOver', 'pointermove', 'pointerMove', 'pointerout', 'pointerOut', 'pointerover', 'pointerOver', 'scroll', 'scroll', 'toggle', 'toggle', 'touchmove', 'touchMove', 'wheel', 'wheel']; // prettier-ignore\n\nconst continuousPairsForSimpleEventPlugin = ['abort', 'abort', ANIMATION_END, 'animationEnd', ANIMATION_ITERATION, 'animationIteration', ANIMATION_START, 'animationStart', 'canplay', 'canPlay', 'canplaythrough', 'canPlayThrough', 'durationchange', 'durationChange', 'emptied', 'emptied', 'encrypted', 'encrypted', 'ended', 'ended', 'error', 'error', 'gotpointercapture', 'gotPointerCapture', 'load', 'load', 'loadeddata', 'loadedData', 'loadedmetadata', 'loadedMetadata', 'loadstart', 'loadStart', 'lostpointercapture', 'lostPointerCapture', 'playing', 'playing', 'progress', 'progress', 'seeking', 'seeking', 'stalled', 'stalled', 'suspend', 'suspend', 'timeupdate', 'timeUpdate', TRANSITION_END, 'transitionEnd', 'waiting', 'waiting'];\n/**\n * Turns\n * ['abort', ...]\n *\n * into\n *\n * topLevelEventsToReactNames = new Map([\n *   ['abort', 'onAbort'],\n * ]);\n *\n * and registers them.\n */\n\nfunction registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {\n  // As the event types are in pairs of two, we need to iterate\n  // through in twos. The events are in pairs of two to save code\n  // and improve init perf of processing this array, as it will\n  // result in far fewer object allocations and property accesses\n  // if we only use three arrays to process all the categories of\n  // instead of tuples.\n  for (let i = 0; i < eventTypes.length; i += 2) {\n    const topEvent = eventTypes[i];\n    const event = eventTypes[i + 1];\n    const capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n    const reactName = 'on' + capitalizedEvent;\n    eventPriorities.set(topEvent, priority);\n    topLevelEventsToReactNames.set(topEvent, reactName);\n    registerTwoPhaseEvent(reactName, [topEvent]);\n  }\n}\n\nfunction setEventPriorities(eventTypes, priority) {\n  for (let i = 0; i < eventTypes.length; i++) {\n    eventPriorities.set(eventTypes[i], priority);\n  }\n}\n\nfunction getEventPriorityForPluginSystem(domEventName) {\n  const priority = eventPriorities.get(domEventName); // Default to a ContinuousEvent. Note: we might\n  // want to warn if we can't detect the priority\n  // for the event.\n\n  return priority === undefined ? ContinuousEvent : priority;\n}\nfunction registerSimpleEvents() {\n  registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);\n  registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);\n  registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);\n  setEventPriorities(otherDiscreteEvents, DiscreteEvent);\n}\n\nconst Scheduler_now = Scheduler.unstable_now;\n\n{\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {\n    {\n      throw Error( formatProdErrorMessage(302));\n    }\n  }\n}\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\n\nconst ImmediatePriority = 99;\nconst UserBlockingPriority = 98;\nconst NormalPriority = 97;\nconst LowPriority = 96;\nconst IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.\n\nconst NoPriority = 90;\nconst initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n\nconst SyncLanePriority = 15;\nconst SyncBatchedLanePriority = 14;\nconst InputDiscreteHydrationLanePriority = 13;\nconst InputDiscreteLanePriority = 12;\nconst InputContinuousHydrationLanePriority = 11;\nconst InputContinuousLanePriority = 10;\nconst DefaultHydrationLanePriority = 9;\nconst DefaultLanePriority = 8;\nconst TransitionHydrationPriority = 7;\nconst TransitionPriority = 6;\nconst RetryLanePriority = 5;\nconst SelectiveHydrationLanePriority = 4;\nconst IdleHydrationLanePriority = 3;\nconst IdleLanePriority = 2;\nconst OffscreenLanePriority = 1;\nconst NoLanePriority = 0;\nconst TotalLanes = 31;\nconst NoLanes =\n/*                        */\n0b0000000000000000000000000000000;\nconst NoLane =\n/*                          */\n0b0000000000000000000000000000000;\nconst SyncLane =\n/*                        */\n0b0000000000000000000000000000001;\nconst SyncBatchedLane =\n/*                 */\n0b0000000000000000000000000000010;\nconst InputDiscreteHydrationLane =\n/*      */\n0b0000000000000000000000000000100;\nconst InputDiscreteLanes =\n/*                    */\n0b0000000000000000000000000011000;\nconst InputContinuousHydrationLane =\n/*           */\n0b0000000000000000000000000100000;\nconst InputContinuousLanes =\n/*                  */\n0b0000000000000000000000011000000;\nconst DefaultHydrationLane =\n/*            */\n0b0000000000000000000000100000000;\nconst DefaultLanes =\n/*                   */\n0b0000000000000000000111000000000;\nconst TransitionHydrationLane =\n/*                */\n0b0000000000000000001000000000000;\nconst TransitionLanes =\n/*                       */\n0b0000000001111111110000000000000;\nconst RetryLanes =\n/*                            */\n0b0000011110000000000000000000000;\nconst SomeRetryLane =\n/*                  */\n0b0000010000000000000000000000000;\nconst SelectiveHydrationLane =\n/*          */\n0b0000100000000000000000000000000;\nconst NonIdleLanes =\n/*                                 */\n0b0000111111111111111111111111111;\nconst IdleHydrationLane =\n/*               */\n0b0001000000000000000000000000000;\nconst IdleLanes =\n/*                             */\n0b0110000000000000000000000000000;\nconst OffscreenLane =\n/*                   */\n0b1000000000000000000000000000000;\nconst NoTimestamp = -1;\nfunction setCurrentUpdateLanePriority(newLanePriority) {\n} // \"Registers\" used to \"return\" multiple values\n// Used by getHighestPriorityLanes and getNextLanes:\n\nlet return_highestLanePriority = DefaultLanePriority;\n\nfunction getHighestPriorityLanes(lanes) {\n  if ((SyncLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncLanePriority;\n    return SyncLane;\n  }\n\n  if ((SyncBatchedLane & lanes) !== NoLanes) {\n    return_highestLanePriority = SyncBatchedLanePriority;\n    return SyncBatchedLane;\n  }\n\n  if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {\n    return_highestLanePriority = InputDiscreteHydrationLanePriority;\n    return InputDiscreteHydrationLane;\n  }\n\n  const inputDiscreteLanes = InputDiscreteLanes & lanes;\n\n  if (inputDiscreteLanes !== NoLanes) {\n    return_highestLanePriority = InputDiscreteLanePriority;\n    return inputDiscreteLanes;\n  }\n\n  if ((lanes & InputContinuousHydrationLane) !== NoLanes) {\n    return_highestLanePriority = InputContinuousHydrationLanePriority;\n    return InputContinuousHydrationLane;\n  }\n\n  const inputContinuousLanes = InputContinuousLanes & lanes;\n\n  if (inputContinuousLanes !== NoLanes) {\n    return_highestLanePriority = InputContinuousLanePriority;\n    return inputContinuousLanes;\n  }\n\n  if ((lanes & DefaultHydrationLane) !== NoLanes) {\n    return_highestLanePriority = DefaultHydrationLanePriority;\n    return DefaultHydrationLane;\n  }\n\n  const defaultLanes = DefaultLanes & lanes;\n\n  if (defaultLanes !== NoLanes) {\n    return_highestLanePriority = DefaultLanePriority;\n    return defaultLanes;\n  }\n\n  if ((lanes & TransitionHydrationLane) !== NoLanes) {\n    return_highestLanePriority = TransitionHydrationPriority;\n    return TransitionHydrationLane;\n  }\n\n  const transitionLanes = TransitionLanes & lanes;\n\n  if (transitionLanes !== NoLanes) {\n    return_highestLanePriority = TransitionPriority;\n    return transitionLanes;\n  }\n\n  const retryLanes = RetryLanes & lanes;\n\n  if (retryLanes !== NoLanes) {\n    return_highestLanePriority = RetryLanePriority;\n    return retryLanes;\n  }\n\n  if (lanes & SelectiveHydrationLane) {\n    return_highestLanePriority = SelectiveHydrationLanePriority;\n    return SelectiveHydrationLane;\n  }\n\n  if ((lanes & IdleHydrationLane) !== NoLanes) {\n    return_highestLanePriority = IdleHydrationLanePriority;\n    return IdleHydrationLane;\n  }\n\n  const idleLanes = IdleLanes & lanes;\n\n  if (idleLanes !== NoLanes) {\n    return_highestLanePriority = IdleLanePriority;\n    return idleLanes;\n  }\n\n  if ((OffscreenLane & lanes) !== NoLanes) {\n    return_highestLanePriority = OffscreenLanePriority;\n    return OffscreenLane;\n  }\n\n\n  return_highestLanePriority = DefaultLanePriority;\n  return lanes;\n}\n\nfunction schedulerPriorityToLanePriority(schedulerPriorityLevel) {\n  switch (schedulerPriorityLevel) {\n    case ImmediatePriority:\n      return SyncLanePriority;\n\n    case UserBlockingPriority:\n      return InputContinuousLanePriority;\n\n    case NormalPriority:\n    case LowPriority:\n      // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.\n      return DefaultLanePriority;\n\n    case IdlePriority:\n      return IdleLanePriority;\n\n    default:\n      return NoLanePriority;\n  }\n}\nfunction lanePriorityToSchedulerPriority(lanePriority) {\n  switch (lanePriority) {\n    case SyncLanePriority:\n    case SyncBatchedLanePriority:\n      return ImmediatePriority;\n\n    case InputDiscreteHydrationLanePriority:\n    case InputDiscreteLanePriority:\n    case InputContinuousHydrationLanePriority:\n    case InputContinuousLanePriority:\n      return UserBlockingPriority;\n\n    case DefaultHydrationLanePriority:\n    case DefaultLanePriority:\n    case TransitionHydrationPriority:\n    case TransitionPriority:\n    case SelectiveHydrationLanePriority:\n    case RetryLanePriority:\n      return NormalPriority;\n\n    case IdleHydrationLanePriority:\n    case IdleLanePriority:\n    case OffscreenLanePriority:\n      return IdlePriority;\n\n    case NoLanePriority:\n      return NoPriority;\n\n    default:\n      {\n        {\n          throw Error( formatProdErrorMessage(358, lanePriority));\n        }\n      }\n\n  }\n}\nfunction getNextLanes(root, wipLanes) {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return_highestLanePriority = NoLanePriority;\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n  let nextLanePriority = NoLanePriority;\n  const expiredLanes = root.expiredLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes; // Check if any work has expired.\n\n  if (expiredLanes !== NoLanes) {\n    nextLanes = expiredLanes;\n    nextLanePriority = return_highestLanePriority = SyncLanePriority;\n  } else {\n    // Do not work on any idle work until all the non-idle work has finished,\n    // even if the work is suspended.\n    const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n    if (nonIdlePendingLanes !== NoLanes) {\n      const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n      if (nonIdleUnblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n        if (nonIdlePingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    } else {\n      // The only remaining work is Idle.\n      const unblockedLanes = pendingLanes & ~suspendedLanes;\n\n      if (unblockedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(unblockedLanes);\n        nextLanePriority = return_highestLanePriority;\n      } else {\n        if (pingedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(pingedLanes);\n          nextLanePriority = return_highestLanePriority;\n        }\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  } // If there are higher priority lanes, we'll include them even if they\n  // are suspended.\n\n\n  nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes); // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n\n  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\n  // bother waiting until the root is complete.\n  (wipLanes & suspendedLanes) === NoLanes) {\n    getHighestPriorityLanes(wipLanes);\n    const wipLanePriority = return_highestLanePriority;\n\n    if (nextLanePriority <= wipLanePriority) {\n      return wipLanes;\n    } else {\n      return_highestLanePriority = nextLanePriority;\n    }\n  } // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n\n\n  const entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\nfunction getMostRecentEventTime(root, lanes) {\n  const eventTimes = root.eventTimes;\n  let mostRecentEventTime = NoTimestamp;\n\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    const eventTime = eventTimes[index];\n\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane, currentTime) {\n  // TODO: Expiration heuristic is constant per lane, so could use a map.\n  getHighestPriorityLanes(lane);\n  const priority = return_highestLanePriority;\n\n  if (priority >= InputContinuousLanePriority) {\n    // User interactions should expire slightly more quickly.\n    //\n    // NOTE: This is set to the corresponding constant as in Scheduler.js. When\n    // we made it larger, a product metric in www regressed, suggesting there's\n    // a user interaction that's being starved by a series of synchronous\n    // updates. If that theory is correct, the proper solution is to fix the\n    // starvation. However, this scenario supports the idea that expiration\n    // times are an important safeguard when starvation does happen.\n    //\n    // Also note that, in the case of user input specifically, this will soon no\n    // longer be an issue because we plan to make user input synchronous by\n    // default (until you enter `startTransition`, of course.)\n    //\n    // If weren't planning to make these updates synchronous soon anyway, I\n    // would probably make this number a configurable parameter.\n    return currentTime + 250;\n  } else if (priority >= TransitionPriority) {\n    return currentTime + 5000;\n  } else {\n    // Anything idle priority or lower should never expire.\n    return NoTimestamp;\n  }\n}\n\nfunction markStarvedLanesAsExpired(root, currentTime) {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n\n  let lanes = pendingLanes;\n\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    const expirationTime = expirationTimes[index];\n\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n} // This returns the highest priority pending lanes regardless of whether they\nfunction getLanesToRetrySynchronouslyOnError(root) {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n\n  return NoLanes;\n}\nfunction returnNextLanesPriority() {\n  return return_highestLanePriority;\n}\nfunction includesNonIdleWork(lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nfunction includesOnlyRetries(lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nfunction includesOnlyTransitions(lanes) {\n  return (lanes & TransitionLanes) === lanes;\n} // To ensure consistency across multiple updates in the same event, this should\n// be a pure function, so that it always returns the same lane for given inputs.\n\nfunction findUpdateLane(lanePriority, wipLanes) {\n  switch (lanePriority) {\n    case NoLanePriority:\n      break;\n\n    case SyncLanePriority:\n      return SyncLane;\n\n    case SyncBatchedLanePriority:\n      return SyncBatchedLane;\n\n    case InputDiscreteLanePriority:\n      {\n        const lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);\n\n        if (lane === NoLane) {\n          // Shift to the next priority level\n          return findUpdateLane(InputContinuousLanePriority, wipLanes);\n        }\n\n        return lane;\n      }\n\n    case InputContinuousLanePriority:\n      {\n        const lane = pickArbitraryLane(InputContinuousLanes & ~wipLanes);\n\n        if (lane === NoLane) {\n          // Shift to the next priority level\n          return findUpdateLane(DefaultLanePriority, wipLanes);\n        }\n\n        return lane;\n      }\n\n    case DefaultLanePriority:\n      {\n        let lane = pickArbitraryLane(DefaultLanes & ~wipLanes);\n\n        if (lane === NoLane) {\n          // If all the default lanes are already being worked on, look for a\n          // lane in the transition range.\n          lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n\n          if (lane === NoLane) {\n            // All the transition lanes are taken, too. This should be very\n            // rare, but as a last resort, pick a default lane. This will have\n            // the effect of interrupting the current work-in-progress render.\n            lane = pickArbitraryLane(DefaultLanes);\n          }\n        }\n\n        return lane;\n      }\n\n    case TransitionPriority: // Should be handled by findTransitionLane instead\n\n    case RetryLanePriority:\n      // Should be handled by findRetryLane instead\n      break;\n\n    case IdleLanePriority:\n      let lane = pickArbitraryLane(IdleLanes & ~wipLanes);\n\n      if (lane === NoLane) {\n        lane = pickArbitraryLane(IdleLanes);\n      }\n\n      return lane;\n  }\n\n  {\n    {\n      throw Error( formatProdErrorMessage(358, lanePriority));\n    }\n  }\n} // To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\n\nfunction findTransitionLane(wipLanes, pendingLanes) {\n  // First look for lanes that are completely unclaimed, i.e. have no\n  // pending work.\n  let lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);\n\n  if (lane === NoLane) {\n    // If all lanes have pending work, look for a lane that isn't currently\n    // being worked on.\n    lane = pickArbitraryLane(TransitionLanes & ~wipLanes);\n\n    if (lane === NoLane) {\n      // If everything is being worked on, pick any lane. This has the\n      // effect of interrupting the current work-in-progress.\n      lane = pickArbitraryLane(TransitionLanes);\n    }\n  }\n\n  return lane;\n} // To ensure consistency across multiple updates in the same event, this should\n// be pure function, so that it always returns the same lane for given inputs.\n\nfunction findRetryLane(wipLanes) {\n  // This is a fork of `findUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  let lane = pickArbitraryLane(RetryLanes & ~wipLanes);\n\n  if (lane === NoLane) {\n    lane = pickArbitraryLane(RetryLanes);\n  }\n\n  return lane;\n}\n\nfunction getHighestPriorityLane(lanes) {\n  return lanes & -lanes;\n}\n\nfunction getLowestPriorityLane(lanes) {\n  // This finds the most significant non-zero bit.\n  const index = 31 - clz32(lanes);\n  return index < 0 ? NoLanes : 1 << index;\n}\n\nfunction getEqualOrHigherPriorityLanes(lanes) {\n  return (getLowestPriorityLane(lanes) << 1) - 1;\n}\n\nfunction pickArbitraryLane(lanes) {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nfunction includesSomeLane(a, b) {\n  return (a & b) !== NoLanes;\n}\nfunction isSubsetOfLanes(set, subset) {\n  return (set & subset) === subset;\n}\nfunction mergeLanes(a, b) {\n  return a | b;\n}\nfunction removeLanes(set, subset) {\n  return set & ~subset;\n} // Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\n\nfunction laneToLanes(lane) {\n  return lane;\n}\nfunction higherPriorityLane(a, b) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\nfunction createLaneMap(initial) {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  const laneMap = [];\n\n  for (let i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n\n  return laneMap;\n}\nfunction markRootUpdated(root, updateLane, eventTime) {\n  root.pendingLanes |= updateLane; // TODO: Theoretically, any update to any lane can unblock any other lane. But\n  // it's not practical to try every single possible combination. We need a\n  // heuristic to decide which lanes to attempt to render, and in which batches.\n  // For now, we use the same heuristic as in the old ExpirationTimes model:\n  // retry any lane at equal or lower priority, but don't try updates at higher\n  // priority without also including the lower priority updates. This works well\n  // when considering updates across different priority levels, but isn't\n  // sufficient for updates within the same priority, since we want to treat\n  // those updates as parallel.\n  // Unsuspend any update at equal or lower priority.\n\n  const higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111\n\n  root.suspendedLanes &= higherPriorityLanes;\n  root.pingedLanes &= higherPriorityLanes;\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n\n  eventTimes[index] = eventTime;\n}\nfunction markRootSuspended(root, suspendedLanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootPinged(root, pingedLanes, eventTime) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\nfunction markDiscreteUpdatesExpired(root) {\n  root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;\n}\nfunction hasDiscreteLanes(lanes) {\n  return (lanes & InputDiscreteLanes) !== NoLanes;\n}\nfunction markRootMutableRead(root, updateLane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\nfunction markRootFinished(root, remainingLanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n  root.pendingLanes = remainingLanes; // Let's try everything again\n\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\n\n  let lanes = noLongerPendingLanes;\n\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootEntangled(root, entangledLanes) {\n  root.entangledLanes |= entangledLanes;\n  const entanglements = root.entanglements;\n  let lanes = entangledLanes;\n\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    entanglements[index] |= entangledLanes;\n    lanes &= ~lane;\n  }\n}\nconst clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros. Only used on lanes, so assume input is an integer.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nconst log = Math.log;\nconst LN2 = Math.LN2;\n\nfunction clz32Fallback(lanes) {\n  if (lanes === 0) {\n    return 32;\n  }\n\n  return 31 - (log(lanes) / LN2 | 0) | 0;\n}\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\nconst UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority,\n      runWithPriority = Scheduler.unstable_runWithPriority; // TODO: can we stop exporting these?\n\nlet _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.\n// We'd like to remove this but it's not clear if this is safe.\n\nfunction setEnabled(enabled) {\n  _enabled = !!enabled;\n}\nfunction isEnabled() {\n  return _enabled;\n}\nfunction createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {\n  const eventPriority = getEventPriorityForPluginSystem(domEventName);\n  let listenerWrapper;\n\n  switch (eventPriority) {\n    case DiscreteEvent:\n      listenerWrapper = dispatchDiscreteEvent;\n      break;\n\n    case UserBlockingEvent:\n      listenerWrapper = dispatchUserBlockingUpdate;\n      break;\n\n    case ContinuousEvent:\n    default:\n      listenerWrapper = dispatchEvent;\n      break;\n  }\n\n  return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);\n}\n\nfunction dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n  {\n    flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);\n  }\n\n  discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);\n}\n\nfunction dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {\n  {\n    runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));\n  }\n}\n\nfunction dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  if (!_enabled) {\n    return;\n  }\n\n  let allowReplay = true;\n\n  {\n    // TODO: replaying capture phase events is currently broken\n    // because we used to do it during top-level native bubble handlers\n    // but now we use different bubble and capture handlers.\n    // In eager mode, we attach capture listeners early, so we need\n    // to filter them out until we fix the logic to handle them correctly.\n    // This could've been outside the flag but I put it inside to reduce risk.\n    allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;\n  }\n\n  if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {\n    // If we already have a queue of discrete events, and this is another discrete\n    // event, then we can't dispatch it regardless of its target, since they\n    // need to dispatch in order.\n    queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.\n    domEventName, eventSystemFlags, targetContainer, nativeEvent);\n    return;\n  }\n\n  const blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n\n  if (blockedOn === null) {\n    // We successfully dispatched this event.\n    if (allowReplay) {\n      clearIfContinuousEvent(domEventName, nativeEvent);\n    }\n\n    return;\n  }\n\n  if (allowReplay) {\n    if (isReplayableDiscreteEvent(domEventName)) {\n      // This this to be replayed later once the target is available.\n      queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      return;\n    }\n\n    if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {\n      return;\n    } // We need to clear only if we didn't queue because\n    // queueing is accummulative.\n\n\n    clearIfContinuousEvent(domEventName, nativeEvent);\n  } // This is not replayable so we'll invoke it but without a target,\n  // in case the event system needs to trace it.\n\n\n  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);\n} // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.\n\nfunction attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n  // TODO: Warn if _enabled is false.\n  const nativeEventTarget = getEventTarget(nativeEvent);\n  let targetInst = getClosestInstanceFromNode(nativeEventTarget);\n\n  if (targetInst !== null) {\n    const nearestMounted = getNearestMountedFiber(targetInst);\n\n    if (nearestMounted === null) {\n      // This tree has been unmounted already. Dispatch without a target.\n      targetInst = null;\n    } else {\n      const tag = nearestMounted.tag;\n\n      if (tag === SuspenseComponent) {\n        const instance = getSuspenseInstanceFromFiber(nearestMounted);\n\n        if (instance !== null) {\n          // Queue the event to be replayed later. Abort dispatching since we\n          // don't want this event dispatched twice through the event system.\n          // TODO: If this is the first discrete event in the queue. Schedule an increased\n          // priority for this boundary.\n          return instance;\n        } // This shouldn't happen, something went wrong but to avoid blocking\n        // the whole system, dispatch the event without a target.\n        // TODO: Warn.\n\n\n        targetInst = null;\n      } else if (tag === HostRoot) {\n        const root = nearestMounted.stateNode;\n\n        if (root.hydrate) {\n          // If this happens during a replay something went wrong and it might block\n          // the whole system.\n          return getContainerFromFiber(nearestMounted);\n        }\n\n        targetInst = null;\n      } else if (nearestMounted !== targetInst) {\n        // If we get an event (ex: img onload) before committing that\n        // component's mount, ignore it for now (that is, treat it as if it was an\n        // event on a non-React tree). We might also consider queueing events and\n        // dispatching them after the mount.\n        targetInst = null;\n      }\n    }\n  }\n\n  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer); // We're not blocked on anything.\n\n  return null;\n}\n\nfunction addEventBubbleListener(target, eventType, listener) {\n  target.addEventListener(eventType, listener, false);\n  return listener;\n}\nfunction addEventCaptureListener(target, eventType, listener) {\n  target.addEventListener(eventType, listener, true);\n  return listener;\n}\nfunction addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {\n  target.addEventListener(eventType, listener, {\n    capture: true,\n    passive\n  });\n  return listener;\n}\nfunction addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {\n  target.addEventListener(eventType, listener, {\n    passive\n  });\n  return listener;\n}\n\n/**\n * These variables store information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n *\n */\nlet root = null;\nlet startText = null;\nlet fallbackText = null;\nfunction initialize(nativeEventTarget) {\n  root = nativeEventTarget;\n  startText = getText();\n  return true;\n}\nfunction reset() {\n  root = null;\n  startText = null;\n  fallbackText = null;\n}\nfunction getData() {\n  if (fallbackText) {\n    return fallbackText;\n  }\n\n  let start;\n  const startValue = startText;\n  const startLength = startValue.length;\n  let end;\n  const endValue = getText();\n  const endLength = endValue.length;\n\n  for (start = 0; start < startLength; start++) {\n    if (startValue[start] !== endValue[start]) {\n      break;\n    }\n  }\n\n  const minEnd = startLength - start;\n\n  for (end = 1; end <= minEnd; end++) {\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\n      break;\n    }\n  }\n\n  const sliceTail = end > 1 ? 1 - end : undefined;\n  fallbackText = endValue.slice(start, sliceTail);\n  return fallbackText;\n}\nfunction getText() {\n  if ('value' in root) {\n    return root.value;\n  }\n\n  return root.textContent;\n}\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  let charCode;\n  const keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n  // report Enter as charCode 10 when ctrl is pressed.\n\n\n  if (charCode === 10) {\n    charCode = 13;\n  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n\n\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n} // This is intentionally a factory so that we have different returned constructors.\n// If we had a single constructor, it would be megamorphic and engines would deopt.\n\n\nfunction createSyntheticEvent(Interface) {\n  /**\n   * Synthetic events are dispatched by event plugins, typically in response to a\n   * top-level event delegation handler.\n   *\n   * These systems should generally use pooling to reduce the frequency of garbage\n   * collection. The system should check `isPersistent` to determine whether the\n   * event should be released into the pool after being dispatched. Users that\n   * need a persisted event should invoke `persist`.\n   *\n   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n   * normalizing browser quirks. Subclasses do not necessarily have to implement a\n   * DOM interface; custom application-specific events can also subclass this.\n   */\n  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n\n    for (const propName in Interface) {\n      if (!Interface.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      const normalize = Interface[propName];\n\n      if (normalize) {\n        this[propName] = normalize(nativeEvent);\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n\n    const defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n    if (defaultPrevented) {\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    } else {\n      this.isDefaultPrevented = functionThatReturnsFalse;\n    }\n\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n\n  _assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = true;\n      const event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.preventDefault) {\n        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.returnValue !== 'unknown') {\n        event.returnValue = false;\n      }\n\n      this.isDefaultPrevented = functionThatReturnsTrue;\n    },\n    stopPropagation: function () {\n      const event = this.nativeEvent;\n\n      if (!event) {\n        return;\n      }\n\n      if (event.stopPropagation) {\n        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE\n      } else if (typeof event.cancelBubble !== 'unknown') {\n        // The ChangeEventPlugin registers a \"propertychange\" event for\n        // IE. This event does not support bubbling or cancelling, and\n        // any references to cancelBubble throw \"Member not found\".  A\n        // typeof check of \"unknown\" circumvents this issue (and is also\n        // IE specific).\n        event.cancelBubble = true;\n      }\n\n      this.isPropagationStopped = functionThatReturnsTrue;\n    },\n\n    /**\n     * We release all dispatched `SyntheticEvent`s after each event loop, adding\n     * them back into the pool. This allows a way to hold onto a reference that\n     * won't be added back into the pool.\n     */\n    persist: function () {// Modern event system doesn't use pooling.\n    },\n\n    /**\n     * Checks if this event should be released back into the pool.\n     *\n     * @return {boolean} True if this should not be released, false otherwise.\n     */\n    isPersistent: functionThatReturnsTrue\n  });\n\n  return SyntheticBaseEvent;\n}\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nconst EventInterface = {\n  eventPhase: 0,\n  bubbles: 0,\n  cancelable: 0,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: 0,\n  isTrusted: 0\n};\nconst SyntheticEvent = createSyntheticEvent(EventInterface);\n\nconst UIEventInterface = _assign({}, EventInterface, {\n  view: 0,\n  detail: 0\n});\n\nconst SyntheticUIEvent = createSyntheticEvent(UIEventInterface);\nlet lastMovementX;\nlet lastMovementY;\nlet lastMouseEvent;\n\nfunction updateMouseMovementPolyfillState(event) {\n  if (event !== lastMouseEvent) {\n    if (lastMouseEvent && event.type === 'mousemove') {\n      lastMovementX = event.screenX - lastMouseEvent.screenX;\n      lastMovementY = event.screenY - lastMouseEvent.screenY;\n    } else {\n      lastMovementX = 0;\n      lastMovementY = 0;\n    }\n\n    lastMouseEvent = event;\n  }\n}\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nconst MouseEventInterface = _assign({}, UIEventInterface, {\n  screenX: 0,\n  screenY: 0,\n  clientX: 0,\n  clientY: 0,\n  pageX: 0,\n  pageY: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  getModifierState: getEventModifierState,\n  button: 0,\n  buttons: 0,\n  relatedTarget: function (event) {\n    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;\n    return event.relatedTarget;\n  },\n  movementX: function (event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    updateMouseMovementPolyfillState(event);\n    return lastMovementX;\n  },\n  movementY: function (event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    } // Don't need to call updateMouseMovementPolyfillState() here\n    // because it's guaranteed to have already run when movementX\n    // was copied.\n\n\n    return lastMovementY;\n  }\n});\n\nconst SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nconst DragEventInterface = _assign({}, MouseEventInterface, {\n  dataTransfer: 0\n});\n\nconst SyntheticDragEvent = createSyntheticEvent(DragEventInterface);\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nconst FocusEventInterface = _assign({}, UIEventInterface, {\n  relatedTarget: 0\n});\n\nconst SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\n\nconst AnimationEventInterface = _assign({}, EventInterface, {\n  animationName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n});\n\nconst SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\n\nconst ClipboardEventInterface = _assign({}, EventInterface, {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n});\n\nconst SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\n\nconst CompositionEventInterface = _assign({}, EventInterface, {\n  data: 0\n});\n\nconst SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\n// Happens to share the same list for now.\n\nconst SyntheticInputEvent = SyntheticCompositionEvent;\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\n\nconst normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified'\n};\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\n\nconst translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta'\n};\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\n\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    const key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  } // Browser does not implement `key`, polyfill as much of it as we can.\n\n\n  if (nativeEvent.type === 'keypress') {\n    const charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n\n  return '';\n}\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\n\nconst modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey'\n}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\n\nfunction modifierStateGetter(keyArg) {\n  const syntheticEvent = this;\n  const nativeEvent = syntheticEvent.nativeEvent;\n\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n\n  const keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nconst KeyboardEventInterface = _assign({}, UIEventInterface, {\n  key: getEventKey,\n  code: 0,\n  location: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  altKey: 0,\n  metaKey: 0,\n  repeat: 0,\n  locale: 0,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n\n    return 0;\n  }\n});\n\nconst SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);\n/**\n * @interface PointerEvent\n * @see http://www.w3.org/TR/pointerevents/\n */\n\nconst PointerEventInterface = _assign({}, MouseEventInterface, {\n  pointerId: 0,\n  width: 0,\n  height: 0,\n  pressure: 0,\n  tangentialPressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  twist: 0,\n  pointerType: 0,\n  isPrimary: 0\n});\n\nconst SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\n\nconst TouchEventInterface = _assign({}, UIEventInterface, {\n  touches: 0,\n  targetTouches: 0,\n  changedTouches: 0,\n  altKey: 0,\n  metaKey: 0,\n  ctrlKey: 0,\n  shiftKey: 0,\n  getModifierState: getEventModifierState\n});\n\nconst SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\n\nconst TransitionEventInterface = _assign({}, EventInterface, {\n  propertyName: 0,\n  elapsedTime: 0,\n  pseudoElement: 0\n});\n\nconst SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nconst WheelEventInterface = _assign({}, MouseEventInterface, {\n  deltaX(event) {\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n\n  deltaY(event) {\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n\n  deltaZ: 0,\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: 0\n});\n\nconst SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);\n\nconst END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\nconst START_KEYCODE = 229;\nconst canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\nlet documentMode = null;\n\nif (canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n} // Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\n\n\nconst canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\n\nconst useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\nconst SPACEBAR_CODE = 32;\nconst SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nfunction registerEvents() {\n  registerTwoPhaseEvent('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);\n  registerTwoPhaseEvent('onCompositionEnd', ['compositionend', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);\n  registerTwoPhaseEvent('onCompositionStart', ['compositionstart', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);\n  registerTwoPhaseEvent('onCompositionUpdate', ['compositionupdate', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);\n} // Track whether we've ever handled a keypress on the space key.\n\n\nlet hasSpaceKeypress = false;\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\n\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n/**\n * Translate native top level events into event types.\n */\n\n\nfunction getCompositionEventType(domEventName) {\n  switch (domEventName) {\n    case 'compositionstart':\n      return 'onCompositionStart';\n\n    case 'compositionend':\n      return 'onCompositionEnd';\n\n    case 'compositionupdate':\n      return 'onCompositionUpdate';\n  }\n}\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n */\n\n\nfunction isFallbackCompositionStart(domEventName, nativeEvent) {\n  return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;\n}\n/**\n * Does our fallback mode think that this event is the end of composition?\n */\n\n\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case 'keyup':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\n    case 'keydown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n\n    case 'keypress':\n    case 'mousedown':\n    case 'focusout':\n      // Events are not possible without cancelling IME.\n      return true;\n\n    default:\n      return false;\n  }\n}\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\n\n\nfunction getDataFromCustomEvent(nativeEvent) {\n  const detail = nativeEvent.detail;\n\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n\n  return null;\n}\n/**\n * Check if a composition event was triggered by Korean IME.\n * Our fallback mode does not work well with IE's Korean IME,\n * so just use native composition events when Korean IME is used.\n * Although CompositionEvent.locale property is deprecated,\n * it is available in IE, where our fallback mode is enabled.\n *\n * @param {object} nativeEvent\n * @return {boolean}\n */\n\n\nfunction isUsingKoreanIME(nativeEvent) {\n  return nativeEvent.locale === 'ko';\n} // Track the current IME composition status, if any.\n\n\nlet isComposing = false;\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\n\nfunction extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {\n  let eventType;\n  let fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(domEventName);\n  } else if (!isComposing) {\n    if (isFallbackCompositionStart(domEventName, nativeEvent)) {\n      eventType = 'onCompositionStart';\n    }\n  } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {\n    eventType = 'onCompositionEnd';\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!isComposing && eventType === 'onCompositionStart') {\n      isComposing = initialize(nativeEventTarget);\n    } else if (eventType === 'onCompositionEnd') {\n      if (isComposing) {\n        fallbackData = getData();\n      }\n    }\n  }\n\n  const listeners = accumulateTwoPhaseListeners(targetInst, eventType);\n\n  if (listeners.length > 0) {\n    const event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);\n    dispatchQueue.push({\n      event,\n      listeners\n    });\n\n    if (fallbackData) {\n      // Inject data generated from fallback path into the synthetic event.\n      // This matches the property of native CompositionEventInterface.\n      event.data = fallbackData;\n    } else {\n      const customData = getDataFromCustomEvent(nativeEvent);\n\n      if (customData !== null) {\n        event.data = customData;\n      }\n    }\n  }\n}\n\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case 'compositionend':\n      return getDataFromCustomEvent(nativeEvent);\n\n    case 'keypress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      const which = nativeEvent.which;\n\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'textInput':\n      // Record the characters to be added to the DOM.\n      const chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to ignore it.\n\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n */\n\n\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (isComposing) {\n    if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {\n      const chars = getData();\n      reset();\n      isComposing = false;\n      return chars;\n    }\n\n    return null;\n  }\n\n  switch (domEventName) {\n    case 'paste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n\n    case 'keypress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (!isKeypressCommand(nativeEvent)) {\n        // IE fires the `keypress` event when a user types an emoji via\n        // Touch keyboard of Windows.  In such a case, the `char` property\n        // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\n        // is 2, the property `which` does not represent an emoji correctly.\n        // In such a case, we directly return the `char` property instead of\n        // using `which`.\n        if (nativeEvent.char && nativeEvent.char.length > 1) {\n          return nativeEvent.char;\n        } else if (nativeEvent.which) {\n          return String.fromCharCode(nativeEvent.which);\n        }\n      }\n\n      return null;\n\n    case 'compositionend':\n      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;\n\n    default:\n      return null;\n  }\n}\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\n\n\nfunction extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {\n  let chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(domEventName, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(domEventName, nativeEvent);\n  } // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n\n\n  if (!chars) {\n    return null;\n  }\n\n  const listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');\n\n  if (listeners.length > 0) {\n    const event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);\n    dispatchQueue.push({\n      event,\n      listeners\n    });\n    event.data = chars;\n  }\n}\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\n\n\nfunction extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n  extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n}\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nconst supportedInputTypes = {\n  color: true,\n  date: true,\n  datetime: true,\n  'datetime-local': true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  time: true,\n  url: true,\n  week: true\n};\n\nfunction isTextInputElement(elem) {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\n\nfunction isEventSupported(eventNameSuffix) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const eventName = 'on' + eventNameSuffix;\n  let isSupported = (eventName in document);\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  return isSupported;\n}\n\nfunction registerEvents$1() {\n  registerTwoPhaseEvent('onChange', ['change', 'click', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'selectionchange']);\n}\n\nfunction createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {\n  // Flag this event loop as needing state restore.\n  enqueueStateRestore(target);\n  const listeners = accumulateTwoPhaseListeners(inst, 'onChange');\n\n  if (listeners.length > 0) {\n    const event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);\n    dispatchQueue.push({\n      event,\n      listeners\n    });\n  }\n}\n/**\n * For IE shims\n */\n\n\nlet activeElement = null;\nlet activeElementInst = null;\n/**\n * SECTION: handle `change` event\n */\n\nfunction shouldUseChangeEvent(elem) {\n  const nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  const dispatchQueue = [];\n  createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n\n  batchedUpdates(runEventInBatch, dispatchQueue);\n}\n\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\n\nfunction getInstIfValueChanged(targetInst) {\n  const targetNode = getNodeFromInstance(targetInst);\n\n  if (updateValueIfChanged(targetNode)) {\n    return targetInst;\n  }\n}\n\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (domEventName === 'change') {\n    return targetInst;\n  }\n}\n/**\n * SECTION: handle `input` event\n */\n\n\nlet isInputEventSupported = false;\n\nif (canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);\n}\n/**\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\n\n\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n/**\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\n\n\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  activeElement = null;\n  activeElementInst = null;\n}\n/**\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\n\n\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n\n  if (getInstIfValueChanged(activeElementInst)) {\n    manualDispatchChangeEvent(nativeEvent);\n  }\n}\n\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  if (domEventName === 'focusin') {\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (domEventName === 'focusout') {\n    stopWatchingForValueChange();\n  }\n} // For IE8 and IE9.\n\n\nfunction getTargetInstForInputEventPolyfill(domEventName, targetInst) {\n  if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    return getInstIfValueChanged(activeElementInst);\n  }\n}\n/**\n * SECTION: handle `click` event\n */\n\n\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  const nodeName = elem.nodeName;\n  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (domEventName === 'click') {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (domEventName === 'input' || domEventName === 'change') {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction handleControlledInputBlur(node) {\n  const state = node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  {\n    // If controlled, assign the value attribute to the current value on blur\n    setDefaultValue(node, 'number', node.value);\n  }\n}\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\n\n\nfunction extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n  let getTargetInstFunc, handleEventFunc;\n\n  if (shouldUseChangeEvent(targetNode)) {\n    getTargetInstFunc = getTargetInstForChangeEvent;\n  } else if (isTextInputElement(targetNode)) {\n    if (isInputEventSupported) {\n      getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n    } else {\n      getTargetInstFunc = getTargetInstForInputEventPolyfill;\n      handleEventFunc = handleEventsForInputEventPolyfill;\n    }\n  } else if (shouldUseClickEvent(targetNode)) {\n    getTargetInstFunc = getTargetInstForClickEvent;\n  }\n\n  if (getTargetInstFunc) {\n    const inst = getTargetInstFunc(domEventName, targetInst);\n\n    if (inst) {\n      createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);\n      return;\n    }\n  }\n\n  if (handleEventFunc) {\n    handleEventFunc(domEventName, targetNode, targetInst);\n  } // When blurring, set the value attribute for number inputs\n\n\n  if (domEventName === 'focusout') {\n    handleControlledInputBlur(targetNode);\n  }\n}\n\nfunction registerEvents$2() {\n  registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);\n  registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);\n  registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);\n  registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);\n}\n/**\n * For almost every interaction we care about, there will be both a top-level\n * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n * we do not extract duplicate events. However, moving the mouse into the\n * browser from outside will not fire a `mouseout` event. In this case, we use\n * the `mouseover` top-level event.\n */\n\n\nfunction extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  const isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';\n  const isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';\n\n  if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {\n    // If this is an over event with a target, we might have already dispatched\n    // the event in the out event of the other target. If this is replayed,\n    // then it's because we couldn't dispatch against this target previously\n    // so we have to do it now instead.\n    const related = nativeEvent.relatedTarget || nativeEvent.fromElement;\n\n    if (related) {\n      // If the related node is managed by React, we can assume that we have\n      // already dispatched the corresponding events during its mouseout.\n      if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {\n        return;\n      }\n    }\n  }\n\n  if (!isOutEvent && !isOverEvent) {\n    // Must not be a mouse or pointer in or out - ignoring.\n    return;\n  }\n\n  let win; // TODO: why is this nullable in the types but we read from it?\n\n  if (nativeEventTarget.window === nativeEventTarget) {\n    // `nativeEventTarget` is probably a window object.\n    win = nativeEventTarget;\n  } else {\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    const doc = nativeEventTarget.ownerDocument;\n\n    if (doc) {\n      win = doc.defaultView || doc.parentWindow;\n    } else {\n      win = window;\n    }\n  }\n\n  let from;\n  let to;\n\n  if (isOutEvent) {\n    const related = nativeEvent.relatedTarget || nativeEvent.toElement;\n    from = targetInst;\n    to = related ? getClosestInstanceFromNode(related) : null;\n\n    if (to !== null) {\n      const nearestMounted = getNearestMountedFiber(to);\n\n      if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {\n        to = null;\n      }\n    }\n  } else {\n    // Moving to a node from outside the window.\n    from = null;\n    to = targetInst;\n  }\n\n  if (from === to) {\n    // Nothing pertains to our managed components.\n    return;\n  }\n\n  let SyntheticEventCtor = SyntheticMouseEvent;\n  let leaveEventType = 'onMouseLeave';\n  let enterEventType = 'onMouseEnter';\n  let eventTypePrefix = 'mouse';\n\n  if (domEventName === 'pointerout' || domEventName === 'pointerover') {\n    SyntheticEventCtor = SyntheticPointerEvent;\n    leaveEventType = 'onPointerLeave';\n    enterEventType = 'onPointerEnter';\n    eventTypePrefix = 'pointer';\n  }\n\n  const fromNode = from == null ? win : getNodeFromInstance(from);\n  const toNode = to == null ? win : getNodeFromInstance(to);\n  const leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);\n  leave.target = fromNode;\n  leave.relatedTarget = toNode;\n  let enter = null; // We should only process this nativeEvent if we are processing\n  // the first ancestor. Next time, we will ignore the event.\n\n  const nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);\n\n  if (nativeTargetInst === targetInst) {\n    const enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);\n    enterEvent.target = toNode;\n    enterEvent.relatedTarget = fromNode;\n    enter = enterEvent;\n  }\n\n  accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nconst hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty$1.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n\n  return node;\n}\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\n\n\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n\n    node = node.parentNode;\n  }\n}\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\n\n\nfunction getNodeForCharacterOffset(root, offset) {\n  let node = getLeafNode(root);\n  let nodeStart = 0;\n  let nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === TEXT_NODE) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\n/**\n * @param {DOMElement} outerNode\n * @return {?object}\n */\n\nfunction getOffsets(outerNode) {\n  const ownerDocument = outerNode.ownerDocument;\n  const win = ownerDocument && ownerDocument.defaultView || window;\n  const selection = win.getSelection && win.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  const anchorNode = selection.anchorNode,\n        anchorOffset = selection.anchorOffset,\n        focusNode = selection.focusNode,\n        focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\n  // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\n  // expose properties, triggering a \"Permission denied error\" if any of its\n  // properties are accessed. The only seemingly possible way to avoid erroring\n  // is to access a property that typically works for non-anonymous divs and\n  // catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\n  try {\n    /* eslint-disable no-unused-expressions */\n    anchorNode.nodeType;\n    focusNode.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);\n}\n/**\n * Returns {start, end} where `start` is the character/codepoint index of\n * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\n * `end` is the index of (focusNode, focusOffset).\n *\n * Returns null if you pass in garbage input but we should probably just crash.\n *\n * Exported only for testing.\n */\n\nfunction getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {\n  let length = 0;\n  let start = -1;\n  let end = -1;\n  let indexWithinAnchor = 0;\n  let indexWithinFocus = 0;\n  let node = outerNode;\n  let parentNode = null;\n\n  outer: while (true) {\n    let next = null;\n\n    while (true) {\n      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {\n        start = length + anchorOffset;\n      }\n\n      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {\n        end = length + focusOffset;\n      }\n\n      if (node.nodeType === TEXT_NODE) {\n        length += node.nodeValue.length;\n      }\n\n      if ((next = node.firstChild) === null) {\n        break;\n      } // Moving from `node` to its first child `next`.\n\n\n      parentNode = node;\n      node = next;\n    }\n\n    while (true) {\n      if (node === outerNode) {\n        // If `outerNode` has children, this is always the second time visiting\n        // it. If it has no children, this is still the first loop, and the only\n        // valid selection is anchorNode and focusNode both equal to this node\n        // and both offsets 0, in which case we will have handled above.\n        break outer;\n      }\n\n      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\n        start = length;\n      }\n\n      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\n        end = length;\n      }\n\n      if ((next = node.nextSibling) !== null) {\n        break;\n      }\n\n      node = parentNode;\n      parentNode = node.parentNode;\n    } // Moving from `node` to its next sibling `next`.\n\n\n    node = next;\n  }\n\n  if (start === -1 || end === -1) {\n    // This should never happen. (Would happen if the anchor/focus nodes aren't\n    // actually inside the passed-in node.)\n    return null;\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\n\nfunction setOffsets(node, offsets) {\n  const doc = node.ownerDocument || document;\n  const win = doc && doc.defaultView || window; // Edge fails with \"Object expected\" in some scenarios.\n  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n  // fails when pasting 100+ items)\n\n  if (!win.getSelection) {\n    return;\n  }\n\n  const selection = win.getSelection();\n  const length = node.textContent.length;\n  let start = Math.min(offsets.start, length);\n  let end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n\n  if (!selection.extend && start > end) {\n    const temp = end;\n    end = start;\n    start = temp;\n  }\n\n  const startMarker = getNodeForCharacterOffset(node, start);\n  const endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {\n      return;\n    }\n\n    const range = doc.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nfunction isTextNode(node) {\n  return node && node.nodeType === TEXT_NODE;\n}\n\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nfunction isInDocument(node) {\n  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);\n}\n\nfunction isSameOriginFrame(iframe) {\n  try {\n    // Accessing the contentDocument of a HTMLIframeElement can cause the browser\n    // to throw, e.g. if it has a cross-origin src attribute.\n    // Safari will show an error in the console when the access results in \"Blocked a frame with origin\". e.g:\n    // iframe.contentDocument.defaultView;\n    // A safety way is to access one of the cross origin properties: Window or Location\n    // Which might result in \"SecurityError\" DOM Exception and it is compatible to Safari.\n    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl\n    return typeof iframe.contentWindow.location.href === 'string';\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getActiveElementDeep() {\n  let win = window;\n  let element = getActiveElement();\n\n  while (element instanceof win.HTMLIFrameElement) {\n    if (isSameOriginFrame(element)) {\n      win = element.contentWindow;\n    } else {\n      return element;\n    }\n\n    element = getActiveElement(win.document);\n  }\n\n  return element;\n}\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\n\n/**\n * @hasSelectionCapabilities: we get the element types that support selection\n * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\n * and `selectionEnd` rows.\n */\n\n\nfunction hasSelectionCapabilities(elem) {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');\n}\nfunction getSelectionInformation() {\n  const focusedElem = getActiveElementDeep();\n  return {\n    focusedElem: focusedElem,\n    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null\n  };\n}\n/**\n * @restoreSelection: If any selection information was potentially lost,\n * restore it. This is useful when performing operations that could remove dom\n * nodes and place them back in, resulting in focus being lost.\n */\n\nfunction restoreSelection(priorSelectionInformation) {\n  const curFocusedElem = getActiveElementDeep();\n  const priorFocusedElem = priorSelectionInformation.focusedElem;\n  const priorSelectionRange = priorSelectionInformation.selectionRange;\n\n  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {\n      setSelection(priorFocusedElem, priorSelectionRange);\n    } // Focusing a node can change the scroll position, which is undesirable\n\n\n    const ancestors = [];\n    let ancestor = priorFocusedElem;\n\n    while (ancestor = ancestor.parentNode) {\n      if (ancestor.nodeType === ELEMENT_NODE) {\n        ancestors.push({\n          element: ancestor,\n          left: ancestor.scrollLeft,\n          top: ancestor.scrollTop\n        });\n      }\n    }\n\n    if (typeof priorFocusedElem.focus === 'function') {\n      priorFocusedElem.focus();\n    }\n\n    for (let i = 0; i < ancestors.length; i++) {\n      const info = ancestors[i];\n      info.element.scrollLeft = info.left;\n      info.element.scrollTop = info.top;\n    }\n  }\n}\n/**\n * @getSelection: Gets the selection bounds of a focused textarea, input or\n * contentEditable node.\n * -@input: Look up selection bounds of this input\n * -@return {start: selectionStart, end: selectionEnd}\n */\n\nfunction getSelection(input) {\n  let selection;\n\n  if ('selectionStart' in input) {\n    // Modern browser with input or textarea.\n    selection = {\n      start: input.selectionStart,\n      end: input.selectionEnd\n    };\n  } else {\n    // Content editable or old IE textarea.\n    selection = getOffsets(input);\n  }\n\n  return selection || {\n    start: 0,\n    end: 0\n  };\n}\n/**\n * @setSelection: Sets the selection bounds of a textarea or input and focuses\n * the input.\n * -@input     Set selection bounds of this input or textarea\n * -@offsets   Object of same form that is returned from get*\n */\n\nfunction setSelection(input, offsets) {\n  const start = offsets.start;\n  let end = offsets.end;\n\n  if (end === undefined) {\n    end = start;\n  }\n\n  if ('selectionStart' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = Math.min(end, input.value.length);\n  } else {\n    setOffsets(input, offsets);\n  }\n}\n\nconst skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nfunction registerEvents$3() {\n  registerTwoPhaseEvent('onSelect', ['focusout', 'contextmenu', 'dragend', 'focusin', 'keydown', 'keyup', 'mousedown', 'mouseup', 'selectionchange']);\n}\n\nlet activeElement$1 = null;\nlet activeElementInst$1 = null;\nlet lastSelection = null;\nlet mouseDown = false;\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n */\n\nfunction getSelection$1(node) {\n  if ('selectionStart' in node && hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else {\n    const win = node.ownerDocument && node.ownerDocument.defaultView || window;\n    const selection = win.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  }\n}\n/**\n * Get document associated with the event target.\n */\n\n\nfunction getEventTargetDocument(eventTarget) {\n  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;\n}\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @param {object} nativeEventTarget\n * @return {?SyntheticEvent}\n */\n\n\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  const doc = getEventTargetDocument(nativeEventTarget);\n\n  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {\n    return;\n  } // Only fire when selection has actually changed.\n\n\n  const currentSelection = getSelection$1(activeElement$1);\n\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n    const listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');\n\n    if (listeners.length > 0) {\n      const event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);\n      dispatchQueue.push({\n        event,\n        listeners\n      });\n      event.target = activeElement$1;\n    }\n  }\n}\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\n\n\nfunction extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n\n  const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n  switch (domEventName) {\n    // Track the input node that has focus.\n    case 'focusin':\n      if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n        activeElement$1 = targetNode;\n        activeElementInst$1 = targetInst;\n        lastSelection = null;\n      }\n\n      break;\n\n    case 'focusout':\n      activeElement$1 = null;\n      activeElementInst$1 = null;\n      lastSelection = null;\n      break;\n    // Don't fire the event while the user is dragging. This matches the\n    // semantics of the native select event.\n\n    case 'mousedown':\n      mouseDown = true;\n      break;\n\n    case 'contextmenu':\n    case 'mouseup':\n    case 'dragend':\n      mouseDown = false;\n      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      break;\n    // Chrome and IE fire non-standard event when selection is changed (and\n    // sometimes when it hasn't). IE's event fires out of order with respect\n    // to key and input events on deletion, so we discard it.\n    //\n    // Firefox doesn't support selectionchange, so check selection status\n    // after each key entry. The selection changes after keydown and before\n    // keyup, but we check on keydown as well in the case of holding down a\n    // key, when multiple keydown events are fired but only one keyup is.\n    // This is also our approach for IE handling, for the reason above.\n\n    case 'selectionchange':\n      if (skipSelectionChangeEvent) {\n        break;\n      }\n\n    // falls through\n\n    case 'keydown':\n    case 'keyup':\n      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n  }\n}\n\nfunction extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  const reactName = topLevelEventsToReactNames.get(domEventName);\n\n  if (reactName === undefined) {\n    return;\n  }\n\n  let SyntheticEventCtor = SyntheticEvent;\n  let reactEventType = domEventName;\n\n  switch (domEventName) {\n    case 'keypress':\n      // Firefox creates a keypress event for function keys too. This removes\n      // the unwanted keypress events. Enter is however both printable and\n      // non-printable. One would expect Tab to be as well (but it isn't).\n      if (getEventCharCode(nativeEvent) === 0) {\n        return;\n      }\n\n    /* falls through */\n\n    case 'keydown':\n    case 'keyup':\n      SyntheticEventCtor = SyntheticKeyboardEvent;\n      break;\n\n    case 'focusin':\n      reactEventType = 'focus';\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n\n    case 'focusout':\n      reactEventType = 'blur';\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n\n    case 'beforeblur':\n    case 'afterblur':\n      SyntheticEventCtor = SyntheticFocusEvent;\n      break;\n\n    case 'click':\n      // Firefox creates a click event on right mouse clicks. This removes the\n      // unwanted click events.\n      if (nativeEvent.button === 2) {\n        return;\n      }\n\n    /* falls through */\n\n    case 'auxclick':\n    case 'dblclick':\n    case 'mousedown':\n    case 'mousemove':\n    case 'mouseup': // TODO: Disabled elements should not respond to mouse events\n\n    /* falls through */\n\n    case 'mouseout':\n    case 'mouseover':\n    case 'contextmenu':\n      SyntheticEventCtor = SyntheticMouseEvent;\n      break;\n\n    case 'drag':\n    case 'dragend':\n    case 'dragenter':\n    case 'dragexit':\n    case 'dragleave':\n    case 'dragover':\n    case 'dragstart':\n    case 'drop':\n      SyntheticEventCtor = SyntheticDragEvent;\n      break;\n\n    case 'touchcancel':\n    case 'touchend':\n    case 'touchmove':\n    case 'touchstart':\n      SyntheticEventCtor = SyntheticTouchEvent;\n      break;\n\n    case ANIMATION_END:\n    case ANIMATION_ITERATION:\n    case ANIMATION_START:\n      SyntheticEventCtor = SyntheticAnimationEvent;\n      break;\n\n    case TRANSITION_END:\n      SyntheticEventCtor = SyntheticTransitionEvent;\n      break;\n\n    case 'scroll':\n      SyntheticEventCtor = SyntheticUIEvent;\n      break;\n\n    case 'wheel':\n      SyntheticEventCtor = SyntheticWheelEvent;\n      break;\n\n    case 'copy':\n    case 'cut':\n    case 'paste':\n      SyntheticEventCtor = SyntheticClipboardEvent;\n      break;\n\n    case 'gotpointercapture':\n    case 'lostpointercapture':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'pointerup':\n      SyntheticEventCtor = SyntheticPointerEvent;\n      break;\n  }\n\n  const inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;\n\n  {\n    // Some events don't bubble in the browser.\n    // In the past, React has always bubbled them, but this can be surprising.\n    // We're going to try aligning closer to the browser behavior by not bubbling\n    // them in React either. We'll start by not bubbling onScroll, and then expand.\n    const accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from\n    // nonDelegatedEvents list in DOMPluginEventSystem.\n    // Then we can remove this special list.\n    // This is a breaking change that can wait until React 18.\n    domEventName === 'scroll';\n    const listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);\n\n    if (listeners.length > 0) {\n      // Intentionally create event lazily.\n      const event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);\n      dispatchQueue.push({\n        event,\n        listeners\n      });\n    }\n  }\n}\n\n// TODO: remove top-level side effect.\nregisterSimpleEvents();\nregisterEvents$2();\nregisterEvents$1();\nregisterEvents$3();\nregisterEvents();\n\nfunction extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {\n  // TODO: we should remove the concept of a \"SimpleEventPlugin\".\n  // This is the basic functionality of the event system. All\n  // the other plugins are essentially polyfills. So the plugin\n  // should probably be inlined somewhere and have its logic\n  // be core the to event system. This would potentially allow\n  // us to ship builds of React without the polyfilled plugins below.\n  extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);\n  const shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the\n  // event's native \"bubble\" phase, which means that we're\n  // not in the capture phase. That's because we emulate\n  // the capture phase here still. This is a trade-off,\n  // because in an ideal world we would not emulate and use\n  // the phases properly, like we do with the SimpleEvent\n  // plugin. However, the plugins below either expect\n  // emulation (EnterLeave) or use state localized to that\n  // plugin (BeforeInput, Change, Select). The state in\n  // these modules complicates things, as you'll essentially\n  // get the case where the capture phase event might change\n  // state, only for the following bubble event to come in\n  // later and not trigger anything as the state now\n  // invalidates the heuristics of the event plugin. We\n  // could alter all these plugins to work in such ways, but\n  // that might cause other unknown side-effects that we\n  // can't forsee right now.\n\n  if (shouldProcessPolyfillPlugins) {\n    extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);\n    extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n    extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n    extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);\n  }\n} // List of events that need to be individually attached to media elements.\n\n\nconst mediaEventTypes = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting']; // We should not delegate these events to the container, but rather\n// set them on the actual target element itself. This is primarily\n// because these events do not consistently bubble in the DOM.\n\nconst nonDelegatedEvents = new Set(['cancel', 'close', 'invalid', 'load', 'scroll', 'toggle'].concat(mediaEventTypes));\n\nfunction executeDispatch(event, listener, currentTarget) {\n  const type = event.type || 'unknown-event';\n  event.currentTarget = currentTarget;\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\nfunction processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {\n  let previousInstance;\n\n  if (inCapturePhase) {\n    for (let i = dispatchListeners.length - 1; i >= 0; i--) {\n      const _dispatchListeners$i = dispatchListeners[i],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget,\n            listener = _dispatchListeners$i.listener;\n\n      if (instance !== previousInstance && event.isPropagationStopped()) {\n        return;\n      }\n\n      executeDispatch(event, listener, currentTarget);\n      previousInstance = instance;\n    }\n  } else {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      const _dispatchListeners$i2 = dispatchListeners[i],\n            instance = _dispatchListeners$i2.instance,\n            currentTarget = _dispatchListeners$i2.currentTarget,\n            listener = _dispatchListeners$i2.listener;\n\n      if (instance !== previousInstance && event.isPropagationStopped()) {\n        return;\n      }\n\n      executeDispatch(event, listener, currentTarget);\n      previousInstance = instance;\n    }\n  }\n}\n\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  const inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;\n\n  for (let i = 0; i < dispatchQueue.length; i++) {\n    const _dispatchQueue$i = dispatchQueue[i],\n          event = _dispatchQueue$i.event,\n          listeners = _dispatchQueue$i.listeners;\n    processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.\n  } // This would be a good time to rethrow if any of the event handlers threw.\n\n\n  rethrowCaughtError();\n}\n\nfunction dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {\n  const nativeEventTarget = getEventTarget(nativeEvent);\n  const dispatchQueue = [];\n  extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);\n  processDispatchQueue(dispatchQueue, eventSystemFlags);\n}\n\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  const isCapturePhaseListener = false;\n  const listenerSet = getEventListenerSet(targetElement);\n  const listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);\n\n  if (!listenerSet.has(listenerSetKey)) {\n    addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);\n    listenerSet.add(listenerSetKey);\n  }\n}\nconst listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  {\n    if (rootContainerElement[listeningMarker]) {\n      // Performance optimization: don't iterate through events\n      // for the same portal container or root node more than once.\n      // TODO: once we remove the flag, we may be able to also\n      // remove some of the bookkeeping maps used for laziness.\n      return;\n    }\n\n    rootContainerElement[listeningMarker] = true;\n    allNativeEvents.forEach(domEventName => {\n      if (!nonDelegatedEvents.has(domEventName)) {\n        listenToNativeEvent(domEventName, false, rootContainerElement, null);\n      }\n\n      listenToNativeEvent(domEventName, true, rootContainerElement, null);\n    });\n  }\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {\n  let eventSystemFlags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  let target = rootContainerElement; // selectionchange needs to be attached to the document\n  // otherwise it won't capture incoming events that are only\n  // triggered on the document directly.\n\n  if (domEventName === 'selectionchange' && rootContainerElement.nodeType !== DOCUMENT_NODE) {\n    target = rootContainerElement.ownerDocument;\n  } // If the event can be delegated (or is capture phase), we can\n  // register it to the root container. Otherwise, we should\n  // register the event to the target element and mark it as\n  // a non-delegated event.\n\n\n  if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {\n    // For all non-delegated events, apart from scroll, we attach\n    // their event listeners to the respective elements that their\n    // events fire on. That means we can skip this step, as event\n    // listener has already been added previously. However, we\n    // special case the scroll event because the reality is that any\n    // element can scroll.\n    // TODO: ideally, we'd eventually apply the same logic to all\n    // events from the nonDelegatedEvents list. Then we can remove\n    // this special case and use the same logic for all events.\n    if (domEventName !== 'scroll') {\n      return;\n    }\n\n    eventSystemFlags |= IS_NON_DELEGATED;\n    target = targetElement;\n  }\n\n  const listenerSet = getEventListenerSet(target);\n  const listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener); // If the listener entry is empty or we should upgrade, then\n  // we need to trap an event listener onto the target.\n\n  if (!listenerSet.has(listenerSetKey)) {\n    if (isCapturePhaseListener) {\n      eventSystemFlags |= IS_CAPTURE_PHASE;\n    }\n\n    addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);\n    listenerSet.add(listenerSetKey);\n  }\n}\n\nfunction addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {\n  let listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be\n  // active and not passive.\n\n  let isPassiveListener = undefined;\n\n  if (passiveBrowserEventsSupported) {\n    // Browsers introduced an intervention, making these events\n    // passive by default on document. React doesn't bind them\n    // to document anymore, but changing this now would undo\n    // the performance wins from the change. So we emulate\n    // the existing behavior manually on the roots now.\n    // https://github.com/facebook/react/issues/19651\n    if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') {\n      isPassiveListener = true;\n    }\n  }\n\n  targetContainer =  targetContainer;\n  let unsubscribeListener; // When legacyFBSupport is enabled, it's for when we\n\n\n  if (isCapturePhaseListener) {\n    if (isPassiveListener !== undefined) {\n      unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);\n    } else {\n      unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);\n    }\n  } else {\n    if (isPassiveListener !== undefined) {\n      unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);\n    } else {\n      unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);\n    }\n  }\n}\n\nfunction isMatchingRootContainer(grandContainer, targetContainer) {\n  return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;\n}\n\nfunction dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {\n  let ancestorInst = targetInst;\n\n  if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {\n    const targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we\n\n    if (targetInst !== null) {\n      // The below logic attempts to work out if we need to change\n      // the target fiber to a different ancestor. We had similar logic\n      // in the legacy event system, except the big difference between\n      // systems is that the modern event system now has an event listener\n      // attached to each React Root and React Portal Root. Together,\n      // the DOM nodes representing these roots are the \"rootContainer\".\n      // To figure out which ancestor instance we should use, we traverse\n      // up the fiber tree from the target instance and attempt to find\n      // root boundaries that match that of our current \"rootContainer\".\n      // If we find that \"rootContainer\", we find the parent fiber\n      // sub-tree for that root and make that our ancestor instance.\n      let node = targetInst;\n\n      mainLoop: while (true) {\n        if (node === null) {\n          return;\n        }\n\n        const nodeTag = node.tag;\n\n        if (nodeTag === HostRoot || nodeTag === HostPortal) {\n          let container = node.stateNode.containerInfo;\n\n          if (isMatchingRootContainer(container, targetContainerNode)) {\n            break;\n          }\n\n          if (nodeTag === HostPortal) {\n            // The target is a portal, but it's not the rootContainer we're looking for.\n            // Normally portals handle their own events all the way down to the root.\n            // So we should be able to stop now. However, we don't know if this portal\n            // was part of *our* root.\n            let grandNode = node.return;\n\n            while (grandNode !== null) {\n              const grandTag = grandNode.tag;\n\n              if (grandTag === HostRoot || grandTag === HostPortal) {\n                const grandContainer = grandNode.stateNode.containerInfo;\n\n                if (isMatchingRootContainer(grandContainer, targetContainerNode)) {\n                  // This is the rootContainer we're looking for and we found it as\n                  // a parent of the Portal. That means we can ignore it because the\n                  // Portal will bubble through to us.\n                  return;\n                }\n              }\n\n              grandNode = grandNode.return;\n            }\n          } // Now we need to find it's corresponding host fiber in the other\n          // tree. To do this we can use getClosestInstanceFromNode, but we\n          // need to validate that the fiber is a host instance, otherwise\n          // we need to traverse up through the DOM till we find the correct\n          // node that is from the other tree.\n\n\n          while (container !== null) {\n            const parentNode = getClosestInstanceFromNode(container);\n\n            if (parentNode === null) {\n              return;\n            }\n\n            const parentTag = parentNode.tag;\n\n            if (parentTag === HostComponent || parentTag === HostText) {\n              node = ancestorInst = parentNode;\n              continue mainLoop;\n            }\n\n            container = container.parentNode;\n          }\n        }\n\n        node = node.return;\n      }\n    }\n  }\n\n  batchedEventUpdates(() => dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst));\n}\n\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance,\n    listener,\n    currentTarget\n  };\n}\n\nfunction accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {\n  const captureName = reactName !== null ? reactName + 'Capture' : null;\n  const reactEventName = inCapturePhase ? captureName : reactName;\n  const listeners = [];\n  let instance = targetFiber;\n  let lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.\n\n  while (instance !== null) {\n    const _instance = instance,\n          stateNode = _instance.stateNode,\n          tag = _instance.tag; // Handle listeners that are on HostComponents (i.e. <div>)\n\n    if (tag === HostComponent && stateNode !== null) {\n      lastHostComponent = stateNode; // createEventHandle listeners\n\n\n      if (reactEventName !== null) {\n        const listener = getListener(instance, reactEventName);\n\n        if (listener != null) {\n          listeners.push(createDispatchListener(instance, listener, lastHostComponent));\n        }\n      }\n    } // If we are only accumulating events for the target, then we don't\n    // continue to propagate through the React fiber tree to find other\n    // listeners.\n\n\n    if (accumulateTargetOnly) {\n      break;\n    }\n\n    instance = instance.return;\n  }\n\n  return listeners;\n} // We should only use this function for:\n// - BeforeInputEventPlugin\n// - ChangeEventPlugin\n// - SelectEventPlugin\n// This is because we only process these plugins\n// in the bubble phase, so we need to accumulate two\n// phase event listeners (via emulation).\n\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  const captureName = reactName + 'Capture';\n  const listeners = [];\n  let instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.\n\n  while (instance !== null) {\n    const _instance2 = instance,\n          stateNode = _instance2.stateNode,\n          tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)\n\n    if (tag === HostComponent && stateNode !== null) {\n      const currentTarget = stateNode;\n      const captureListener = getListener(instance, captureName);\n\n      if (captureListener != null) {\n        listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));\n      }\n\n      const bubbleListener = getListener(instance, reactName);\n\n      if (bubbleListener != null) {\n        listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));\n      }\n    }\n\n    instance = instance.return;\n  }\n\n  return listeners;\n}\n\nfunction getParent(inst) {\n  if (inst === null) {\n    return null;\n  }\n\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\n\n\nfunction getLowestCommonAncestor(instA, instB) {\n  let nodeA = instA;\n  let nodeB = instB;\n  let depthA = 0;\n\n  for (let tempA = nodeA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n\n  let depthB = 0;\n\n  for (let tempB = nodeB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  } // If A is deeper, crawl up.\n\n\n  while (depthA - depthB > 0) {\n    nodeA = getParent(nodeA);\n    depthA--;\n  } // If B is deeper, crawl up.\n\n\n  while (depthB - depthA > 0) {\n    nodeB = getParent(nodeB);\n    depthB--;\n  } // Walk in lockstep until we find a match.\n\n\n  let depth = depthA;\n\n  while (depth--) {\n    if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {\n      return nodeA;\n    }\n\n    nodeA = getParent(nodeA);\n    nodeB = getParent(nodeB);\n  }\n\n  return null;\n}\n\nfunction accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {\n  const registrationName = event._reactName;\n  const listeners = [];\n  let instance = target;\n\n  while (instance !== null) {\n    if (instance === common) {\n      break;\n    }\n\n    const _instance3 = instance,\n          alternate = _instance3.alternate,\n          stateNode = _instance3.stateNode,\n          tag = _instance3.tag;\n\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n\n    if (tag === HostComponent && stateNode !== null) {\n      const currentTarget = stateNode;\n\n      if (inCapturePhase) {\n        const captureListener = getListener(instance, registrationName);\n\n        if (captureListener != null) {\n          listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));\n        }\n      } else if (!inCapturePhase) {\n        const bubbleListener = getListener(instance, registrationName);\n\n        if (bubbleListener != null) {\n          listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));\n        }\n      }\n    }\n\n    instance = instance.return;\n  }\n\n  if (listeners.length !== 0) {\n    dispatchQueue.push({\n      event,\n      listeners\n    });\n  }\n} // We should only use this function for:\n// - EnterLeaveEventPlugin\n// This is because we only process this plugin\n// in the bubble phase, so we need to accumulate two\n// phase event listeners.\n\n\nfunction accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {\n  const common = from && to ? getLowestCommonAncestor(from, to) : null;\n\n  if (from !== null) {\n    accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);\n  }\n\n  if (to !== null && enterEvent !== null) {\n    accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);\n  }\n}\nfunction getListenerSetKey(domEventName, capture) {\n  return domEventName + \"__\" + (capture ? 'capture' : 'bubble');\n}\n\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML$1 = '__html';\nconst HTML_NAMESPACE$1 = Namespaces.html;\n\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nfunction trapClickOnNonInteractiveElement(node) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = nextProps[propKey];\n\n    if (propKey === STYLE) {\n\n\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML$1] : undefined;\n\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\n\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nfunction createElement(type, props, rootContainerElement, parentNamespace) {\n  // tags get no namespace.\n\n  const ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\n  let domElement;\n  let namespaceURI = parentNamespace;\n\n  if (namespaceURI === HTML_NAMESPACE$1) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n\n  if (namespaceURI === HTML_NAMESPACE$1) {\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n\n      const firstChild = div.firstChild;\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {\n        is: props.is\n      });\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n\n      if (type === 'select') {\n        const node = domElement;\n\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  return domElement;\n}\nfunction createTextNode(text, rootContainerElement) {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\n}\nfunction setInitialProperties(domElement, tag, rawProps, rootContainerElement) {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n\n\n  let props;\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      props = rawProps;\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      props = rawProps;\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      props = rawProps;\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      props = rawProps;\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      props = rawProps;\n      break;\n\n    case 'input':\n      initWrapperState(domElement, rawProps);\n      props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n\n      break;\n\n    case 'option':\n      props = getHostProps$1(domElement, rawProps);\n      break;\n\n    case 'select':\n      initWrapperState$1(domElement, rawProps);\n      props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n\n      break;\n\n    case 'textarea':\n      initWrapperState$2(domElement, rawProps);\n      props = getHostProps$3(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n\n      break;\n\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper(domElement, rawProps, false);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper$3(domElement);\n      break;\n\n    case 'option':\n      postMountWrapper$1(domElement, rawProps);\n      break;\n\n    case 'select':\n      postMountWrapper$2(domElement, rawProps);\n      break;\n\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n} // Calculate the diff between the two objects.\n\nfunction diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {\n\n  let updatePayload = null;\n  let lastProps;\n  let nextProps;\n\n  switch (tag) {\n    case 'input':\n      lastProps = getHostProps(domElement, lastRawProps);\n      nextProps = getHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'option':\n      lastProps = getHostProps$1(domElement, lastRawProps);\n      nextProps = getHostProps$1(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'select':\n      lastProps = getHostProps$2(domElement, lastRawProps);\n      nextProps = getHostProps$2(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    case 'textarea':\n      lastProps = getHostProps$3(domElement, lastRawProps);\n      nextProps = getHostProps$3(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n\n      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n\n  for (propKey in lastProps) {\n    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the allowed property list in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n\n    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n      continue;\n    }\n\n    if (propKey === STYLE) {\n\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = '';\n          }\n        } // Update styles that changed since `lastProp`.\n\n\n        for (styleName in nextProp) {\n          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n\n          updatePayload.push(propKey, styleUpdates);\n        }\n\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML$1] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML$1] : undefined;\n\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, nextHtml);\n        }\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string' || typeof nextProp === 'number') {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else if (typeof nextProp === 'object' && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) {\n      // If we encounter useOpaqueReference's opaque object, this means we are hydrating.\n      // In this case, call the opaque object's toString function which generates a new client\n      // ID so client and server IDs match and throws to rerender.\n      nextProp.toString();\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the allowed property list during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n\n  if (styleUpdates) {\n\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n\n  return updatePayload;\n} // Apply the diff.\n\nfunction updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\n    updateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.\n\n  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      updateWrapper(domElement, nextRawProps);\n      break;\n\n    case 'textarea':\n      updateWrapper$1(domElement, nextRawProps);\n      break;\n\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      postUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {\n\n\n  switch (tag) {\n    case 'dialog':\n      listenToNonDelegatedEvent('cancel', domElement);\n      listenToNonDelegatedEvent('close', domElement);\n      break;\n\n    case 'iframe':\n    case 'object':\n    case 'embed':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the load event.\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'video':\n    case 'audio':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for all the media events.\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);\n      }\n\n      break;\n\n    case 'source':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the error event.\n      listenToNonDelegatedEvent('error', domElement);\n      break;\n\n    case 'img':\n    case 'image':\n    case 'link':\n      // We listen to these events in case to ensure emulated bubble\n      // listeners still fire for error and load events.\n      listenToNonDelegatedEvent('error', domElement);\n      listenToNonDelegatedEvent('load', domElement);\n      break;\n\n    case 'details':\n      // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the toggle event.\n      listenToNonDelegatedEvent('toggle', domElement);\n      break;\n\n    case 'input':\n      initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n\n      break;\n\n    case 'option':\n      break;\n\n    case 'select':\n      initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n\n      break;\n\n    case 'textarea':\n      initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble\n      // listeners still fire for the invalid event.\n\n      listenToNonDelegatedEvent('invalid', domElement);\n\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  let updatePayload = null;\n\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n\n    const nextProp = rawProps[propKey];\n\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n\n        if (propKey === 'onScroll') {\n          listenToNonDelegatedEvent('scroll', domElement);\n        }\n      }\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper(domElement, rawProps, true);\n      break;\n\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track(domElement);\n      postMountWrapper$3(domElement);\n      break;\n\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(domElement);\n      }\n\n      break;\n  }\n\n  return updatePayload;\n}\nfunction diffHydratedText(textNode, text) {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\nfunction restoreControlledState$3(domElement, tag, props) {\n  switch (tag) {\n    case 'input':\n      restoreControlledState(domElement, props);\n      return;\n\n    case 'textarea':\n      restoreControlledState$2(domElement, props);\n      return;\n\n    case 'select':\n      restoreControlledState$1(domElement, props);\n      return;\n  }\n}\n\nconst SUSPENSE_START_DATA = '$';\nconst SUSPENSE_END_DATA = '/$';\nconst SUSPENSE_PENDING_START_DATA = '$?';\nconst SUSPENSE_FALLBACK_START_DATA = '$!';\nconst STYLE$1 = 'style';\nlet eventsEnabled = null;\nlet selectionInformation = null;\n\nfunction shouldAutoFocusHostComponent(type, props) {\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      return !!props.autoFocus;\n  }\n\n  return false;\n}\nfunction getRootHostContext(rootContainerInstance) {\n  let type;\n  let namespace;\n  const nodeType = rootContainerInstance.nodeType;\n\n  switch (nodeType) {\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      {\n        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\n        const root = rootContainerInstance.documentElement;\n        namespace = root ? root.namespaceURI : getChildNamespace(null, '');\n        break;\n      }\n\n    default:\n      {\n        const container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;\n        const ownNamespace = container.namespaceURI || null;\n        type = container.tagName;\n        namespace = getChildNamespace(ownNamespace, type);\n        break;\n      }\n  }\n\n  return namespace;\n}\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n\n  const parentNamespace = parentHostContext;\n  return getChildNamespace(parentNamespace, type);\n}\nfunction getPublicInstance(instance) {\n  return instance;\n}\nfunction prepareForCommit(containerInfo) {\n  eventsEnabled = isEnabled();\n  selectionInformation = getSelectionInformation();\n  let activeInstance = null;\n\n  setEnabled(false);\n  return activeInstance;\n}\nfunction resetAfterCommit(containerInfo) {\n  restoreSelection(selectionInformation);\n  setEnabled(eventsEnabled);\n  eventsEnabled = null;\n  selectionInformation = null;\n}\nfunction createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n  let parentNamespace;\n\n  {\n    parentNamespace = hostContext;\n  }\n\n  const domElement = createElement(type, props, rootContainerInstance, parentNamespace);\n  precacheFiberNode(internalInstanceHandle, domElement);\n  updateFiberProps(domElement, props);\n  return domElement;\n}\nfunction appendInitialChild(parentInstance, child) {\n  parentInstance.appendChild(child);\n}\nfunction finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {\n  setInitialProperties(domElement, type, props, rootContainerInstance);\n  return shouldAutoFocusHostComponent(type, props);\n}\nfunction prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n\n  return diffProperties(domElement, type, oldProps, newProps);\n}\nfunction shouldSetTextContent(type, props) {\n  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;\n}\nfunction createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n\n  const textNode = createTextNode(text, rootContainerInstance);\n  precacheFiberNode(internalInstanceHandle, textNode);\n  return textNode;\n}\n// if a component just imports ReactDOM (e.g. for findDOMNode).\n// Some environments might not have setTimeout or clearTimeout.\n\nconst scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\nconst cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\nconst noTimeout = -1; // -------------------\nfunction commitMount(domElement, type, newProps, internalInstanceHandle) {\n  // Despite the naming that might imply otherwise, this method only\n  // fires if there is an `Update` effect scheduled during mounting.\n  // This happens if `finalizeInitialChildren` returns `true` (which it\n  // does to implement the `autoFocus` attribute on the client). But\n  // there are also other cases when this might happen (such as patching\n  // up text content during hydration mismatch). So we'll check this again.\n  if (shouldAutoFocusHostComponent(type, newProps)) {\n    domElement.focus();\n  }\n}\nfunction commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {\n  // Update the props handle so that we know which props are the ones with\n  // with current event handlers.\n  updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.\n\n  updateProperties(domElement, updatePayload, type, oldProps, newProps);\n}\nfunction resetTextContent(domElement) {\n  setTextContent(domElement, '');\n}\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  textInstance.nodeValue = newText;\n}\nfunction appendChild(parentInstance, child) {\n  parentInstance.appendChild(child);\n}\nfunction appendChildToContainer(container, child) {\n  let parentNode;\n\n  if (container.nodeType === COMMENT_NODE) {\n    parentNode = container.parentNode;\n    parentNode.insertBefore(child, container);\n  } else {\n    parentNode = container;\n    parentNode.appendChild(child);\n  } // This container might be used for a portal.\n  // If something inside a portal is clicked, that click should bubble\n  // through the React tree. However, on Mobile Safari the click would\n  // never bubble through the *DOM* tree unless an ancestor with onclick\n  // event exists. So we wouldn't see it and dispatch it.\n  // This is why we ensure that non React root containers have inline onclick\n  // defined.\n  // https://github.com/facebook/react/issues/11918\n\n\n  const reactRootContainer = container._reactRootContainer;\n\n  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {\n    // TODO: This cast may not be sound for SVG, MathML or custom elements.\n    trapClickOnNonInteractiveElement(parentNode);\n  }\n}\nfunction insertBefore(parentInstance, child, beforeChild) {\n  parentInstance.insertBefore(child, beforeChild);\n}\nfunction insertInContainerBefore(container, child, beforeChild) {\n  if (container.nodeType === COMMENT_NODE) {\n    container.parentNode.insertBefore(child, beforeChild);\n  } else {\n    container.insertBefore(child, beforeChild);\n  }\n}\n\nfunction removeChild(parentInstance, child) {\n  parentInstance.removeChild(child);\n}\nfunction removeChildFromContainer(container, child) {\n  if (container.nodeType === COMMENT_NODE) {\n    container.parentNode.removeChild(child);\n  } else {\n    container.removeChild(child);\n  }\n}\nfunction hideInstance(instance) {\n  // TODO: Does this work for all element types? What about MathML? Should we\n  // pass host context to this method?\n  instance = instance;\n  const style = instance.style;\n\n  if (typeof style.setProperty === 'function') {\n    style.setProperty('display', 'none', 'important');\n  } else {\n    style.display = 'none';\n  }\n}\nfunction hideTextInstance(textInstance) {\n  textInstance.nodeValue = '';\n}\nfunction unhideInstance(instance, props) {\n  instance = instance;\n  const styleProp = props[STYLE$1];\n  const display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;\n  instance.style.display = dangerousStyleValue('display', display);\n}\nfunction unhideTextInstance(textInstance, text) {\n  textInstance.nodeValue = text;\n}\nfunction clearContainer(container) {\n  if (container.nodeType === ELEMENT_NODE) {\n    container.textContent = '';\n  } else if (container.nodeType === DOCUMENT_NODE) {\n    const body = container.body;\n\n    if (body != null) {\n      body.textContent = '';\n    }\n  }\n} // -------------------\nfunction canHydrateInstance(instance, type, props) {\n  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {\n    return null;\n  } // This has now been refined to an element node.\n\n\n  return instance;\n}\nfunction canHydrateTextInstance(instance, text) {\n  if (text === '' || instance.nodeType !== TEXT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  } // This has now been refined to a text node.\n\n\n  return instance;\n}\nfunction isSuspenseInstancePending(instance) {\n  return instance.data === SUSPENSE_PENDING_START_DATA;\n}\nfunction isSuspenseInstanceFallback(instance) {\n  return instance.data === SUSPENSE_FALLBACK_START_DATA;\n}\n\nfunction getNextHydratable(node) {\n  // Skip non-hydratable nodes.\n  for (; node != null; node = node.nextSibling) {\n    const nodeType = node.nodeType;\n\n    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {\n      break;\n    }\n  }\n\n  return node;\n}\n\nfunction getNextHydratableSibling(instance) {\n  return getNextHydratable(instance.nextSibling);\n}\nfunction getFirstHydratableChild(parentInstance) {\n  return getNextHydratable(parentInstance.firstChild);\n}\nfunction hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events\n  // get attached.\n\n  updateFiberProps(instance, props);\n\n  return diffHydratedProperties(instance, type, props);\n}\nfunction hydrateTextInstance(textInstance, text, internalInstanceHandle) {\n  precacheFiberNode(internalInstanceHandle, textInstance);\n  return diffHydratedText(textInstance, text);\n}\nfunction getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {\n  let node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n\n  let depth = 0;\n\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      const data = node.data;\n\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          return getNextHydratableSibling(node);\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {\n        depth++;\n      }\n    }\n\n    node = node.nextSibling;\n  } // TODO: Warn, we didn't find the end comment boundary.\n\n\n  return null;\n} // Returns the SuspenseInstance if this node is a direct child of a\n// SuspenseInstance. I.e. if its previous sibling is a Comment with\n// SUSPENSE_x_START_DATA. Otherwise, null.\n\nfunction getParentSuspenseInstance(targetInstance) {\n  let node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n\n  let depth = 0;\n\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      const data = node.data;\n\n      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {\n        if (depth === 0) {\n          return node;\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_END_DATA) {\n        depth++;\n      }\n    }\n\n    node = node.previousSibling;\n  }\n\n  return null;\n}\nfunction commitHydratedContainer(container) {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(container);\n}\nfunction commitHydratedSuspenseInstance(suspenseInstance) {\n  // Retry if any event replaying was blocked on this.\n  retryIfBlockedOn(suspenseInstance);\n}\nlet clientId = 0;\nfunction makeClientId() {\n  return 'r:' + (clientId++).toString(36);\n}\nfunction makeOpaqueHydratingObject(attemptToReadValue) {\n  return {\n    $$typeof: REACT_OPAQUE_ID_TYPE,\n    toString: attemptToReadValue,\n    valueOf: attemptToReadValue\n  };\n}\nfunction preparePortalMount(portalInstance) {\n  {\n    listenToAllSupportedEvents(portalInstance);\n  }\n}\n\nconst randomKey = Math.random().toString(36).slice(2);\nconst internalInstanceKey = '__reactFiber$' + randomKey;\nconst internalPropsKey = '__reactProps$' + randomKey;\nconst internalContainerInstanceKey = '__reactContainer$' + randomKey;\nconst internalEventHandlersKey = '__reactEvents$' + randomKey;\nfunction precacheFiberNode(hostInst, node) {\n  node[internalInstanceKey] = hostInst;\n}\nfunction markContainerAsRoot(hostRoot, node) {\n  node[internalContainerInstanceKey] = hostRoot;\n}\nfunction unmarkContainerAsRoot(node) {\n  node[internalContainerInstanceKey] = null;\n}\nfunction isContainerMarkedAsRoot(node) {\n  return !!node[internalContainerInstanceKey];\n} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.\n// If the target node is part of a hydrated or not yet rendered subtree, then\n// this may also return a SuspenseComponent or HostRoot to indicate that.\n// Conceptually the HostRoot fiber is a child of the Container node. So if you\n// pass the Container node as the targetNode, you will not actually get the\n// HostRoot back. To get to the HostRoot, you need to pass a child of it.\n// The same thing applies to Suspense boundaries.\n\nfunction getClosestInstanceFromNode(targetNode) {\n  let targetInst = targetNode[internalInstanceKey];\n\n  if (targetInst) {\n    // Don't return HostRoot or SuspenseComponent here.\n    return targetInst;\n  } // If the direct event target isn't a React owned DOM node, we need to look\n  // to see if one of its parents is a React owned DOM node.\n\n\n  let parentNode = targetNode.parentNode;\n\n  while (parentNode) {\n    // We'll check if this is a container root that could include\n    // React nodes in the future. We need to check this first because\n    // if we're a child of a dehydrated container, we need to first\n    // find that inner container before moving on to finding the parent\n    // instance. Note that we don't check this field on  the targetNode\n    // itself because the fibers are conceptually between the container\n    // node and the first child. It isn't surrounding the container node.\n    // If it's not a container, we check if it's an instance.\n    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];\n\n    if (targetInst) {\n      // Since this wasn't the direct target of the event, we might have\n      // stepped past dehydrated DOM nodes to get here. However they could\n      // also have been non-React nodes. We need to answer which one.\n      // If we the instance doesn't have any children, then there can't be\n      // a nested suspense boundary within it. So we can use this as a fast\n      // bailout. Most of the time, when people add non-React children to\n      // the tree, it is using a ref to a child-less DOM node.\n      // Normally we'd only need to check one of the fibers because if it\n      // has ever gone from having children to deleting them or vice versa\n      // it would have deleted the dehydrated boundary nested inside already.\n      // However, since the HostRoot starts out with an alternate it might\n      // have one on the alternate so we need to check in case this was a\n      // root.\n      const alternate = targetInst.alternate;\n\n      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {\n        // Next we need to figure out if the node that skipped past is\n        // nested within a dehydrated boundary and if so, which one.\n        let suspenseInstance = getParentSuspenseInstance(targetNode);\n\n        while (suspenseInstance !== null) {\n          // We found a suspense instance. That means that we haven't\n          // hydrated it yet. Even though we leave the comments in the\n          // DOM after hydrating, and there are boundaries in the DOM\n          // that could already be hydrated, we wouldn't have found them\n          // through this pass since if the target is hydrated it would\n          // have had an internalInstanceKey on it.\n          // Let's get the fiber associated with the SuspenseComponent\n          // as the deepest instance.\n          const targetSuspenseInst = suspenseInstance[internalInstanceKey];\n\n          if (targetSuspenseInst) {\n            return targetSuspenseInst;\n          } // If we don't find a Fiber on the comment, it might be because\n          // we haven't gotten to hydrate it yet. There might still be a\n          // parent boundary that hasn't above this one so we need to find\n          // the outer most that is known.\n\n\n          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent\n          // host component also hasn't hydrated yet. We can return it\n          // below since it will bail out on the isMounted check later.\n        }\n      }\n\n      return targetInst;\n    }\n\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n\n  return null;\n}\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\n\nfunction getInstanceFromNode(node) {\n  const inst = node[internalInstanceKey] || node[internalContainerInstanceKey];\n\n  if (inst) {\n    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {\n      return inst;\n    } else {\n      return null;\n    }\n  }\n\n  return null;\n}\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\n\nfunction getNodeFromInstance(inst) {\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber this, is just the state node right now. We assume it will be\n    // a host component or host text.\n    return inst.stateNode;\n  } // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n\n\n  {\n    {\n      throw Error( formatProdErrorMessage(33));\n    }\n  }\n}\nfunction getFiberCurrentPropsFromNode(node) {\n  return node[internalPropsKey] || null;\n}\nfunction updateFiberProps(node, props) {\n  node[internalPropsKey] = props;\n}\nfunction getEventListenerSet(node) {\n  let elementListenerSet = node[internalEventHandlersKey];\n\n  if (elementListenerSet === undefined) {\n    elementListenerSet = node[internalEventHandlersKey] = new Set();\n  }\n\n  return elementListenerSet;\n}\n\nconst ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nconst valueStack = [];\n\nlet index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n\n    return;\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  cursor.current = value;\n}\n\nconst emptyContextObject = {};\n\n\nconst contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\nconst didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\n\nlet previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n  {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    } // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n\n    const instance = workInProgress.stateNode;\n\n    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n    // Context is created before the class component is instantiated so check for instance.\n\n\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged() {\n  {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type) {\n  {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber) {\n  {\n    pop(didPerformWorkStackCursor);\n    pop(contextStackCursor);\n  }\n}\n\nfunction popTopLevelContextObject(fiber) {\n  {\n    pop(didPerformWorkStackCursor);\n    pop(contextStackCursor);\n  }\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  {\n    if (!(contextStackCursor.current === emptyContextObject)) {\n      {\n        throw Error( formatProdErrorMessage(168));\n      }\n    }\n\n    push(contextStackCursor, context);\n    push(didPerformWorkStackCursor, didChange);\n  }\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n    if (typeof instance.getChildContext !== 'function') {\n\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n\n    for (const contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        {\n          throw Error( formatProdErrorMessage(108, getComponentName(type) || 'Unknown', contextKey));\n        }\n      }\n    }\n\n    return _assign({}, parentContext, childContext);\n  }\n}\n\nfunction pushContextProvider(workInProgress) {\n  {\n    const instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n\n    const memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext);\n    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current);\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  {\n    const instance = workInProgress.stateNode;\n\n    if (!instance) {\n      {\n        throw Error( formatProdErrorMessage(169));\n      }\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(workInProgress, type, previousContext);\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n\n      pop(didPerformWorkStackCursor);\n      pop(contextStackCursor); // Now push the new context and mark that it has changed.\n\n      push(contextStackCursor, mergedContext);\n      push(didPerformWorkStackCursor, didChange);\n    } else {\n      pop(didPerformWorkStackCursor);\n      push(didPerformWorkStackCursor, didChange);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {\n      {\n        throw Error( formatProdErrorMessage(170));\n      }\n    }\n\n    let node = fiber;\n\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n\n        case ClassComponent:\n          {\n            const Component = node.type;\n\n            if (isContextProvider(Component)) {\n              return node.stateNode.__reactInternalMemoizedMergedChildContext;\n            }\n\n            break;\n          }\n      }\n\n      node = node.return;\n    } while (node !== null);\n\n    {\n      {\n        throw Error( formatProdErrorMessage(171));\n      }\n    }\n  }\n}\n\nconst LegacyRoot = 0;\nconst BlockingRoot = 1;\nconst ConcurrentRoot = 2;\n\nlet rendererID = null;\nlet injectedHook = null;\nconst isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n\n\n    return true;\n  }\n\n  try {\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n  } // DevTools exists\n\n\n  return true;\n}\nfunction onCommitRoot(root, priorityLevel) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        injectedHook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n    }\n  }\n}\nfunction onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n    }\n  }\n}\n\nconst Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,\n      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,\n      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,\n      Scheduler_shouldYield = Scheduler.unstable_shouldYield,\n      Scheduler_requestPaint = Scheduler.unstable_requestPaint,\n      Scheduler_now$1 = Scheduler.unstable_now,\n      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,\n      Scheduler_LowPriority = Scheduler.unstable_LowPriority,\n      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;\n\n{\n  // Provide explicit error message when production+profiling bundle of e.g.\n  // react-dom is used with production (non-profiling) bundle of\n  // scheduler/tracing\n  if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {\n    {\n      throw Error( formatProdErrorMessage(302));\n    }\n  }\n}\n\nconst fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use\n// ascending numbers so we can compare them like numbers. They start at 90 to\n// avoid clashing with Scheduler's priorities.\n\nconst ImmediatePriority$1 = 99;\nconst UserBlockingPriority$2 = 98;\nconst NormalPriority$1 = 97;\nconst LowPriority$1 = 96;\nconst IdlePriority$1 = 95; // NoPriority is the absence of priority. Also React-only.\n\nconst NoPriority$1 = 90;\nconst shouldYield = Scheduler_shouldYield;\nconst requestPaint = // Fall back gracefully if we're running an older version of Scheduler.\nScheduler_requestPaint !== undefined ? Scheduler_requestPaint : () => {};\nlet syncQueue = null;\nlet immediateQueueCallbackNode = null;\nlet isFlushingSyncQueue = false;\nconst initialTimeMs$1 = Scheduler_now$1(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.\n// This will be the case for modern browsers that support `performance.now`. In\n// older browsers, Scheduler falls back to `Date.now`, which returns a Unix\n// timestamp. In that case, subtract the module initialization time to simulate\n// the behavior of performance.now and keep our times small enough to fit\n// within 32 bits.\n// TODO: Consider lifting this into Scheduler.\n\nconst now = initialTimeMs$1 < 10000 ? Scheduler_now$1 : () => Scheduler_now$1() - initialTimeMs$1;\nfunction getCurrentPriorityLevel() {\n  switch (Scheduler_getCurrentPriorityLevel()) {\n    case Scheduler_ImmediatePriority:\n      return ImmediatePriority$1;\n\n    case Scheduler_UserBlockingPriority:\n      return UserBlockingPriority$2;\n\n    case Scheduler_NormalPriority:\n      return NormalPriority$1;\n\n    case Scheduler_LowPriority:\n      return LowPriority$1;\n\n    case Scheduler_IdlePriority:\n      return IdlePriority$1;\n\n    default:\n      {\n        {\n          throw Error( formatProdErrorMessage(332));\n        }\n      }\n\n  }\n}\n\nfunction reactPriorityToSchedulerPriority(reactPriorityLevel) {\n  switch (reactPriorityLevel) {\n    case ImmediatePriority$1:\n      return Scheduler_ImmediatePriority;\n\n    case UserBlockingPriority$2:\n      return Scheduler_UserBlockingPriority;\n\n    case NormalPriority$1:\n      return Scheduler_NormalPriority;\n\n    case LowPriority$1:\n      return Scheduler_LowPriority;\n\n    case IdlePriority$1:\n      return Scheduler_IdlePriority;\n\n    default:\n      {\n        {\n          throw Error( formatProdErrorMessage(332));\n        }\n      }\n\n  }\n}\n\nfunction runWithPriority$1(reactPriorityLevel, fn) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_runWithPriority(priorityLevel, fn);\n}\nfunction scheduleCallback(reactPriorityLevel, callback, options) {\n  const priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);\n  return Scheduler_scheduleCallback(priorityLevel, callback, options);\n}\nfunction scheduleSyncCallback(callback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.\n\n    immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n\n  return fakeCallbackNode;\n}\nfunction cancelCallback(callbackNode) {\n  if (callbackNode !== fakeCallbackNode) {\n    Scheduler_cancelCallback(callbackNode);\n  }\n}\nfunction flushSyncCallbackQueue() {\n  if (immediateQueueCallbackNode !== null) {\n    const node = immediateQueueCallbackNode;\n    immediateQueueCallbackNode = null;\n    Scheduler_cancelCallback(node);\n  }\n\n  flushSyncCallbackQueueImpl();\n}\n\nfunction flushSyncCallbackQueueImpl() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrancy.\n    isFlushingSyncQueue = true;\n    let i = 0;\n\n    {\n      try {\n        const isSync = true;\n        const queue = syncQueue;\n        runWithPriority$1(ImmediatePriority$1, () => {\n          for (; i < queue.length; i++) {\n            let callback = queue[i];\n\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n        });\n        syncQueue = null;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        if (syncQueue !== null) {\n          syncQueue = syncQueue.slice(i + 1);\n        } // Resume flushing in the next tick\n\n\n        Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);\n        throw error;\n      } finally {\n        isFlushingSyncQueue = false;\n      }\n    }\n  }\n}\n\n// TODO: this is special because it gets imported during build.\nvar ReactVersion = '17.0.2';\n\nconst NoMode = 0b00000;\nconst StrictMode = 0b00001; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root\n// tag instead\n\nconst BlockingMode = 0b00010;\nconst ConcurrentMode = 0b00100;\nconst ProfileMode = 0b01000;\nconst DebugTracingMode = 0b10000;\n\nconst ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\nconst NoTransition = 0;\nfunction requestCurrentTransition() {\n  return ReactCurrentBatchConfig.transition;\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = _assign({}, baseProps);\n\n    const defaultProps = Component.defaultProps;\n\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nconst MAX_SIGNED_31_BIT_INT = 1073741823;\n\nconst valueCursor = createCursor(null);\n\nlet currentlyRenderingFiber = null;\nlet lastContextDependency = null;\nlet lastContextWithAllBitsObserved = null;\nfunction resetContextDependencies() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n}\nfunction pushProvider(providerFiber, nextValue) {\n  const context = providerFiber.type._context;\n\n  {\n    push(valueCursor, context._currentValue);\n    context._currentValue = nextValue;\n  }\n}\nfunction popProvider(providerFiber) {\n  const currentValue = valueCursor.current;\n  pop(valueCursor);\n  const context = providerFiber.type._context;\n\n  {\n    context._currentValue = currentValue;\n  }\n}\nfunction calculateChangedBits(context, newValue, oldValue) {\n  if (objectIs(oldValue, newValue)) {\n    // No change\n    return 0;\n  } else {\n    const changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n    return changedBits | 0;\n  }\n}\nfunction scheduleWorkOnParentPath(parent, renderLanes) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n\n  while (node !== null) {\n    const alternate = node.alternate;\n\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n\n    node = node.return;\n  }\n}\nfunction propagateContextChange(workInProgress, context, changedBits, renderLanes) {\n  let fiber = workInProgress.child;\n\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n\n  while (fiber !== null) {\n    let nextFiber; // Visit this fiber.\n\n    const list = fiber.dependencies;\n\n    if (list !== null) {\n      nextFiber = fiber.child;\n      let dependency = list.firstContext;\n\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes));\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n\n            enqueueUpdate(fiber, update);\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n\n          scheduleWorkOnParentPath(fiber.return, renderLanes); // Mark the updated lanes on the list, too.\n\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\n          // dependency list.\n\n          break;\n        }\n\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n\n        const sibling = nextFiber.sibling;\n\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        } // No more siblings. Traverse up.\n\n\n        nextFiber = nextFiber.return;\n      }\n    }\n\n    fiber = nextFiber;\n  }\n}\nfunction prepareToReadContext(workInProgress, renderLanes) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  const dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    const firstContext = dependencies.firstContext;\n\n    if (firstContext !== null) {\n      if (includesSomeLane(dependencies.lanes, renderLanes)) {\n        // Context list has a pending update. Mark that this fiber performed work.\n        markWorkInProgressReceivedUpdate();\n      } // Reset the work-in-progress list\n\n\n      dependencies.firstContext = null;\n    }\n  }\n}\nfunction readContext(context, observedBits) {\n\n  if (lastContextWithAllBitsObserved === context) ; else if (observedBits === false || observedBits === 0) ; else {\n    let resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.\n\n    if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {\n      // Observe all updates.\n      lastContextWithAllBitsObserved = context;\n      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;\n    } else {\n      resolvedObservedBits = observedBits;\n    }\n\n    const contextItem = {\n      context: context,\n      observedBits: resolvedObservedBits,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      if (!(currentlyRenderingFiber !== null)) {\n        {\n          throw Error( formatProdErrorMessage(308));\n        }\n      } // This is the first dependency for this component. Create a new list.\n\n\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n        responders: null\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n\n  return  context._currentValue ;\n}\n\nconst UpdateState = 0;\nconst ReplaceState = 1;\nconst ForceUpdate = 2;\nconst CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\n\nlet hasForceUpdate = false;\n\nfunction initializeUpdateQueue(fiber) {\n  const queue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null\n    },\n    effects: null\n  };\n  fiber.updateQueue = queue;\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue = workInProgress.updateQueue;\n  const currentQueue = current.updateQueue;\n\n  if (queue === currentQueue) {\n    const clone = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\nfunction createUpdate(eventTime, lane) {\n  const update = {\n    eventTime,\n    lane,\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n    next: null\n  };\n  return update;\n}\nfunction enqueueUpdate(fiber, update) {\n  const updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue = updateQueue.shared;\n  const pending = sharedQueue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  sharedQueue.pending = update;\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\n\n  const current = workInProgress.alternate;\n\n  if (current !== null) {\n    const currentQueue = current.updateQueue;\n\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n\n        do {\n          const clone = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n\n          update = update.next;\n        } while (update !== null); // Append the captured update the end of the cloned list.\n\n\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  } // Append the update to the end of the list.\n\n\n  const lastBaseUpdate = queue.lastBaseUpdate;\n\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n  switch (update.tag) {\n    case ReplaceState:\n      {\n        const payload = update.payload;\n\n        if (typeof payload === 'function') {\n\n          const nextState = payload.call(instance, prevState, nextProps);\n\n          return nextState;\n        } // State object\n\n\n        return payload;\n      }\n\n    case CaptureUpdate:\n      {\n        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n      }\n    // Intentional fallthrough\n\n    case UpdateState:\n      {\n        const payload = update.payload;\n        let partialState;\n\n        if (typeof payload === 'function') {\n\n          partialState = payload.call(instance, prevState, nextProps);\n        } else {\n          // Partial state object\n          partialState = payload;\n        }\n\n        if (partialState === null || partialState === undefined) {\n          // Null and undefined are treated as no-ops.\n          return prevState;\n        } // Merge the partial state and the previous state.\n\n\n        return _assign({}, prevState, partialState);\n      }\n\n    case ForceUpdate:\n      {\n        hasForceUpdate = true;\n        return prevState;\n      }\n  }\n\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue = workInProgress.updateQueue;\n  hasForceUpdate = false;\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\n\n  let pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null; // Append pending updates to base queue\n\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n\n    const current = workInProgress.alternate;\n\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue = current.updateQueue;\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  } // These values may change as we process the queue.\n\n\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n\n    let newLanes = NoLanes;\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n    let update = firstBaseUpdate;\n\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n          next: null\n        };\n\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Update the remaining priority in the queue.\n\n\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newLastBaseUpdate !== null) {\n          const clone = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Process this update.\n\n\n        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n        const callback = update.callback;\n\n        if (callback !== null) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n\n      update = update.next;\n\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n\n          const firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (!(typeof callback === 'function')) {\n    {\n      throw Error( formatProdErrorMessage(191, callback));\n    }\n  }\n\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n\n// We'll use it to determine whether we need to initialize legacy refs.\n\nconst emptyRefsObject = new React.Component().refs;\n\nfunction applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n  const prevState = workInProgress.memoizedState;\n\n  const partialState = getDerivedStateFromProps(nextProps, prevState);\n\n\n  const memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n  // base state.\n\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue = workInProgress.updateQueue;\n    updateQueue.baseState = memoizedState;\n  }\n}\nconst classComponentUpdater = {\n  isMounted,\n\n  enqueueSetState(inst, payload, callback) {\n    const fiber = get(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  },\n\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = get(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  },\n\n  enqueueForceUpdate(inst, callback) {\n    const fiber = get(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  }\n\n};\n\nfunction checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n  const instance = workInProgress.stateNode;\n\n  if (typeof instance.shouldComponentUpdate === 'function') {\n\n    const shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n  }\n\n  return true;\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n  set(instance, workInProgress);\n}\n\nfunction constructClassInstance(workInProgress, ctor, props) {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n  } // Instantiate twice to help detect side-effects.\n\n  const instance = new ctor(props, context);\n  const state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n  adoptClassInstance(workInProgress, instance);\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\n\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n  initializeUpdateQueue(workInProgress);\n  const contextType = ctor.contextType;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  instance.state = workInProgress.memoizedState;\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    instance.state = workInProgress.memoizedState;\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    workInProgress.flags |= Update;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  const instance = workInProgress.stateNode;\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  const oldState = workInProgress.memoizedState;\n  let newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.flags |= Update;\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\n\nfunction updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n  const instance = workInProgress.stateNode;\n  cloneUpdateQueue(current, workInProgress);\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  const oldState = workInProgress.memoizedState;\n  let newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n}\n\nconst isArray = Array.isArray;\n\nfunction coerceRef(returnFiber, current, element) {\n  const mixedRef = element.ref;\n\n  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\n\n    if (element._owner) {\n      const owner = element._owner;\n      let inst;\n\n      if (owner) {\n        const ownerFiber = owner;\n\n        if (!(ownerFiber.tag === ClassComponent)) {\n          {\n            throw Error( formatProdErrorMessage(309));\n          }\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        {\n          throw Error( formatProdErrorMessage(147, mixedRef));\n        }\n      }\n\n      const stringRef = '' + mixedRef; // Check if previous string ref matches new string ref\n\n      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {\n        return current.ref;\n      }\n\n      const ref = function (value) {\n        let refs = inst.refs;\n\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (!(typeof mixedRef === 'string')) {\n        {\n          throw Error( formatProdErrorMessage(284));\n        }\n      }\n\n      if (!element._owner) {\n        {\n          throw Error( formatProdErrorMessage(290, mixedRef));\n        }\n      }\n    }\n  }\n\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (returnFiber.type !== 'textarea') {\n    {\n      {\n        throw Error( formatProdErrorMessage(31, Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild));\n      }\n    }\n  }\n}\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\n\n\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    } // Deletions are added in reversed order so we add it to the front.\n    // At this point, the return fiber's effect list is empty except for\n    // deletions, so we can just append the deletion to the list. The remaining\n    // effects aren't added until the complete phase. Once we implement\n    // resuming, this may not be true.\n\n\n    const last = returnFiber.lastEffect;\n\n    if (last !== null) {\n      last.nextEffect = childToDelete;\n      returnFiber.lastEffect = childToDelete;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n    }\n\n    childToDelete.nextEffect = null;\n    childToDelete.flags = Deletion;\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n\n\n    let childToDelete = currentFirstChild;\n\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren = new Map();\n    let existingChild = currentFirstChild;\n\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n\n      existingChild = existingChild.sibling;\n    }\n\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n\n    const current = newFiber.alternate;\n\n    if (current !== null) {\n      const oldIndex = current.index;\n\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags = Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags = Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags = Placement;\n    }\n\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current, element, lanes) {\n    if (current !== null) {\n      if (current.elementType === element.type || ( // Keep this check inline so it only runs on the false path:\n       false)) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n\n        return existing;\n      }\n    } // Insert\n\n\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, lanes) {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText('' + newChild, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            const created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n            created.ref = coerceRef(returnFiber, null, newChild);\n            created.return = returnFiber;\n            return created;\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            const created = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            created.return = returnFiber;\n            return created;\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    // Update the fiber if the keys match, otherwise return null.\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            if (newChild.key === key) {\n              if (newChild.type === REACT_FRAGMENT_TYPE) {\n                return updateFragment(returnFiber, oldFiber, newChild.props.children, lanes, key);\n              }\n\n              return updateElement(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            if (newChild.key === key) {\n              return updatePortal(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    return null;\n  }\n\n  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            const matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\n              return updateFragment(returnFiber, matchedFiber, newChild.props.children, lanes, newChild.key);\n            }\n\n            return updateElement(returnFiber, matchedFiber, newChild, lanes);\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            const matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n            return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n          }\n\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    return null;\n  }\n\n  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n\n    let resultingFirstChild = null;\n    let previousNewFiber = null;\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      const newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n        if (newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n\n        previousNewFiber = newFiber;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(newFiber.key === null ? newIdx : newFiber.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (!(typeof iteratorFn === 'function')) {\n      {\n        throw Error( formatProdErrorMessage(150));\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (!(newChildren != null)) {\n      {\n        throw Error( formatProdErrorMessage(151));\n      }\n    }\n\n    let resultingFirstChild = null;\n    let previousNewFiber = null;\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    let step = newChildren.next();\n\n    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n\n        if (newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n\n        previousNewFiber = newFiber;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(newFiber.key === null ? newIdx : newFiber.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    } // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n\n\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n    const key = element.key;\n    let child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        switch (child.tag) {\n          case Fragment:\n            {\n              if (element.type === REACT_FRAGMENT_TYPE) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                const existing = useFiber(child, element.props.children);\n                existing.return = returnFiber;\n\n                return existing;\n              }\n\n              break;\n            }\n\n          case Block:\n\n          // We intentionally fallthrough here if enableBlocksAPI is not on.\n          // eslint-disable-next-lined no-fallthrough\n\n          default:\n            {\n              if (child.elementType === element.type || ( // Keep this check inline so it only runs on the false path:\n               false)) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                const existing = useFiber(child, element.props);\n                existing.ref = coerceRef(returnFiber, child, element);\n                existing.return = returnFiber;\n\n                return existing;\n              }\n\n              break;\n            }\n        } // Didn't match.\n\n\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n    const key = portal.key;\n    let child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  } // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n\n\n  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    } // Handle object types\n\n\n    const isObject = typeof newChild === 'object' && newChild !== null;\n\n    if (isObject) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent:\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n\n        case Block:\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            {\n              {\n                throw Error( formatProdErrorMessage(152, getComponentName(returnFiber.type) || 'Component'));\n              }\n            }\n          }\n      }\n    } // Remaining cases are all treated as empty.\n\n\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nconst reconcileChildFibers = ChildReconciler(true);\nconst mountChildFibers = ChildReconciler(false);\nfunction cloneChildFibers(current, workInProgress) {\n  if (!(current === null || workInProgress.child === current.child)) {\n    {\n      throw Error( formatProdErrorMessage(153));\n    }\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n  newChild.return = workInProgress;\n\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n    newChild.return = workInProgress;\n  }\n\n  newChild.sibling = null;\n} // Reset a workInProgress child set to prepare it for a second pass.\n\nfunction resetChildFibers(workInProgress, lanes) {\n  let child = workInProgress.child;\n\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n\nconst NO_CONTEXT = {};\nconst contextStackCursor$1 = createCursor(NO_CONTEXT);\nconst contextFiberStackCursor = createCursor(NO_CONTEXT);\nconst rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\nfunction requiredContext(c) {\n  if (!(c !== NO_CONTEXT)) {\n    {\n      throw Error( formatProdErrorMessage(174));\n    }\n  }\n\n  return c;\n}\n\nfunction getRootHostContainer() {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance); // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber); // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n\n  push(contextStackCursor$1, NO_CONTEXT);\n  const nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.\n\n  pop(contextStackCursor$1);\n  push(contextStackCursor$1, nextRootContext);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\n\nfunction getHostContext() {\n  const context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  const context = requiredContext(contextStackCursor$1.current);\n  const nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\n\n  if (context === nextContext) {\n    return;\n  } // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor$1, nextContext);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1);\n  pop(contextFiberStackCursor);\n}\n\nconst DefaultSuspenseContext = 0b00; // The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\n\nconst SubtreeSuspenseContextMask = 0b01; // Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\n\nconst InvisibleParentSuspenseContext = 0b01; // Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\n\nconst ForceSuspenseFallback = 0b10;\nconst suspenseStackCursor = createCursor(DefaultSuspenseContext);\nfunction hasSuspenseContext(parentContext, flag) {\n  return (parentContext & flag) !== 0;\n}\nfunction setDefaultShallowSuspenseContext(parentContext) {\n  return parentContext & SubtreeSuspenseContextMask;\n}\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\n  return parentContext & SubtreeSuspenseContextMask | shallowContext;\n}\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\n  return parentContext | subtreeContext;\n}\nfunction pushSuspenseContext(fiber, newContext) {\n  push(suspenseStackCursor, newContext);\n}\nfunction popSuspenseContext(fiber) {\n  pop(suspenseStackCursor);\n}\n\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState = workInProgress.memoizedState;\n\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n\n    return false;\n  }\n\n  const props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.\n\n  if (props.fallback === undefined) {\n    return false;\n  } // Regular boundaries always capture.\n\n\n  if (props.unstable_avoidThisFallback !== true) {\n    return true;\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n\n\n  if (hasInvisibleParent) {\n    return false;\n  } // If the parent is not able to handle it, we must handle it.\n\n\n  return true;\n}\nfunction findFirstSuspended(row) {\n  let node = row;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state = node.memoizedState;\n\n      if (state !== null) {\n        const dehydrated = state.dehydrated;\n\n        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {\n          return node;\n        }\n      }\n    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\n    // keep track of whether it suspended or not.\n    node.memoizedProps.revealOrder !== undefined) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === row) {\n      return null;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return null;\n}\n\nconst NoFlags$1 =\n/*  */\n0b000; // Represents whether effect should fire.\n\nconst HasEffect =\n/* */\n0b001; // Represents the phase in which the effect (not the clean-up) fires.\n\nconst Layout =\n/*    */\n0b010;\nconst Passive$1 =\n/*   */\n0b100;\n\n// This may have been an insertion or a hydration.\n\nlet hydrationParentFiber = null;\nlet nextHydratableInstance = null;\nlet isHydrating = false;\n\nfunction enterHydrationState(fiber) {\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(returnFiber, instance) {\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  childToDelete.flags = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,\n  // these children are not part of the reconciliation list of children.\n  // Even if we abort and rereconcile the children, that will try to hydrate\n  // again and the nodes are still in the host tree so these will be\n  // recreated.\n\n  if (returnFiber.lastEffect !== null) {\n    returnFiber.lastEffect.nextEffect = childToDelete;\n    returnFiber.lastEffect = childToDelete;\n  } else {\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber, fiber) {\n  fiber.flags = fiber.flags & ~Hydrating | Placement;\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent:\n      {\n        const type = fiber.type;\n        const props = fiber.pendingProps;\n        const instance = canHydrateInstance(nextInstance, type);\n\n        if (instance !== null) {\n          fiber.stateNode = instance;\n          return true;\n        }\n\n        return false;\n      }\n\n    case HostText:\n      {\n        const text = fiber.pendingProps;\n        const textInstance = canHydrateTextInstance(nextInstance, text);\n\n        if (textInstance !== null) {\n          fiber.stateNode = textInstance;\n          return true;\n        }\n\n        return false;\n      }\n\n    case SuspenseComponent:\n      {\n\n        return false;\n      }\n\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber) {\n  if (!isHydrating) {\n    return;\n  }\n\n  let nextInstance = nextHydratableInstance;\n\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance(hydrationParentFiber, fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n\n  const firstAttemptedInstance = nextInstance;\n\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance(hydrationParentFiber, fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    } // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n\n\n    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);\n  }\n\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild(nextInstance);\n}\n\nfunction prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n\n  const instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.\n\n  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n\n  if (updatePayload !== null) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n\n  const textInstance = fiber.stateNode;\n  const textContent = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n\n  return shouldUpdate;\n}\n\nfunction skipPastDehydratedSuspenseInstance(fiber) {\n\n  const suspenseState = fiber.memoizedState;\n  const suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;\n\n  if (!suspenseInstance) {\n    {\n      throw Error( formatProdErrorMessage(317));\n    }\n  }\n\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber) {\n  let parent = fiber.return;\n\n  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {\n    parent = parent.return;\n  }\n\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber) {\n\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  const type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them.\n  // TODO: Better heuristic.\n\n  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {\n    let nextInstance = nextHydratableInstance;\n\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;\n  }\n\n  return true;\n}\n\nfunction resetHydrationState() {\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nfunction getIsHydrating() {\n  return isHydrating;\n}\n\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\n\nconst workInProgressSources = [];\n\nfunction markSourceAsDirty(mutableSource) {\n  workInProgressSources.push(mutableSource);\n}\nfunction resetWorkInProgressVersions() {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n\n    {\n      mutableSource._workInProgressVersionPrimary = null;\n    }\n  }\n\n  workInProgressSources.length = 0;\n}\nfunction getWorkInProgressVersion(mutableSource) {\n  {\n    return mutableSource._workInProgressVersionPrimary;\n  }\n}\nfunction setWorkInProgressVersion(mutableSource, version) {\n  {\n    mutableSource._workInProgressVersionPrimary = version;\n  }\n\n  workInProgressSources.push(mutableSource);\n}\n\nconst ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\n\n// These are set right before calling the component.\nlet renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\n\nlet currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\n\nlet currentHook = null;\nlet workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\n\nlet didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\n\nlet didScheduleRenderPhaseUpdateDuringThisPass = false;\nconst RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\n\nfunction throwInvalidHookError() {\n  {\n    {\n      throw Error( formatProdErrorMessage(321));\n    }\n  }\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n\n  if (prevDeps === null) {\n\n    return false;\n  }\n\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes; // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n  // didScheduleRenderPhaseUpdate = false;\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n\n  {\n    ReactCurrentDispatcher$1.current = current === null || current.memoizedState === null ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg); // Check if there was a render phase update\n\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n      if (!(numberOfReRenders < RE_RENDER_LIMIT)) {\n        {\n          throw Error( formatProdErrorMessage(301));\n        }\n      }\n\n      numberOfReRenders += 1;\n\n\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n\n      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerender;\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  } // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n\n\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n\n\n  const didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  didScheduleRenderPhaseUpdate = false;\n\n  if (!!didRenderTooFewHooks) {\n    {\n      throw Error( formatProdErrorMessage(300));\n    }\n  }\n\n  return children;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= ~(Passive | Update);\n  current.lanes = removeLanes(current.lanes, lanes);\n}\nfunction resetHooksAfterThrow() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook = currentlyRenderingFiber$1.memoizedState;\n\n    while (hook !== null) {\n      const queue = hook.queue;\n\n      if (queue !== null) {\n        queue.pending = null;\n      }\n\n      hook = hook.next;\n    }\n\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook() {\n  const hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook;\n\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber$1.alternate;\n\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook;\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (!(nextCurrentHook !== null)) {\n      {\n        throw Error( formatProdErrorMessage(310));\n      }\n    }\n\n    currentHook = nextCurrentHook;\n    const newHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  const dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n\n  if (!(queue !== null)) {\n    {\n      throw Error( formatProdErrorMessage(311));\n    }\n  }\n\n  queue.lastRenderedReducer = reducer;\n  const current = currentHook; // The last rebase update that is NOT part of the base state.\n\n  let baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\n\n  const pendingQueue = queue.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n\n    do {\n      const updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone = {\n          lane: updateLane,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: null\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n\n\n        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newBaseQueueLast !== null) {\n          const clone = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: null\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Process this update.\n\n\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = update.eagerState;\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    } // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  }\n\n  const dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer(reducer, initialArg, init) {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n\n  if (!(queue !== null)) {\n    {\n      throw Error( formatProdErrorMessage(311));\n    }\n  }\n\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n\n  const dispatch = queue.dispatch;\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n\n  return [newState, dispatch];\n}\n\nfunction readFromUnsubcribedMutableSource(root, source, getSnapshot) {\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source); // Is it safe for this component to read from this source during the current render?\n\n  let isSafeToReadFromSource = false; // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n\n  const currentRenderVersion = getWorkInProgressVersion(source);\n\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(renderLanes, root.mutableReadLanes);\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    {\n      {\n        throw Error( formatProdErrorMessage(350));\n      }\n    }\n  }\n}\n\nfunction useMutableSource(hook, source, getSnapshot, subscribe) {\n  const root = getWorkInProgressRoot();\n\n  if (!(root !== null)) {\n    {\n      throw Error( formatProdErrorMessage(349));\n    }\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n  const dispatcher = ReactCurrentDispatcher$1.current; // eslint-disable-next-line prefer-const\n\n  let _dispatcher$useState = dispatcher.useState(() => readFromUnsubcribedMutableSource(root, source, getSnapshot)),\n      currentSnapshot = _dispatcher$useState[0],\n      setSnapshot = _dispatcher$useState[1];\n\n  let snapshot = currentSnapshot; // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n\n  const stateHook = workInProgressHook;\n  const memoizedState = hook.memoizedState;\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n  const fiber = currentlyRenderingFiber$1;\n  hook.memoizedState = {\n    refs,\n    source,\n    subscribe\n  }; // Sync the values needed by our subscription handler after each commit.\n\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot; // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n\n    refs.setSnapshot = setSnapshot; // Check for a possible change between when we last rendered now.\n\n    const maybeNewVersion = getVersion(source._source);\n\n    if (!objectIs(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n\n      if (!objectIs(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      } // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n\n\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]); // If we got a new source or subscribe function, re-subscribe in a passive effect.\n\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source)); // Record a pending mutable source update with the same expiration time.\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(() => {\n          throw error;\n        });\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n\n    return unsubscribe;\n  }, [source, subscribe]); // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n\n  if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue = {\n      pending: null,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot\n    };\n    newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource(source, getSnapshot, subscribe) {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = {\n    refs: {\n      getSnapshot,\n      setSnapshot: null\n    },\n    source,\n    subscribe\n  };\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource(source, getSnapshot, subscribe) {\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountState(initialState) {\n  const hook = mountWorkInProgressHook();\n\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = hook.queue = {\n    pending: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  const dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer);\n}\n\nfunction rerenderState(initialState) {\n  return rerenderReducer(basicStateReducer);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: null\n  };\n  let componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  const hook = mountWorkInProgressHook();\n  const ref = {\n    current: initialValue\n  };\n\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef(initialValue) {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n}\n\nfunction mountEffect(create, deps) {\n\n  return mountEffectImpl(Update | Passive, Passive$1, create, deps);\n}\n\nfunction updateEffect(create, deps) {\n\n  return updateEffectImpl(Update | Passive, Passive$1, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  return mountEffectImpl(Update, Layout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, Layout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n\n\n  const effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n\n\n  const effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction mountDebugValue(value, formatterFn) {// This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue(value) {\n  const _mountState = mountState(value),\n        prevValue = _mountState[0],\n        setValue = _mountState[1];\n\n  mountEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig$1.transition;\n    ReactCurrentBatchConfig$1.transition = 1;\n\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig$1.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction updateDeferredValue(value) {\n  const _updateState = updateState(),\n        prevValue = _updateState[0],\n        setValue = _updateState[1];\n\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig$1.transition;\n    ReactCurrentBatchConfig$1.transition = 1;\n\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig$1.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue(value) {\n  const _rerenderState = rerenderState(),\n        prevValue = _rerenderState[0],\n        setValue = _rerenderState[1];\n\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig$1.transition;\n    ReactCurrentBatchConfig$1.transition = 1;\n\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig$1.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, callback) {\n  const priorityLevel = getCurrentPriorityLevel();\n\n  {\n    runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, () => {\n      setPending(true);\n    });\n    runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, () => {\n      const prevTransition = ReactCurrentBatchConfig$1.transition;\n      ReactCurrentBatchConfig$1.transition = 1;\n\n      try {\n        setPending(false);\n        callback();\n      } finally {\n        ReactCurrentBatchConfig$1.transition = prevTransition;\n      }\n    });\n  }\n}\n\nfunction mountTransition() {\n  const _mountState2 = mountState(false),\n        isPending = _mountState2[0],\n        setPending = _mountState2[1]; // The `start` method can be stored on a ref, since `setPending`\n  // never changes.\n\n\n  const start = startTransition.bind(null, setPending);\n  mountRef(start);\n  return [start, isPending];\n}\n\nfunction updateTransition() {\n  const _updateState2 = updateState(),\n        isPending = _updateState2[0];\n\n  const startRef = updateRef();\n  const start = startRef.current;\n  return [start, isPending];\n}\n\nfunction rerenderTransition() {\n  const _rerenderState2 = rerenderState(),\n        isPending = _rerenderState2[0];\n\n  const startRef = updateRef();\n  const start = startRef.current;\n  return [start, isPending];\n}\n\nfunction mountOpaqueIdentifier() {\n  const makeId =  makeClientId;\n\n  if (getIsHydrating()) {\n    let didUpgrade = false;\n\n    const readValue = () => {\n      if (!didUpgrade) {\n        // Only upgrade once. This works even inside the render phase because\n        // the update is added to a shared queue, which outlasts the\n        // in-progress render.\n        didUpgrade = true;\n\n        {\n          setId(makeId());\n        }\n      }\n\n      {\n        {\n          throw Error( formatProdErrorMessage(355));\n        }\n      }\n    };\n\n    const id = makeOpaqueHydratingObject(readValue);\n    const setId = mountState(id)[1];\n\n    if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {\n      currentlyRenderingFiber$1.flags |= Update | Passive;\n      pushEffect(HasEffect | Passive$1, () => {\n        setId(makeId());\n      }, undefined, null);\n    }\n\n    return id;\n  } else {\n    const id = makeId();\n    mountState(id);\n    return id;\n  }\n}\n\nfunction updateOpaqueIdentifier() {\n  const id = updateState()[0];\n  return id;\n}\n\nfunction rerenderOpaqueIdentifier() {\n  const id = rerenderState()[0];\n  return id;\n}\n\nfunction dispatchAction(fiber, queue, action) {\n\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  const update = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: null\n  }; // Append the update to the end of the list.\n\n  const pending = queue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n  const alternate = fiber.alternate;\n\n  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  } else {\n    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n\n        try {\n          const currentState = queue.lastRenderedState;\n          const eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n\n          if (objectIs(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {// Suppress the error. It will throw again in the render phase.\n        } finally {\n        }\n      }\n    }\n\n    scheduleUpdateOnFiber(fiber, lane, eventTime);\n  }\n}\n\nconst ContextOnlyDispatcher = {\n  readContext,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useOpaqueIdentifier: throwInvalidHookError,\n  unstable_isNewReconciler: enableNewReconciler\n};\nconst HooksDispatcherOnMount = {\n  readContext,\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useOpaqueIdentifier: mountOpaqueIdentifier,\n  unstable_isNewReconciler: enableNewReconciler\n};\nconst HooksDispatcherOnUpdate = {\n  readContext,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: updateOpaqueIdentifier,\n  unstable_isNewReconciler: enableNewReconciler\n};\nconst HooksDispatcherOnRerender = {\n  readContext,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useOpaqueIdentifier: rerenderOpaqueIdentifier,\n  unstable_isNewReconciler: enableNewReconciler\n};\n\nconst now$1 = Scheduler.unstable_now;\nlet commitTime = 0;\nlet profilerStartTime = -1;\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n\n  commitTime = now$1();\n}\n\nfunction startProfilerTimer(fiber) {\n\n  profilerStartTime = now$1();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = now$1();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now$1() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber) {\n  {\n    return;\n  }\n}\n\nfunction startPassiveEffectTimer() {\n  {\n    return;\n  }\n}\n\nfunction transferActualDuration(fiber) {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nconst ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nlet didReceiveUpdate = false;\n\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n\n  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n}\n\nfunction updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n\n  const render = Component.render;\n  const ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {\n  if (current === null) {\n    const type = Component.type;\n\n    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n    Component.defaultProps === undefined) {\n      let resolvedType = type;\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n\n\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n\n      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, updateLanes, renderLanes);\n    }\n\n    const child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n\n  const currentChild = current.child; // This is always exactly one child\n\n  if (!includesSomeLane(updateLanes, renderLanes)) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {\n\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n\n    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.\n     true)) {\n      didReceiveUpdate = false;\n\n      if (!includesSomeLane(renderLanes, updateLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumlated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n\n  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n}\n\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  const prevState = current !== null ? current.memoizedState : null;\n\n  if (nextProps.mode === 'hidden' || nextProps.mode === 'unstable-defer-without-hiding') {\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Figure out what we should do in Blocking mode.\n      const nextState = {\n        baseLanes: NoLanes\n      };\n      workInProgress.memoizedState = nextState;\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n      let nextBaseLanes;\n\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\n\n\n      {\n        markSpawnedWork(OffscreenLane);\n      }\n\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n      const nextState = {\n        baseLanes: nextBaseLanes\n      };\n      workInProgress.memoizedState = nextState; // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n\n      pushRenderLanes(workInProgress, nextBaseLanes);\n      return null;\n    } else {\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState = {\n        baseLanes: NoLanes\n      };\n      workInProgress.memoizedState = nextState; // Push the lanes that were skipped when we bailed out.\n\n      const subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    let subtreeRenderLanes;\n\n    if (prevState !== null) {\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes); // Since we're not hidden anymore, reset the state\n\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n    }\n\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\n\n\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateFragment(current, workInProgress, renderLanes) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(current, workInProgress, renderLanes) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current, workInProgress, renderLanes) {\n  {\n    workInProgress.flags |= Update; // Reset effect durations for the next eventual effect phase.\n    // These are reset during render to allow the DevTools commit hook a chance to read them,\n\n    const stateNode = workInProgress.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current, workInProgress) {\n  const ref = workInProgress.ref;\n\n  if (current === null && ref !== null || current !== null && current.ref !== ref) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n\n  let context;\n\n  {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n\n  let hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n      workInProgress.flags |= Placement;\n    } // In the initial pass we might need to construct the instance.\n\n\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  } else {\n    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n  }\n\n  const nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode; // Rerender\n\n  ReactCurrentOwner$1.current = workInProgress;\n  let nextChildren;\n\n  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    {\n      stopProfilerTimerIfRunning();\n    }\n  } else {\n    {\n      nextChildren = instance.render();\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  } // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n\n\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = workInProgress.stateNode;\n\n  if (root.pendingContext) {\n    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n  const updateQueue = workInProgress.updateQueue;\n\n  if (!(current !== null && updateQueue !== null)) {\n    {\n      throw Error( formatProdErrorMessage(282));\n    }\n  }\n\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState !== null ? prevState.element : null;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  const nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  const nextChildren = nextState.element;\n\n  if (nextChildren === prevChildren) {\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const root = workInProgress.stateNode;\n\n  if (root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n    {\n      const mutableSourceEagerHydrationData = root.mutableSourceEagerHydrationData;\n\n      if (mutableSourceEagerHydrationData != null) {\n        for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n          const mutableSource = mutableSourceEagerHydrationData[i];\n          const version = mutableSourceEagerHydrationData[i + 1];\n          setWorkInProgressVersion(mutableSource, version);\n        }\n      }\n    }\n\n    const child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n    workInProgress.child = child;\n    let node = child;\n\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.flags = node.flags & ~Placement | Hydrating;\n      node = node.sibling;\n    }\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    resetHydrationState();\n  }\n\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  } // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n\n\n  return null;\n}\n\nfunction mountLazyComponent(_current, workInProgress, elementType, updateLanes, renderLanes) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload); // Store the unwrapped component in the type.\n\n  workInProgress.type = Component;\n  const resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n\n  switch (resolvedTag) {\n    case FunctionComponent:\n      {\n\n        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ClassComponent:\n      {\n\n        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ForwardRef:\n      {\n\n        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case MemoComponent:\n      {\n\n        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        updateLanes, renderLanes);\n        return child;\n      }\n  }\n\n  let hint = '';\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n\n\n  {\n    {\n      throw Error( formatProdErrorMessage(306, Component, hint));\n    }\n  }\n}\n\nfunction mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n    workInProgress.flags |= Placement;\n  } // Promote the fiber to a class and try rendering again.\n\n\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  let hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n}\n\nfunction mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  let context;\n\n  {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n\n  {\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n\n  if ( // Run these checks in production only if the flag is off.\n  // Eventually we'll delete this branch altogether.\n   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n\n\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n\n    let hasContext = false;\n\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n    initializeUpdateQueue(workInProgress);\n    const getDerivedStateFromProps = Component.getDerivedStateFromProps;\n\n    if (typeof getDerivedStateFromProps === 'function') {\n      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);\n    }\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n\n    return workInProgress.child;\n  }\n}\n\nconst SUSPENDED_MARKER = {\n  dehydrated: null,\n  retryLane: NoLane\n};\n\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return {\n    baseLanes: renderLanes\n  };\n}\n\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes)\n  };\n} // TODO: Probably should inline this back\n\n\nfunction shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState = current.memoizedState;\n\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallack\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  } // Not currently showing content. Consult the Suspense context.\n\n\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n}\n\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\n\n  let suspenseContext = suspenseStackCursor.current;\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (current === null || current.memoizedState !== null) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Boundaries without fallbacks or should be avoided are not considered since\n      // they cannot handle preferred fallback states.\n      if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {\n        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconcilation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n\n  if (current === null) {\n    // Initial mount\n    // If we're currently hydrating, try to hydrate this boundary.\n    // But only if this has a fallback.\n    if (nextProps.fallback !== undefined) {\n      tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n      const primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackFragment;\n    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n      const primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER; // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n\n      workInProgress.lanes = SomeRetryLane;\n\n      {\n        markSpawnedWork(SomeRetryLane);\n      }\n\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren, renderLanes);\n    }\n  } else {\n    // This is an update.\n    // If the current fiber has a SuspenseState, that means it's already showing\n    // a fallback.\n    const prevState = current.memoizedState;\n\n    if (prevState !== null) {\n\n      if (showFallback) {\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n        const primaryChildFragment = workInProgress.child;\n        const prevOffscreenState = current.child.memoizedState;\n        primaryChildFragment.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(current, workInProgress, nextPrimaryChildren, renderLanes);\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    } else {\n      // The current tree is not already showing a fallback.\n      if (showFallback) {\n        // Timed out.\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n        const primaryChildFragment = workInProgress.child;\n        const prevOffscreenState = current.child.memoizedState;\n        primaryChildFragment.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes); // Skip the primary children, and continue working on the\n        // fallback children.\n\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(current, workInProgress, nextPrimaryChildren, renderLanes);\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n  const mode = workInProgress.mode;\n  const primaryChildProps = {\n    mode: 'visible',\n    children: primaryChildren\n  };\n  const primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes, null);\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment = workInProgress.child;\n  const primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  let primaryChildFragment;\n  let fallbackChildFragment;\n\n  if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  } else {\n    primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction createWorkInProgressOffscreenFiber(current, offscreenProps) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n  const currentPrimaryChildFragment = current.child;\n  const currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  const primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n    mode: 'visible',\n    children: primaryChildren\n  });\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    currentFallbackChildFragment.nextEffect = null;\n    currentFallbackChildFragment.flags = Deletion;\n    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment = current.child;\n  const currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  const primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  let primaryChildFragment;\n\n  if ( // In legacy mode, we commit the primary tree as if it successfully\n  // completed, even though it's in an inconsistent state.\n  (mode & BlockingMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\n  // already cloned. In legacy mode, the only case where this isn't true is\n  // when DevTools forces us to display a fallback; we skip the first render\n  // pass entirely and go straight to rendering the fallback. (In Concurrent\n  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n  // only codepath.)\n  workInProgress.child !== currentPrimaryChildFragment) {\n    const progressedPrimaryFragment = workInProgress.child;\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n    } // The fallback fiber was added as a deletion effect during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it. So we need to remove it from the list. Deletions are stored\n    // on the same list as effects. We want to keep the effects from the primary\n    // tree. So we copy the primary child fragment's effect list, which does not\n    // include the fallback deletion effect.\n\n\n    const progressedLastEffect = primaryChildFragment.lastEffect;\n\n    if (progressedLastEffect !== null) {\n      workInProgress.firstEffect = primaryChildFragment.firstEffect;\n      workInProgress.lastEffect = progressedLastEffect;\n      progressedLastEffect.nextEffect = null;\n    } else {\n      // TODO: Reset this somewhere else? Lol legacy mode is so weird.\n      workInProgress.firstEffect = workInProgress.lastEffect = null;\n    }\n  } else {\n    primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);\n  }\n\n  let fallbackChildFragment;\n\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n  } else {\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction scheduleWorkOnFiber(fiber, renderLanes) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n\n  scheduleWorkOnParentPath(fiber.return, renderLanes);\n}\n\nfunction propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state = node.memoizedState;\n\n      if (state !== null) {\n        scheduleWorkOnFiber(node, renderLanes);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleWorkOnFiber(node, renderLanes);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === workInProgress) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild) {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow = null;\n\n  while (row !== null) {\n    const currentRow = row.alternate; // New rows can't be content rows.\n\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n\n    row = row.sibling;\n  }\n\n  return lastContentRow;\n}\n\nfunction initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {\n  const renderState = workInProgress.memoizedState;\n\n  if (renderState === null) {\n    workInProgress.memoizedState = {\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n      lastEffect: lastEffectBeforeRendering\n    };\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n    renderState.lastEffect = lastEffectBeforeRendering;\n  }\n} // This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\n\n\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder = nextProps.revealOrder;\n  const tailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  let suspenseContext = suspenseStackCursor.current;\n  const shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n    }\n\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & BlockingMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards':\n        {\n          const lastContentRow = findLastContentRow(workInProgress.child);\n          let tail;\n\n          if (lastContentRow === null) {\n            // The whole list is part of the tail.\n            // TODO: We could fast path by just rendering the tail now.\n            tail = workInProgress.child;\n            workInProgress.child = null;\n          } else {\n            // Disconnect the tail rows after the content row.\n            // We're going to render them separately later.\n            tail = lastContentRow.sibling;\n            lastContentRow.sibling = null;\n          }\n\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          tail, lastContentRow, tailMode, workInProgress.lastEffect);\n          break;\n        }\n\n      case 'backwards':\n        {\n          // We're going to find the first row that has existing content.\n          // At the same time we're going to reverse the list of everything\n          // we pass in the meantime. That's going to be our tail in reverse\n          // order.\n          let tail = null;\n          let row = workInProgress.child;\n          workInProgress.child = null;\n\n          while (row !== null) {\n            const currentRow = row.alternate; // New rows can't be content rows.\n\n            if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n              // This is the beginning of the main content.\n              workInProgress.child = row;\n              break;\n            }\n\n            const nextRow = row.sibling;\n            row.sibling = tail;\n            tail = row;\n            row = nextRow;\n          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n\n\n          initSuspenseListRenderState(workInProgress, true, // isBackwards\n          tail, null, // last\n          tailMode, workInProgress.lastEffect);\n          break;\n        }\n\n      case 'together':\n        {\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          null, // tail\n          null, // last\n          undefined, workInProgress.lastEffect);\n          break;\n        }\n\n      default:\n        {\n          // The default reveal order is the same as not having\n          // a boundary.\n          workInProgress.memoizedState = null;\n        }\n    }\n  }\n\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nfunction updateContextProvider(current, workInProgress, renderLanes) {\n  const providerType = workInProgress.type;\n  const context = providerType._context;\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n  const newValue = newProps.value;\n\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    const oldValue = oldProps.value;\n    const changedBits = calculateChangedBits(context, newValue, oldValue);\n\n    if (changedBits === 0) {\n      // No change. Bailout early if children are the same.\n      if (oldProps.children === newProps.children && !hasContextChanged()) {\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n    } else {\n      // The context value changed. Search for matching consumers and schedule\n      // them to update.\n      propagateContextChange(workInProgress, context, changedBits, renderLanes);\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\n  let context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context, newProps.unstable_observedBits);\n  let newChildren;\n\n  {\n    newChildren = render(newValue);\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning();\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\n\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    return null;\n  } else {\n    // This fiber doesn't have work, but its subtree does. Clone the child\n    // fibers and continue.\n    cloneChildFibers(current, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction beginWork(current, workInProgress, renderLanes) {\n  const updateLanes = workInProgress.lanes;\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:\n     false)) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else if (!includesSomeLane(renderLanes, updateLanes)) {\n      didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          resetHydrationState();\n          break;\n\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n\n        case ClassComponent:\n          {\n            const Component = workInProgress.type;\n\n            if (isContextProvider(Component)) {\n              pushContextProvider(workInProgress);\n            }\n\n            break;\n          }\n\n        case HostPortal:\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n          break;\n\n        case ContextProvider:\n          {\n            const newValue = workInProgress.memoizedProps.value;\n            pushProvider(workInProgress, newValue);\n            break;\n          }\n\n        case Profiler:\n          {\n            // Profiler should only call onRender when one of its descendants actually rendered.\n            const hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            } // Reset effect durations for the next eventual effect phase.\n            // These are reset during render to allow the DevTools commit hook a chance to read them,\n\n\n            const stateNode = workInProgress.stateNode;\n            stateNode.effectDuration = 0;\n            stateNode.passiveEffectDuration = 0;\n          }\n\n          break;\n\n        case SuspenseComponent:\n          {\n            const state = workInProgress.memoizedState;\n\n            if (state !== null) {\n              // whether to retry the primary children, or to skip over it and\n              // go straight to the fallback. Check the priority of the primary\n              // child fragment.\n\n\n              const primaryChildFragment = workInProgress.child;\n              const primaryChildLanes = primaryChildFragment.childLanes;\n\n              if (includesSomeLane(renderLanes, primaryChildLanes)) {\n                // The primary children have pending work. Use the normal path\n                // to attempt to render the primary children again.\n                return updateSuspenseComponent(current, workInProgress, renderLanes);\n              } else {\n                // The primary child fragment does not have pending work marked\n                // on it\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient\n                // priority. Bailout.\n\n                const child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n\n                if (child !== null) {\n                  // The fallback children have pending work. Skip over the\n                  // primary children and work on the fallback.\n                  return child.sibling;\n                } else {\n                  return null;\n                }\n              }\n            } else {\n              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n            }\n\n            break;\n          }\n\n        case SuspenseListComponent:\n          {\n            const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n            const hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n            if (didSuspendBefore) {\n              if (hasChildWork) {\n                // If something was in fallback state last time, and we have all the\n                // same children then we're still in progressive loading state.\n                // Something might get unblocked by state updates or retries in the\n                // tree which will affect the tail. So we need to use the normal\n                // path to compute the correct tail.\n                return updateSuspenseListComponent(current, workInProgress, renderLanes);\n              } // If none of the children had any work, that means that none of\n              // them got retried so they'll still be blocked in the same way\n              // as before. We can fast bail out.\n\n\n              workInProgress.flags |= DidCapture;\n            } // If nothing suspended before and we're rendering the same children,\n            // then the tail doesn't matter. Anything new that suspends will work\n            // in the \"together\" mode, so we can continue from the state we had.\n\n\n            const renderState = workInProgress.memoizedState;\n\n            if (renderState !== null) {\n              // Reset to the \"together\" mode in case we've started a different\n              // update in the past but didn't complete it.\n              renderState.rendering = null;\n              renderState.tail = null;\n              renderState.lastEffect = null;\n            }\n\n            pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n            if (hasChildWork) {\n              break;\n            } else {\n              // If none of the children had any work, that means that none of\n              // them got retried so they'll still be blocked in the same way\n              // as before. We can fast bail out.\n              return null;\n            }\n          }\n\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            // Need to check if the tree still needs to be deferred. This is\n            // almost identical to the logic used in the normal update path,\n            // so we'll just enter that. The only difference is we'll bail out\n            // at the next level instead of this one, because the child props\n            // have not changed. Which is fine.\n            // TODO: Probably should refactor `beginWork` to split the bailout\n            // path from the normal path. I'm tempted to do a labeled break here\n            // but I won't :)\n            workInProgress.lanes = NoLanes;\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    } else {\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  } // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n\n\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n      {\n        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n      }\n\n    case LazyComponent:\n      {\n        const elementType = workInProgress.elementType;\n        return mountLazyComponent(current, workInProgress, elementType, updateLanes, renderLanes);\n      }\n\n    case FunctionComponent:\n      {\n        const Component = workInProgress.type;\n        const unresolvedProps = workInProgress.pendingProps;\n        const resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n        return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n      }\n\n    case ClassComponent:\n      {\n        const Component = workInProgress.type;\n        const unresolvedProps = workInProgress.pendingProps;\n        const resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n        return updateClassComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n      }\n\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n\n    case HostText:\n      return updateHostText(current, workInProgress);\n\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n\n    case ForwardRef:\n      {\n        const type = workInProgress.type;\n        const unresolvedProps = workInProgress.pendingProps;\n        const resolvedProps = workInProgress.elementType === type ? unresolvedProps : resolveDefaultProps(type, unresolvedProps);\n        return updateForwardRef(current, workInProgress, type, resolvedProps, renderLanes);\n      }\n\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n\n    case MemoComponent:\n      {\n        const type = workInProgress.type;\n        const unresolvedProps = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n        let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n\n        resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n        return updateMemoComponent(current, workInProgress, type, resolvedProps, updateLanes, renderLanes);\n      }\n\n    case SimpleMemoComponent:\n      {\n        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, updateLanes, renderLanes);\n      }\n\n    case IncompleteClassComponent:\n      {\n        const Component = workInProgress.type;\n        const unresolvedProps = workInProgress.pendingProps;\n        const resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n        return mountIncompleteClassComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n      }\n\n    case SuspenseListComponent:\n      {\n        return updateSuspenseListComponent(current, workInProgress, renderLanes);\n      }\n\n    case FundamentalComponent:\n      {\n\n        break;\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case Block:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n      {\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\n      }\n\n    case LegacyHiddenComponent:\n      {\n        return updateLegacyHiddenComponent(current, workInProgress, renderLanes);\n      }\n  }\n\n  {\n    {\n      throw Error( formatProdErrorMessage(156, workInProgress.tag));\n    }\n  }\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef$1(workInProgress) {\n  workInProgress.flags |= Ref;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent$1;\nlet updateHostText$1;\n\n{\n  // Mutation mode\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function (workInProgress) {// Noop\n  };\n\n  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    } // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n\n\n    const instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n\n    const updatePayload = prepareUpdate(instance, type, oldProps, newProps); // TODO: Type this specific to this type of component.\n\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n\n  updateHostText$1 = function (current, workInProgress, oldText, newText) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n}\n\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n\n  switch (renderState.tailMode) {\n    case 'hidden':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        let tailNode = renderState.tail;\n        let lastTailNode = null;\n\n        while (tailNode !== null) {\n          if (tailNode.alternate !== null) {\n            lastTailNode = tailNode;\n          }\n\n          tailNode = tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          renderState.tail = null;\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n\n    case 'collapsed':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        let tailNode = renderState.tail;\n        let lastTailNode = null;\n\n        while (tailNode !== null) {\n          if (tailNode.alternate !== null) {\n            lastTailNode = tailNode;\n          }\n\n          tailNode = tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          if (!hasRenderedATailFallback && renderState.tail !== null) {\n            // We suspended during the head. We want to show at least one\n            // row at the tail. So we'll keep on and cut off the rest.\n            renderState.tail.sibling = null;\n          } else {\n            renderState.tail = null;\n          }\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n  }\n}\n\nfunction completeWork(current, workInProgress, renderLanes) {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      return null;\n\n    case ClassComponent:\n      {\n        const Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext();\n        }\n\n        return null;\n      }\n\n    case HostRoot:\n      {\n        popHostContainer();\n        popTopLevelContextObject();\n        resetWorkInProgressVersions();\n        const fiberRoot = workInProgress.stateNode;\n\n        if (fiberRoot.pendingContext) {\n          fiberRoot.context = fiberRoot.pendingContext;\n          fiberRoot.pendingContext = null;\n        }\n\n        if (current === null || current.child === null) {\n          // If we hydrated, pop so that we can delete any remaining children\n          // that weren't hydrated.\n          const wasHydrated = popHydrationState(workInProgress);\n\n          if (wasHydrated) {\n            // If we hydrated, then we'll need to schedule an update for\n            // the commit side-effects on the root.\n            markUpdate(workInProgress);\n          } else if (!fiberRoot.hydrate) {\n            // Schedule an effect to clear this container at the start of the next commit.\n            // This handles the case of React rendering into a container with previous children.\n            // It's also safe to do for updates too, because current.child would only be null\n            // if the previous render was null (so the the container would already be empty).\n            workInProgress.flags |= Snapshot;\n          }\n        }\n\n        updateHostContainer(workInProgress);\n        return null;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(workInProgress);\n        const rootContainerInstance = getRootHostContainer();\n        const type = workInProgress.type;\n\n        if (current !== null && workInProgress.stateNode != null) {\n          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n\n          if (current.ref !== workInProgress.ref) {\n            markRef$1(workInProgress);\n          }\n        } else {\n          if (!newProps) {\n            if (!(workInProgress.stateNode !== null)) {\n              {\n                throw Error( formatProdErrorMessage(166));\n              }\n            } // This can happen when we abort work.\n\n\n            return null;\n          }\n\n          const currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n          // \"stack\" as the parent. Then append children as we go in beginWork\n          // or completeWork depending on whether we want to add them top->down or\n          // bottom->up. Top->down is faster in IE11.\n\n          const wasHydrated = popHydrationState(workInProgress);\n\n          if (wasHydrated) {\n            // TODO: Move this and createInstance step into the beginPhase\n            // to consolidate.\n            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {\n              // If changes to the hydrated node need to be applied at the\n              // commit-phase we mark this as such.\n              markUpdate(workInProgress);\n            }\n          } else {\n            const instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n            appendAllChildren(instance, workInProgress, false, false);\n            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\n            // (eg DOM renderer supports auto-focus for certain elements).\n            // Make sure such renderers get scheduled for later work.\n\n            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {\n              markUpdate(workInProgress);\n            }\n          }\n\n          if (workInProgress.ref !== null) {\n            // If there is a ref on a host node we need to schedule a callback\n            markRef$1(workInProgress);\n          }\n        }\n\n        return null;\n      }\n\n    case HostText:\n      {\n        const newText = newProps;\n\n        if (current && workInProgress.stateNode != null) {\n          const oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n          // to schedule a side-effect to do the updates.\n\n          updateHostText$1(current, workInProgress, oldText, newText);\n        } else {\n          if (typeof newText !== 'string') {\n            if (!(workInProgress.stateNode !== null)) {\n              {\n                throw Error( formatProdErrorMessage(166));\n              }\n            } // This can happen when we abort work.\n\n          }\n\n          const rootContainerInstance = getRootHostContainer();\n          const currentHostContext = getHostContext();\n          const wasHydrated = popHydrationState(workInProgress);\n\n          if (wasHydrated) {\n            if (prepareToHydrateHostTextInstance(workInProgress)) {\n              markUpdate(workInProgress);\n            }\n          } else {\n            workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);\n          }\n        }\n\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext();\n        const nextState = workInProgress.memoizedState;\n\n        if ((workInProgress.flags & DidCapture) !== NoFlags) {\n          // Something suspended. Re-render with the fallback children.\n          workInProgress.lanes = renderLanes; // Do not reset the effect list.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        const nextDidTimeout = nextState !== null;\n        let prevDidTimeout = false;\n\n        if (current === null) {\n          if (workInProgress.memoizedProps.fallback !== undefined) {\n            popHydrationState(workInProgress);\n          }\n        } else {\n          const prevState = current.memoizedState;\n          prevDidTimeout = prevState !== null;\n        }\n\n        if (nextDidTimeout && !prevDidTimeout) {\n          // If this subtreee is running in blocking mode we can suspend,\n          // otherwise we won't suspend.\n          // TODO: This will still suspend a synchronous tree if anything\n          // in the concurrent tree already suspended during this render.\n          // This is a known bug.\n          if ((workInProgress.mode & BlockingMode) !== NoMode) {\n            // TODO: Move this back to throwException because this is too late\n            // if this is a large tree which is common for initial loads. We\n            // don't know if we should restart a render or not until we get\n            // this marker, and this is too late.\n            // If this render already had a ping or lower pri updates,\n            // and this is the first time we know we're going to suspend we\n            // should be able to immediately restart from within throwException.\n            const hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;\n\n            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n              // If this was in an invisible tree or a new render, then showing\n              // this boundary is ok.\n              renderDidSuspend();\n            } else {\n              // Otherwise, we're going to have to hide content so we should\n              // suspend for longer if possible.\n              renderDidSuspendDelayIfPossible();\n            }\n          }\n        }\n\n        {\n          // TODO: Only schedule updates if these values are non equal, i.e. it changed.\n          if (nextDidTimeout || prevDidTimeout) {\n            // If this boundary just timed out, schedule an effect to attach a\n            // retry listener to the promise. This flag is also used to hide the\n            // primary children. In mutation mode, we also need the flag to\n            // *unhide* children that were previously hidden, so check if this\n            // is currently timed out, too.\n            workInProgress.flags |= Update;\n          }\n        }\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer();\n      updateHostContainer(workInProgress);\n\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n\n      return null;\n\n    case ContextProvider:\n      // Pop provider fiber\n      popProvider(workInProgress);\n      return null;\n\n    case IncompleteClassComponent:\n      {\n        // Same as class component case. I put it down here so that the tags are\n        // sequential to ensure this switch is compiled to a jump table.\n        const Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext();\n        }\n\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext();\n        const renderState = workInProgress.memoizedState;\n\n        if (renderState === null) {\n          // We're running in the default, \"independent\" mode.\n          // We don't do anything in this mode.\n          return null;\n        }\n\n        let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n        const renderedTail = renderState.rendering;\n\n        if (renderedTail === null) {\n          // We just rendered the head.\n          if (!didSuspendAlready) {\n            // This is the first pass. We need to figure out if anything is still\n            // suspended in the rendered set.\n            // If new content unsuspended, but there's still some content that\n            // didn't. Then we need to do a second pass that forces everything\n            // to keep showing their fallbacks.\n            // We might be suspended if something in this render pass suspended, or\n            // something in the previous committed pass suspended. Otherwise,\n            // there's no chance so we can skip the expensive call to\n            // findFirstSuspended.\n            const cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n\n            if (!cannotBeSuspended) {\n              let row = workInProgress.child;\n\n              while (row !== null) {\n                const suspended = findFirstSuspended(row);\n\n                if (suspended !== null) {\n                  didSuspendAlready = true;\n                  workInProgress.flags |= DidCapture;\n                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\n                  // part of the second pass. In that case nothing will subscribe to\n                  // its thennables. Instead, we'll transfer its thennables to the\n                  // SuspenseList so that it can retry if they resolve.\n                  // There might be multiple of these in the list but since we're\n                  // going to wait for all of them anyway, it doesn't really matter\n                  // which ones gets to ping. In theory we could get clever and keep\n                  // track of how many dependencies remain but it gets tricky because\n                  // in the meantime, we can add/remove/change items and dependencies.\n                  // We might bail out of the loop before finding any but that\n                  // doesn't matter since that means that the other boundaries that\n                  // we did find already has their listeners attached.\n\n                  const newThennables = suspended.updateQueue;\n\n                  if (newThennables !== null) {\n                    workInProgress.updateQueue = newThennables;\n                    workInProgress.flags |= Update;\n                  } // Rerender the whole list, but this time, we'll force fallbacks\n                  // to stay in place.\n                  // Reset the effect list before doing the second pass since that's now invalid.\n\n\n                  if (renderState.lastEffect === null) {\n                    workInProgress.firstEffect = null;\n                  }\n\n                  workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.\n\n                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\n                  // rerender the children.\n\n                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));\n                  return workInProgress.child;\n                }\n\n                row = row.sibling;\n              }\n            }\n\n            if (renderState.tail !== null && now() > getRenderTargetTime()) {\n              // We have already passed our CPU deadline but we still have rows\n              // left in the tail. We'll just give up further attempts to render\n              // the main content and only render fallbacks.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n\n              {\n                markSpawnedWork(SomeRetryLane);\n              }\n            }\n          } else {\n            cutOffTailIfNeeded(renderState, false);\n          } // Next we're going to render the tail.\n\n        } else {\n          // Append the rendered row to the child list.\n          if (!didSuspendAlready) {\n            const suspended = findFirstSuspended(renderedTail);\n\n            if (suspended !== null) {\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\n              // get lost if this row ends up dropped during a second pass.\n\n              const newThennables = suspended.updateQueue;\n\n              if (newThennables !== null) {\n                workInProgress.updateQueue = newThennables;\n                workInProgress.flags |= Update;\n              }\n\n              cutOffTailIfNeeded(renderState, true); // This might have been modified.\n\n              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.\n              ) {\n                  // We need to delete the row we just rendered.\n                  // Reset the effect list to what it was before we rendered this\n                  // child. The nested children have already appended themselves.\n                  const lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.\n\n                  if (lastEffect !== null) {\n                    lastEffect.nextEffect = null;\n                  } // We're done.\n\n\n                  return null;\n                }\n            } else if ( // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n              // We have now passed our CPU deadline and we'll just give up further\n              // attempts to render the main content and only render fallbacks.\n              // The assumption is that this is usually faster.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n\n              {\n                markSpawnedWork(SomeRetryLane);\n              }\n            }\n          }\n\n          if (renderState.isBackwards) {\n            // The effect list of the backwards tail will have been added\n            // to the end. This breaks the guarantee that life-cycles fire in\n            // sibling order but that isn't a strong guarantee promised by React.\n            // Especially since these might also just pop in during future commits.\n            // Append to the beginning of the list.\n            renderedTail.sibling = workInProgress.child;\n            workInProgress.child = renderedTail;\n          } else {\n            const previousSibling = renderState.last;\n\n            if (previousSibling !== null) {\n              previousSibling.sibling = renderedTail;\n            } else {\n              workInProgress.child = renderedTail;\n            }\n\n            renderState.last = renderedTail;\n          }\n        }\n\n        if (renderState.tail !== null) {\n          // We still have tail rows to render.\n          // Pop a row.\n          const next = renderState.tail;\n          renderState.rendering = next;\n          renderState.tail = next.sibling;\n          renderState.lastEffect = workInProgress.lastEffect;\n          renderState.renderingStartTime = now();\n          next.sibling = null; // Restore the context.\n          // TODO: We can probably just avoid popping it instead and only\n          // setting it the first time we go from not suspended to suspended.\n\n          let suspenseContext = suspenseStackCursor.current;\n\n          if (didSuspendAlready) {\n            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n          } else {\n            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n          }\n\n          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\n\n          return next;\n        }\n\n        return null;\n      }\n\n    case FundamentalComponent:\n      {\n\n        break;\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case Block:\n\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        popRenderLanes();\n\n        if (current !== null) {\n          const nextState = workInProgress.memoizedState;\n          const prevState = current.memoizedState;\n          const prevIsHidden = prevState !== null;\n          const nextIsHidden = nextState !== null;\n\n          if (prevIsHidden !== nextIsHidden && newProps.mode !== 'unstable-defer-without-hiding') {\n            workInProgress.flags |= Update;\n          }\n        }\n\n        return null;\n      }\n  }\n\n  {\n    {\n      throw Error( formatProdErrorMessage(156, workInProgress.tag));\n    }\n  }\n}\n\nfunction unwindWork(workInProgress, renderLanes) {\n  switch (workInProgress.tag) {\n    case ClassComponent:\n      {\n        const Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext();\n        }\n\n        const flags = workInProgress.flags;\n\n        if (flags & ShouldCapture) {\n          workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case HostRoot:\n      {\n        popHostContainer();\n        popTopLevelContextObject();\n        resetWorkInProgressVersions();\n        const flags = workInProgress.flags;\n\n        if (!((flags & DidCapture) === NoFlags)) {\n          {\n            throw Error( formatProdErrorMessage(285));\n          }\n        }\n\n        workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n        return workInProgress;\n      }\n\n    case HostComponent:\n      {\n        // TODO: popHydrationState\n        popHostContext(workInProgress);\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext();\n\n        const flags = workInProgress.flags;\n\n        if (flags & ShouldCapture) {\n          workInProgress.flags = flags & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext(); // SuspenseList doesn't actually catch anything. It should've been\n        // caught by a nested boundary. If not, it should bubble through.\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer();\n      return null;\n\n    case ContextProvider:\n      popProvider(workInProgress);\n      return null;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes();\n      return null;\n\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork) {\n  switch (interruptedWork.tag) {\n    case ClassComponent:\n      {\n        const childContextTypes = interruptedWork.type.childContextTypes;\n\n        if (childContextTypes !== null && childContextTypes !== undefined) {\n          popContext();\n        }\n\n        break;\n      }\n\n    case HostRoot:\n      {\n        popHostContainer();\n        popTopLevelContextObject();\n        resetWorkInProgressVersions();\n        break;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(interruptedWork);\n        break;\n      }\n\n    case HostPortal:\n      popHostContainer();\n      break;\n\n    case SuspenseComponent:\n      popSuspenseContext();\n      break;\n\n    case SuspenseListComponent:\n      popSuspenseContext();\n      break;\n\n    case ContextProvider:\n      popProvider(interruptedWork);\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes();\n      break;\n  }\n}\n\nfunction createCapturedValue(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\nfunction showErrorDialog(boundary, errorInfo) {\n  return true;\n}\n\nfunction logCapturedError(boundary, errorInfo) {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n\n    if (logError === false) {\n      return;\n    }\n\n    const error = errorInfo.value;\n\n    if (false) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        } // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n\n\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentName(source.type) : null;\n      const componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : 'The above error occurred in one of your React components:';\n      let errorBoundaryMessage;\n      const errorBoundaryName = getComponentName(boundary.type);\n\n      if (errorBoundaryName) {\n        errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n      } else {\n        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      }\n\n      const combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\n  const update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\n\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: null\n  };\n  const error = errorInfo.value;\n\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n\n    update.payload = () => {\n      logCapturedError(fiber, errorInfo);\n      return getDerivedStateFromError(error);\n    };\n  }\n\n  const inst = fiber.stateNode;\n\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined\n\n        logCapturedError(fiber, errorInfo);\n      }\n\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : ''\n      });\n    };\n  }\n\n  return update;\n}\n\nfunction attachPingListener(root, wakeable, lanes) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But only if\n  // one does not already exist for the lanes we're currently rendering (which\n  // acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete; // Its effect list is no longer valid.\n\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\n    // This is a wakeable.\n    const wakeable = value;\n\n    if ((sourceFiber.mode & BlockingMode) === NoMode) {\n      // Reset the memoizedState to what it was before we attempted\n      // to render it.\n      const currentSource = sourceFiber.alternate;\n\n      if (currentSource) {\n        sourceFiber.updateQueue = currentSource.updateQueue;\n        sourceFiber.memoizedState = currentSource.memoizedState;\n        sourceFiber.lanes = currentSource.lanes;\n      } else {\n        sourceFiber.updateQueue = null;\n        sourceFiber.memoizedState = null;\n      }\n    }\n\n    const hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.\n\n    let workInProgress = returnFiber;\n\n    do {\n      if (workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(workInProgress, hasInvisibleParentBoundary)) {\n        // Found the nearest boundary.\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const wakeables = workInProgress.updateQueue;\n\n        if (wakeables === null) {\n          const updateQueue = new Set();\n          updateQueue.add(wakeable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          wakeables.add(wakeable);\n        } // If the boundary is outside of blocking mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a blocking mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n\n\n        if ((workInProgress.mode & BlockingMode) === NoMode) {\n          workInProgress.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force update to\n              // prevent a bail out.\n              const update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          } // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n\n\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane); // Exit without suspending.\n\n          return;\n        } // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n        //\n        // After this we'll use a set of heuristics to determine whether this\n        // render pass will run to completion or restart or \"suspend\" the commit.\n        // The actual logic for this is spread out in different places.\n        //\n        // This first principle is that if we're going to suspend when we complete\n        // a root, then we should also restart if we get an update or ping that\n        // might unsuspend it, and vice versa. The only reason to suspend is\n        // because you think you might want to restart before committing. However,\n        // it doesn't make sense to restart only while in the period we're suspended.\n        //\n        // Restarting too aggressively is also not good because it starves out any\n        // intermediate loading state. So we use heuristics to determine when.\n        // Suspense Heuristics\n        //\n        // If nothing threw a Promise or all the same fallbacks are already showing,\n        // then don't suspend/restart.\n        //\n        // If this is an initial render of a new tree of Suspense boundaries and\n        // those trigger a fallback, then don't suspend/restart. We want to ensure\n        // that we can show the initial loading state as quickly as possible.\n        //\n        // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n        // a fallback, then we should always suspend/restart. Transitions apply\n        // to this case. If none is defined, JND is used instead.\n        //\n        // If we're already showing a fallback and it gets \"retried\", allowing us to show\n        // another level, but there's still an inner boundary that would show a fallback,\n        // then we suspend/restart for 500ms since the last time we showed a fallback\n        // anywhere in the tree. This effectively throttles progressive loading into a\n        // consistent train of commits. This also gives us an opportunity to restart to\n        // get to the completed state slightly earlier.\n        //\n        // If there's ambiguity due to batching it's resolved in preference of:\n        // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n        //\n        // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n        // ensure that new initial loading states can commit as soon as possible.\n\n\n        attachPingListener(root, wakeable, rootRenderLanes);\n        workInProgress.flags |= ShouldCapture;\n        workInProgress.lanes = rootRenderLanes;\n        return;\n      } // This boundary already captured during this render. Continue to the next\n      // boundary.\n\n\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null); // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n\n\n    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\\n' + '\\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.');\n  } // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n\n\n  renderDidError();\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot:\n        {\n          const errorInfo = value;\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n\n        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\n\n          const update = createClassErrorUpdate(workInProgress, errorInfo, lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n\n        break;\n    }\n\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nconst callComponentWillUnmountWithTimer = function (current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n\n  {\n    instance.componentWillUnmount();\n  }\n}; // Capture errors so they don't interrupt unmounting.\n\n\nfunction safelyCallComponentWillUnmount(current, instance) {\n  {\n    try {\n      callComponentWillUnmountWithTimer(current, instance);\n    } catch (unmountError) {\n      captureCommitPhaseError(current, unmountError);\n    }\n  }\n}\n\nfunction safelyDetachRef(current) {\n  const ref = current.ref;\n\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      {\n        try {\n          ref(null);\n        } catch (refError) {\n          captureCommitPhaseError(current, refError);\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, destroy) {\n  {\n    try {\n      destroy();\n    } catch (error) {\n      captureCommitPhaseError(current, error);\n    }\n  }\n}\n\nfunction commitBeforeMutationLifeCycles(current, finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block:\n      {\n        return;\n      }\n\n    case ClassComponent:\n      {\n        if (finishedWork.flags & Snapshot) {\n          if (current !== null) {\n            const prevProps = current.memoizedProps;\n            const prevState = current.memoizedState;\n            const instance = finishedWork.stateNode; // We could update instance props and state here,\n\n            const snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n\n            instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n          }\n        }\n\n        return;\n      }\n\n    case HostRoot:\n      {\n        {\n          if (finishedWork.flags & Snapshot) {\n            const root = finishedWork.stateNode;\n            clearContainer(root.containerInfo);\n          }\n        }\n\n        return;\n      }\n\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case IncompleteClassComponent:\n      // Nothing to do for these component types\n      return;\n  }\n\n  {\n    {\n      throw Error( formatProdErrorMessage(163));\n    }\n  }\n}\n\nfunction commitHookEffectListUnmount(tag, finishedWork) {\n  const updateQueue = finishedWork.updateQueue;\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(tag, finishedWork) {\n  const updateQueue = finishedWork.updateQueue;\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction schedulePassiveEffects(finishedWork) {\n  const updateQueue = finishedWork.updateQueue;\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n\n    do {\n      const _effect = effect,\n            next = _effect.next,\n            tag = _effect.tag;\n\n      if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {\n        enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);\n        enqueuePendingPassiveHookEffectMount(finishedWork, effect);\n      }\n\n      effect = next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitLifeCycles(finishedRoot, current, finishedWork, committedLanes) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n    case Block:\n      {\n        // At this point layout effects have already been destroyed (during mutation phase).\n        // This is done to prevent sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        {\n          commitHookEffectListMount(Layout | HasEffect, finishedWork);\n        }\n\n        schedulePassiveEffects(finishedWork);\n        return;\n      }\n\n    case ClassComponent:\n      {\n        const instance = finishedWork.stateNode;\n\n        if (finishedWork.flags & Update) {\n          if (current === null) {\n\n            {\n              instance.componentDidMount();\n            }\n          } else {\n            const prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n            const prevState = current.memoizedState; // We could update instance props and state here,\n\n            {\n              instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n            }\n          }\n        } // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n\n\n        const updateQueue = finishedWork.updateQueue;\n\n        if (updateQueue !== null) {\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n\n\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n\n        return;\n      }\n\n    case HostRoot:\n      {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue = finishedWork.updateQueue;\n\n        if (updateQueue !== null) {\n          let instance = null;\n\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n\n              case ClassComponent:\n                instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n\n        return;\n      }\n\n    case HostComponent:\n      {\n        const instance = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n\n        if (current === null && finishedWork.flags & Update) {\n          const type = finishedWork.type;\n          const props = finishedWork.memoizedProps;\n          commitMount(instance, type, props);\n        }\n\n        return;\n      }\n\n    case HostText:\n      {\n        // We have no life-cycles associated with text.\n        return;\n      }\n\n    case HostPortal:\n      {\n        // We have no life-cycles associated with portals.\n        return;\n      }\n\n    case Profiler:\n      {\n        {\n          const _finishedWork$memoize2 = finishedWork.memoizedProps,\n                onCommit = _finishedWork$memoize2.onCommit,\n                onRender = _finishedWork$memoize2.onRender;\n          const effectDuration = finishedWork.stateNode.effectDuration;\n          const commitTime = getCommitTime();\n\n          if (typeof onRender === 'function') {\n            {\n              onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime, finishedRoot.memoizedInteractions);\n            }\n          }\n        }\n\n        return;\n      }\n\n    case SuspenseComponent:\n      {\n        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        return;\n      }\n\n    case SuspenseListComponent:\n    case IncompleteClassComponent:\n    case FundamentalComponent:\n    case ScopeComponent:\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      return;\n  }\n\n  {\n    {\n      throw Error( formatProdErrorMessage(163));\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node = finishedWork;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        const instance = node.stateNode;\n\n        if (isHidden) {\n          hideInstance(instance);\n        } else {\n          unhideInstance(node.stateNode, node.memoizedProps);\n        }\n      } else if (node.tag === HostText) {\n        const instance = node.stateNode;\n\n        if (isHidden) {\n          hideTextInstance(instance);\n        } else {\n          unhideTextInstance(instance, node.memoizedProps);\n        }\n      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  const ref = finishedWork.ref;\n\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n\n      default:\n        instanceToUse = instance;\n    } // Moved outside to ensure DCE works with this flag\n\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current) {\n  const currentRef = current.ref;\n\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      currentRef(null);\n    } else {\n      currentRef.current = null;\n    }\n  }\n} // User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\n\n\nfunction commitUnmount(finishedRoot, current, renderPriorityLevel) {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block:\n      {\n        const updateQueue = current.updateQueue;\n\n        if (updateQueue !== null) {\n          const lastEffect = updateQueue.lastEffect;\n\n          if (lastEffect !== null) {\n            const firstEffect = lastEffect.next;\n            let effect = firstEffect;\n\n            do {\n              const _effect2 = effect,\n                    destroy = _effect2.destroy,\n                    tag = _effect2.tag;\n\n              if (destroy !== undefined) {\n                if ((tag & Passive$1) !== NoFlags$1) {\n                  enqueuePendingPassiveHookEffectUnmount(current, effect);\n                } else {\n                  {\n                    safelyCallDestroy(current, destroy);\n                  }\n                }\n              }\n\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n\n        return;\n      }\n\n    case ClassComponent:\n      {\n        safelyDetachRef(current);\n        const instance = current.stateNode;\n\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(current, instance);\n        }\n\n        return;\n      }\n\n    case HostComponent:\n      {\n        safelyDetachRef(current);\n        return;\n      }\n\n    case HostPortal:\n      {\n        // TODO: this is recursive.\n        // We are also not using this parent because\n        // the portal will get pushed immediately.\n        {\n          unmountHostComponents(finishedRoot, current);\n        }\n\n        return;\n      }\n\n    case FundamentalComponent:\n      {\n\n        return;\n      }\n\n    case DehydratedFragment:\n      {\n\n        return;\n      }\n\n    case ScopeComponent:\n      {\n\n        return;\n      }\n  }\n}\n\nfunction commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node = root;\n\n  while (true) {\n    commitUnmount(finishedRoot, node); // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n\n    if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.\n    // If we don't use mutation we drill down into portals here instead.\n     node.tag !== HostPortal)) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === root) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiberMutation(fiber) {\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\n  // should clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child. This child\n  // itself will be GC:ed when the parent updates the next time.\n  // Note: we cannot null out sibling here, otherwise it can cause issues\n  // with findDOMNode and how it requires the sibling field to carry out\n  // traversal in a later effect. See PR #16820. We now clear the sibling\n  // field after effects, see: detachFiberAfterEffects.\n  //\n  // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.\n  // It may be required if the current component is an error boundary,\n  // and one of its descendants throws while unmounting a passive effect.\n  fiber.alternate = null;\n  fiber.child = null;\n  fiber.dependencies = null;\n  fiber.firstEffect = null;\n  fiber.lastEffect = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.return = null;\n  fiber.updateQueue = null;\n}\n\nfunction getHostParentFiber(fiber) {\n  let parent = fiber.return;\n\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n\n    parent = parent.return;\n  }\n\n  {\n    {\n      throw Error( formatProdErrorMessage(160));\n    }\n  }\n}\n\nfunction isHostParent(fiber) {\n  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n}\n\nfunction getHostSibling(fiber) {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node = fiber;\n\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n\n    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      } // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n\n\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    } // Check if this host node is stable or about to be placed.\n\n\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork) {\n\n\n  const parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\n\n  let parent;\n  let isContainer;\n  const parentStateNode = parentFiber.stateNode;\n\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentStateNode;\n      isContainer = false;\n      break;\n\n    case HostRoot:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n\n    case HostPortal:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n\n    case FundamentalComponent:\n\n    // eslint-disable-next-line-no-fallthrough\n\n    default:\n      {\n        {\n          throw Error( formatProdErrorMessage(161));\n        }\n      }\n\n  }\n\n  if (parentFiber.flags & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent); // Clear ContentReset from the effect tag\n\n    parentFiber.flags &= ~ContentReset;\n  }\n\n  const before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n\n  if (isContainer) {\n    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n  } else {\n    insertOrAppendPlacementNode(finishedWork, before, parent);\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  const tag = node.tag;\n  const isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost || enableFundamentalAPI ) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    const child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  const tag = node.tag;\n  const isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost || enableFundamentalAPI ) {\n    const stateNode = isHost ? node.stateNode : node.stateNode.instance;\n\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    const child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(finishedRoot, current, renderPriorityLevel) {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node = current; // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n\n  let currentParentIsValid = false; // Note: these two variables *must* always be updated together.\n\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n\n      findParent: while (true) {\n        if (!(parent !== null)) {\n          {\n            throw Error( formatProdErrorMessage(160));\n          }\n        }\n\n        const parentStateNode = parent.stateNode;\n\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n\n        }\n\n        parent = parent.return;\n      }\n\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node); // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n\n      if (currentParentIsContainer) {\n        removeChildFromContainer(currentParent, node.stateNode);\n      } else {\n        removeChild(currentParent, node.stateNode);\n      } // Don't visit children because we already visited them.\n\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true; // Visit children because portals might contain host components.\n\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node); // Visit children because we may find more host components below.\n\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n\n    if (node === current) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n\n      node = node.return;\n\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(finishedRoot, current, renderPriorityLevel) {\n  {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current);\n  }\n\n  const alternate = current.alternate;\n  detachFiberMutation(current);\n\n  if (alternate !== null) {\n    detachFiberMutation(alternate);\n  }\n}\n\nfunction commitWork(current, finishedWork) {\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case Block:\n      {\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        {\n          commitHookEffectListUnmount(Layout | HasEffect, finishedWork);\n        }\n\n        return;\n      }\n\n    case ClassComponent:\n      {\n        return;\n      }\n\n    case HostComponent:\n      {\n        const instance = finishedWork.stateNode;\n\n        if (instance != null) {\n          // Commit the work prepared earlier.\n          const newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n          // as the newProps. The updatePayload will contain the real change in\n          // this case.\n\n          const oldProps = current !== null ? current.memoizedProps : newProps;\n          const type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\n\n          const updatePayload = finishedWork.updateQueue;\n          finishedWork.updateQueue = null;\n\n          if (updatePayload !== null) {\n            commitUpdate(instance, updatePayload, type, oldProps, newProps);\n          }\n        }\n\n        return;\n      }\n\n    case HostText:\n      {\n        if (!(finishedWork.stateNode !== null)) {\n          {\n            throw Error( formatProdErrorMessage(162));\n          }\n        }\n\n        const textInstance = finishedWork.stateNode;\n        const newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n\n        const oldText = current !== null ? current.memoizedProps : newText;\n        commitTextUpdate(textInstance, oldText, newText);\n        return;\n      }\n\n    case HostRoot:\n      {\n        {\n          const root = finishedWork.stateNode;\n\n          if (root.hydrate) {\n            // We've just hydrated. No need to hydrate again.\n            root.hydrate = false;\n            commitHydratedContainer(root.containerInfo);\n          }\n        }\n\n        return;\n      }\n\n    case Profiler:\n      {\n        return;\n      }\n\n    case SuspenseComponent:\n      {\n        commitSuspenseComponent(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n\n    case SuspenseListComponent:\n      {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n\n    case IncompleteClassComponent:\n      {\n        return;\n      }\n\n    case FundamentalComponent:\n      {\n\n        break;\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        const newState = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        hideOrUnhideAllChildren(finishedWork, isHidden);\n        return;\n      }\n  }\n\n  {\n    {\n      throw Error( formatProdErrorMessage(163));\n    }\n  }\n}\n\nfunction commitSuspenseComponent(finishedWork) {\n  const newState = finishedWork.memoizedState;\n\n  if (newState !== null) {\n    markCommitTimeOfFallback();\n\n    {\n      // Hide the Offscreen component that contains the primary children. TODO:\n      // Ideally, this effect would have been scheduled on the Offscreen fiber\n      // itself. That's how unhiding works: the Offscreen component schedules an\n      // effect on itself. However, in this case, the component didn't complete,\n      // so the fiber was never added to the effect list in the normal path. We\n      // could have appended it to the effect list in the Suspense component's\n      // second pass, but doing it this way is less complicated. This would be\n      // simpler if we got rid of the effect list and traversed the tree, like\n      // we're planning to do.\n      const primaryChildParent = finishedWork.child;\n      hideOrUnhideAllChildren(primaryChildParent, true);\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n\n  const newState = finishedWork.memoizedState;\n\n  if (newState === null) {\n    const current = finishedWork.alternate;\n\n    if (current !== null) {\n      const prevState = current.memoizedState;\n\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables = finishedWork.updateQueue;\n\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      let retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n      if (!retryCache.has(wakeable)) {\n        {\n          if (wakeable.__reactDoNotTraceInteractions !== true) {\n            retry = tracing.unstable_wrap(retry);\n          }\n        }\n\n        retryCache.add(wakeable);\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n} // This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\n\n\nfunction isSuspenseBoundaryBeingHidden(current, finishedWork) {\n  if (current !== null) {\n    const oldState = current.memoizedState;\n\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n\n  return false;\n}\n\nfunction commitResetTextContent(current) {\n\n  resetTextContent(current.stateNode);\n}\n\nconst ceil = Math.ceil;\nconst ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n      IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;\nconst NoContext =\n/*             */\n0b0000000;\nconst BatchedContext =\n/*               */\n0b0000001;\nconst EventContext =\n/*                 */\n0b0000010;\nconst DiscreteEventContext =\n/*         */\n0b0000100;\nconst LegacyUnbatchedContext =\n/*       */\n0b0001000;\nconst RenderContext =\n/*                */\n0b0010000;\nconst CommitContext =\n/*                */\n0b0100000;\nconst RetryAfterError =\n/*       */\n0b1000000;\nconst RootIncomplete = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5; // Describes where we are in the React execution stack\n\nlet executionContext = NoContext; // The root we're working on\n\nlet workInProgressRoot = null; // The fiber we're working on\n\nlet workInProgress = null; // The lanes we're rendering\n\nlet workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\n\nlet subtreeRenderLanes = NoLanes;\nconst subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\n\nlet workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown\n\nlet workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\n\nlet workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\n\nlet workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\n\nlet workInProgressRootUpdatedLanes = NoLanes; // Lanes that were pinged (in an interleaved event) during this render.\n\nlet workInProgressRootPingedLanes = NoLanes;\nlet mostRecentlyUpdatedRoot = null; // The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\n\nlet globalMostRecentFallbackTime = 0;\nconst FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\n\nlet workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\n\nconst RENDER_TIMEOUT_MS = 500;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nfunction getRenderTargetTime() {\n  return workInProgressRootRenderTargetTime;\n}\nlet nextEffect = null;\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed = null;\nlet rootDoesHavePassiveEffects = false;\nlet rootWithPendingPassiveEffects = null;\nlet pendingPassiveEffectsRenderPriority = NoPriority$1;\nlet pendingPassiveEffectsLanes = NoLanes;\nlet pendingPassiveHookEffectsMount = [];\nlet pendingPassiveHookEffectsUnmount = [];\nlet rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates\n\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount = 0;\nlet rootWithNestedUpdates = null;\n// during the commit phase. This enables them to be traced across components\n// that spawn new work during render. E.g. hidden boundaries, suspended SSR\n// hydration or SuspenseList.\n// TODO: Can use a bitmask instead of an array\n\nlet spawnedWorkDuringRender = null; // If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\n\nlet currentEventTime = NoTimestamp;\nlet currentEventWipLanes = NoLanes;\nlet currentEventPendingLanes = NoLanes; // Dev only flag that tracks if passive effects are currently being flushed.\nlet focusedInstanceHandle = null;\nlet shouldFireAfterActiveInstanceBlur = false;\nfunction getWorkInProgressRoot() {\n  return workInProgressRoot;\n}\nfunction requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  } // We're not inside React, so we may be in the middle of a browser event.\n\n\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  } // This is the first update since React yielded. Compute a new start time.\n\n\n  currentEventTime = now();\n  return currentEventTime;\n}\nfunction requestUpdateLane(fiber) {\n  // Special cases\n  const mode = fiber.mode;\n\n  if ((mode & BlockingMode) === NoMode) {\n    return SyncLane;\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;\n  } // The algorithm for assigning an update to a lane should be stable for all\n  // updates at the same priority within the same event. To do this, the inputs\n  // to the algorithm must be the same. For example, we use the `renderLanes`\n  // to avoid choosing a lane that is already in the middle of rendering.\n  //\n  // However, the \"included\" lanes could be mutated in between updates in the\n  // same event, like if you perform an update inside `flushSync`. Or any other\n  // code path that might call `prepareFreshStack`.\n  //\n  // The trick we use is to cache the first of each of these inputs within an\n  // event. Then reset the cached values once we can be sure the event is over.\n  // Our heuristic for that is whenever we enter a concurrent work loop.\n  //\n  // We'll do the same for `currentEventPendingLanes` below.\n\n\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    if (currentEventPendingLanes !== NoLanes) {\n      currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;\n    }\n\n    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);\n  } // TODO: Remove this dependency on the Scheduler priority.\n  // To do that, we're replacing it with an update lane priority.\n\n\n  const schedulerPriority = getCurrentPriorityLevel(); // The old behavior was using the priority level of the Scheduler.\n  // This couples React to the Scheduler internals, so we're replacing it\n  // with the currentUpdateLanePriority above. As an example of how this\n  // could be problematic, if we're not inside `Scheduler.runWithPriority`,\n  // then we'll get the priority of the current running Scheduler task,\n  // which is probably not what we want.\n\n  let lane;\n\n  if ( // TODO: Temporary. We're removing the concept of discrete updates.\n  (executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) {\n    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);\n  } else {\n    const schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);\n\n    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);\n  }\n\n  return lane;\n}\n\nfunction requestRetryLane(fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  // Special cases\n  const mode = fiber.mode;\n\n  if ((mode & BlockingMode) === NoMode) {\n    return SyncLane;\n  } else if ((mode & ConcurrentMode) === NoMode) {\n    return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;\n  } // See `requestUpdateLane` for explanation of `currentEventWipLanes`\n\n\n  if (currentEventWipLanes === NoLanes) {\n    currentEventWipLanes = workInProgressRootIncludedLanes;\n  }\n\n  return findRetryLane(currentEventWipLanes);\n}\n\nfunction scheduleUpdateOnFiber(fiber, lane, eventTime) {\n  checkForNestedUpdates();\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane);\n\n  if (root === null) {\n    return null;\n  } // Mark that the root has a pending update.\n\n\n  markRootUpdated(root, lane, eventTime);\n\n  if (root === workInProgressRoot) {\n    // Received an update to a tree that's in the middle of rendering. Mark\n    // that there was an interleaved update work on this root. Unless the\n    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n    // phase update. In that case, we don't treat render phase updates as if\n    // they were interleaved, for backwards compat reasons.\n    {\n      workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);\n    }\n\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n      // The root already suspended with a delay, which means this render\n      // definitely won't finish. Since we have a new update, let's mark it as\n      // suspended now, right before marking the incoming update. This has the\n      // effect of interrupting the current render and switching to the update.\n      // TODO: Make sure this doesn't override pings that happen while we've\n      // already started rendering.\n      markRootSuspended$1(root, workInProgressRootRenderLanes);\n    }\n  } // TODO: requestUpdateLanePriority also reads the priority. Pass the\n  // priority as an argument to that function and this one.\n\n\n  const priorityLevel = getCurrentPriorityLevel();\n\n  if (lane === SyncLane) {\n    if ( // Check if we're inside unbatchedUpdates\n    (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering\n    (executionContext & (RenderContext | CommitContext)) === NoContext) {\n      // Register pending interactions on the root to avoid losing traced interaction data.\n      schedulePendingInteractions(root, lane); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed\n      // root inside of batchedUpdates should be synchronous, but layout updates\n      // should be deferred until the end of the batch.\n\n      performSyncWorkOnRoot(root);\n    } else {\n      ensureRootIsScheduled(root, eventTime);\n      schedulePendingInteractions(root, lane);\n\n      if (executionContext === NoContext) {\n        // Flush the synchronous work now, unless we're already working or inside\n        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n        // scheduleCallbackForFiber to preserve the ability to schedule a callback\n        // without immediately flushing it. We only do this for user-initiated\n        // updates, to preserve historical behavior of legacy mode.\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  } else {\n    // Schedule a discrete update but only if it's not Sync.\n    if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered\n    // discrete, even inside a discrete event.\n    priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {\n      // This is the result of a discrete event. Track the lowest priority\n      // discrete update per root so we can flush them early, if needed.\n      if (rootsWithPendingDiscreteUpdates === null) {\n        rootsWithPendingDiscreteUpdates = new Set([root]);\n      } else {\n        rootsWithPendingDiscreteUpdates.add(root);\n      }\n    } // Schedule other updates after in case the callback is sync.\n\n\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, lane);\n  } // We use this when assigning a lane for a transition inside\n  // `requestUpdateLane`. We assume it's the same as the root being updated,\n  // since in the common case of a single root app it probably is. If it's not\n  // the same root, then it's not a huge deal, we just might batch more stuff\n  // together more than necessary.\n\n\n  mostRecentlyUpdatedRoot = root;\n} // This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\n\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    const root = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n} // Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\n\n\nfunction ensureRootIsScheduled(root, currentTime) {\n  const existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\n\n  const nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes); // This returns the priority level computed during the `getNextLanes` call.\n\n  const newCallbackPriority = returnNextLanesPriority();\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n      root.callbackNode = null;\n      root.callbackPriority = NoLanePriority;\n    }\n\n    return;\n  } // Check if there's an existing task. We may be able to reuse it.\n\n\n  if (existingCallbackNode !== null) {\n    const existingCallbackPriority = root.callbackPriority;\n\n    if (existingCallbackPriority === newCallbackPriority) {\n      // The priority hasn't changed. We can reuse the existing task. Exit.\n      return;\n    } // The priority changed. Cancel the existing callback. We'll schedule a new\n    // one below.\n\n\n    cancelCallback(existingCallbackNode);\n  } // Schedule a new callback.\n\n\n  let newCallbackNode;\n\n  if (newCallbackPriority === SyncLanePriority) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n  } else if (newCallbackPriority === SyncBatchedLanePriority) {\n    newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root));\n  } else {\n    const schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);\n    newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n} // This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\n\n\nfunction performConcurrentWorkOnRoot(root) {\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventWipLanes = NoLanes;\n  currentEventPendingLanes = NoLanes;\n\n  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {\n    {\n      throw Error( formatProdErrorMessage(327));\n    }\n  } // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n\n\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    }\n  } // Determine the next expiration time to work on, using the fields stored\n  // on the root.\n\n\n  let lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  let exitStatus = renderRootConcurrent(root, lanes);\n\n  if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {\n    // The render included lanes that were updated during the render phase.\n    // For example, when unhiding a hidden tree, we include all the lanes\n    // that were previously skipped when the tree was hidden. That set of\n    // lanes is a superset of the lanes we started rendering with.\n    //\n    // So we'll throw out the current work and restart.\n    prepareFreshStack(root, NoLanes);\n  } else if (exitStatus !== RootIncomplete) {\n    if (exitStatus === RootErrored) {\n      executionContext |= RetryAfterError; // If an error occurred during hydration,\n      // discard server response and fall back to client side render.\n\n      if (root.hydrate) {\n        root.hydrate = false;\n        clearContainer(root.containerInfo);\n      } // If something threw an error, try rendering one more time. We'll render\n      // synchronously to block concurrent data mutations, and we'll includes\n      // all pending updates are included. If it still fails after the second\n      // attempt, we'll give up and commit the resulting tree.\n\n\n      lanes = getLanesToRetrySynchronouslyOnError(root);\n\n      if (lanes !== NoLanes) {\n        exitStatus = renderRootSync(root, lanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended$1(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    } // We now have a consistent tree. The next step is either to commit it,\n    // or, if something suspended, wait to commit it after a timeout.\n\n\n    const finishedWork = root.current.alternate;\n    root.finishedWork = finishedWork;\n    root.finishedLanes = lanes;\n    finishConcurrentRender(root, exitStatus, lanes);\n  }\n\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootIncomplete:\n    case RootFatalErrored:\n      {\n        {\n          {\n            throw Error( formatProdErrorMessage(345));\n          }\n        }\n      }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n\n    case RootErrored:\n      {\n        // We should have already attempted to retry this tree. If we reached\n        // this point, it errored again. Commit it.\n        commitRoot(root);\n        break;\n      }\n\n    case RootSuspended:\n      {\n        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\n        // should immediately commit it or wait a bit.\n\n        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()) {\n          // This render only included retries, no updates. Throttle committing\n          // retries so that we don't show too many loading states too quickly.\n          const msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\n\n          if (msUntilTimeout > 10) {\n            const nextLanes = getNextLanes(root, NoLanes);\n\n            if (nextLanes !== NoLanes) {\n              // There's additional work on this root.\n              break;\n            }\n\n            const suspendedLanes = root.suspendedLanes;\n\n            if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n              // We should prefer to render the fallback of at the last\n              // suspended level. Ping the last suspended level to try\n              // rendering it again.\n              // FIXME: What if the suspended lanes are Idle? Should not restart.\n              const eventTime = requestEventTime();\n              markRootPinged(root, suspendedLanes);\n              break;\n            } // The render is suspended, it hasn't timed out, and there's no\n            // lower priority work to do. Instead of committing the fallback\n            // immediately, wait for more data to arrive.\n\n\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);\n            break;\n          }\n        } // The work expired. Commit immediately.\n\n\n        commitRoot(root);\n        break;\n      }\n\n    case RootSuspendedWithDelay:\n      {\n        markRootSuspended$1(root, lanes);\n\n        if (includesOnlyTransitions(lanes)) {\n          // This is a transition, so we should exit without committing a\n          // placeholder and without scheduling a timeout. Delay indefinitely\n          // until we receive more data.\n          break;\n        }\n\n        {\n          // This is not a transition, but we did trigger an avoided state.\n          // Schedule a placeholder to display after a short delay, using the Just\n          // Noticeable Difference.\n          // TODO: Is the JND optimization worth the added complexity? If this is\n          // the only reason we track the event time, then probably not.\n          // Consider removing.\n          const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n          const eventTimeMs = mostRecentEventTime;\n          const timeElapsedMs = now() - eventTimeMs;\n          const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\n\n          if (msUntilTimeout > 10) {\n            // Instead of committing the fallback immediately, wait for more data\n            // to arrive.\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);\n            break;\n          }\n        } // Commit the placeholder.\n\n\n        commitRoot(root);\n        break;\n      }\n\n    case RootCompleted:\n      {\n        // The work completed. Ready to commit.\n        commitRoot(root);\n        break;\n      }\n\n    default:\n      {\n        {\n          {\n            throw Error( formatProdErrorMessage(329));\n          }\n        }\n      }\n  }\n}\n\nfunction markRootSuspended$1(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);\n  markRootSuspended(root, suspendedLanes);\n} // This is the entry point for synchronous tasks that don't go\n// through Scheduler\n\n\nfunction performSyncWorkOnRoot(root) {\n  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {\n    {\n      throw Error( formatProdErrorMessage(327));\n    }\n  }\n\n  flushPassiveEffects();\n  let lanes;\n  let exitStatus;\n\n  if (root === workInProgressRoot && includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)) {\n    // There's a partial tree, and at least one of its lanes has expired. Finish\n    // rendering it before rendering the rest of the expired work.\n    lanes = workInProgressRootRenderLanes;\n    exitStatus = renderRootSync(root, lanes);\n\n    if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {\n      // The render included lanes that were updated during the render phase.\n      // For example, when unhiding a hidden tree, we include all the lanes\n      // that were previously skipped when the tree was hidden. That set of\n      // lanes is a superset of the lanes we started rendering with.\n      //\n      // Note that this only happens when part of the tree is rendered\n      // concurrently. If the whole tree is rendered synchronously, then there\n      // are no interleaved events.\n      lanes = getNextLanes(root, lanes);\n      exitStatus = renderRootSync(root, lanes);\n    }\n  } else {\n    lanes = getNextLanes(root, NoLanes);\n    exitStatus = renderRootSync(root, lanes);\n  }\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    executionContext |= RetryAfterError; // If an error occurred during hydration,\n    // discard server response and fall back to client side render.\n\n    if (root.hydrate) {\n      root.hydrate = false;\n      clearContainer(root.containerInfo);\n    } // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n\n\n    lanes = getLanesToRetrySynchronouslyOnError(root);\n\n    if (lanes !== NoLanes) {\n      exitStatus = renderRootSync(root, lanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended$1(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  } // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n\n\n  const finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root); // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n\n  ensureRootIsScheduled(root, now());\n  return null;\n}\nfunction flushDiscreteUpdates() {\n  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.\n  // However, `act` uses `batchedUpdates`, so there's no way to distinguish\n  // those two cases. Need to fix this before exposing flushDiscreteUpdates\n  // as a public API.\n  if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {\n    // This is probably a nested event dispatch triggered by a lifecycle/effect,\n    // like `el.focus()`. Exit.\n\n\n    return;\n  }\n\n  flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that\n  // they fire before the next serial event.\n\n  flushPassiveEffects();\n}\n\nfunction flushPendingDiscreteUpdates() {\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    // For each root with pending discrete updates, schedule a callback to\n    // immediately flush them.\n    const roots = rootsWithPendingDiscreteUpdates;\n    rootsWithPendingDiscreteUpdates = null;\n    roots.forEach(root => {\n      markDiscreteUpdatesExpired(root);\n      ensureRootIsScheduled(root, now());\n    });\n  } // Now flush the immediate queue.\n\n\n  flushSyncCallbackQueue();\n}\n\nfunction batchedUpdates$1(fn, a) {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\nfunction batchedEventUpdates$1(fn, a) {\n  const prevExecutionContext = executionContext;\n  executionContext |= EventContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\nfunction discreteUpdates$1(fn, a, b, c, d) {\n  const prevExecutionContext = executionContext;\n  executionContext |= DiscreteEventContext;\n\n  {\n    try {\n      return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a, b, c, d));\n    } finally {\n      executionContext = prevExecutionContext;\n\n      if (executionContext === NoContext) {\n        // Flush the immediate callbacks that were scheduled during this batch\n        resetRenderTimer();\n        flushSyncCallbackQueue();\n      }\n    }\n  }\n}\nfunction unbatchedUpdates(fn, a) {\n  const prevExecutionContext = executionContext;\n  executionContext &= ~BatchedContext;\n  executionContext |= LegacyUnbatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbackQueue();\n    }\n  }\n}\nfunction flushSync(fn, a) {\n  const prevExecutionContext = executionContext;\n\n  if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {\n\n    return fn(a);\n  }\n\n  executionContext |= BatchedContext;\n\n  {\n    try {\n      if (fn) {\n        return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a));\n      } else {\n        return undefined;\n      }\n    } finally {\n      executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\n      // Note that this will happen even if batchedUpdates is higher up\n      // the stack.\n\n      flushSyncCallbackQueue();\n    }\n  }\n}\nfunction pushRenderLanes(fiber, lanes) {\n  push(subtreeRenderLanesCursor, subtreeRenderLanes);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n}\nfunction popRenderLanes(fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  pop(subtreeRenderLanesCursor);\n}\n\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  const timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  workInProgressRoot = root;\n  workInProgress = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n\n  {\n    spawnedWorkDuringRender = null;\n  }\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    let erroredWork = workInProgress;\n\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n\n      ReactCurrentOwner$2.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n\n      continue;\n    } // Return to the normal work loop.\n\n\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher$2.current;\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher$2.current = prevDispatcher;\n}\n\nfunction pushInteractions(root) {\n  {\n    const prevInteractions = tracing.__interactionsRef.current;\n    tracing.__interactionsRef.current = root.memoizedInteractions;\n    return prevInteractions;\n  }\n}\n\nfunction popInteractions(prevInteractions) {\n  {\n    tracing.__interactionsRef.current = prevInteractions;\n  }\n}\n\nfunction markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\nfunction markSkippedUpdateLanes(lane) {\n  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n}\nfunction renderDidSuspend() {\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\nfunction renderDidSuspendDelayIfPossible() {\n  if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  } // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n\n\n  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\nfunction renderDidError() {\n  if (workInProgressRootExitStatus !== RootCompleted) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n} // Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\n\nfunction renderHasNotSuspendedYet() {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootIncomplete;\n}\n\nfunction renderRootSync(root, lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n\n  {\n    popInteractions(prevInteractions);\n  }\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    {\n      {\n        throw Error( formatProdErrorMessage(261));\n      }\n    }\n  }\n\n\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\n\n/** @noinline */\n\n\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root, lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n    startWorkOnPendingInteractions(root, lanes);\n  }\n\n  const prevInteractions = pushInteractions(root);\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n\n  {\n    popInteractions(prevInteractions);\n  }\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n\n  if (workInProgress !== null) {\n\n    return RootIncomplete;\n  } else {\n\n\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\n\n    return workInProgressRootExitStatus;\n  }\n}\n/** @noinline */\n\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork) {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  let next;\n\n  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner$2.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork) {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return; // Check if the work completed or if something threw.\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      let next;\n\n      if ( (completedWork.mode & ProfileMode) === NoMode) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\n\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n\n      resetChildLanes(completedWork);\n\n      if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete\n      (returnFiber.flags & Incomplete) === NoFlags) {\n        // Append all the effects of the subtree and this fiber onto the effect\n        // list of the parent. The completion order of the children affects the\n        // side-effect order.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = completedWork.firstEffect;\n        }\n\n        if (completedWork.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork.firstEffect;\n          }\n\n          returnFiber.lastEffect = completedWork.lastEffect;\n        } // If this fiber had side-effects, we append it AFTER the children's\n        // side-effects. We can perform certain side-effects earlier if needed,\n        // by doing multiple passes over the effect list. We don't want to\n        // schedule our own side-effect on our own list because if end up\n        // reusing children we'll schedule this effect onto itself since we're\n        // at the end.\n\n\n        const flags = completedWork.flags; // Skip both NoWork and PerformedWork tags when creating the effect\n        // list. PerformedWork effect is read by React DevTools but shouldn't be\n        // committed.\n\n        if (flags > PerformedWork) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = completedWork;\n          } else {\n            returnFiber.firstEffect = completedWork;\n          }\n\n          returnFiber.lastEffect = completedWork;\n        }\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(completedWork); // Because this fiber did not complete, don't reset its expiration time.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if ( (completedWork.mode & ProfileMode) !== NoMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\n\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.flags |= Incomplete;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    } // Otherwise, return to the parent\n\n\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\n\n    workInProgress = completedWork;\n  } while (completedWork !== null); // We've reached the root.\n\n\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction resetChildLanes(completedWork) {\n  if ( // TODO: Move this check out of the hot path by moving `resetChildLanes`\n  // to switch statement in `completeWork`.\n  (completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) {\n    // The children of this component are hidden. Don't bubble their\n    // expiration times.\n    return;\n  }\n\n  let newChildLanes = NoLanes; // Bubble up the earliest expiration time.\n\n  if ( (completedWork.mode & ProfileMode) !== NoMode) {\n    // In profiling mode, resetChildExpirationTime is also used to reset\n    // profiler durations.\n    let actualDuration = completedWork.actualDuration;\n    let treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will\n    // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n    // When work is done, it should bubble to the parent's actualDuration. If\n    // the fiber has not been cloned though, (meaning no work was done), then\n    // this value will reflect the amount of time spent working on a previous\n    // render. In that case it should not bubble. We determine whether it was\n    // cloned by comparing the child pointer.\n\n    const shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;\n    let child = completedWork.child;\n\n    while (child !== null) {\n      newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n\n      if (shouldBubbleActualDurations) {\n        actualDuration += child.actualDuration;\n      }\n\n      treeBaseDuration += child.treeBaseDuration;\n      child = child.sibling;\n    }\n\n    const isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;\n\n    if (isTimedOutSuspense) {\n      // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n      const primaryChildFragment = completedWork.child;\n\n      if (primaryChildFragment !== null) {\n        treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n      }\n    }\n\n    completedWork.actualDuration = actualDuration;\n    completedWork.treeBaseDuration = treeBaseDuration;\n  } else {\n    let child = completedWork.child;\n\n    while (child !== null) {\n      newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n      child = child.sibling;\n    }\n  }\n\n  completedWork.childLanes = newChildLanes;\n}\n\nfunction commitRoot(root) {\n  const renderPriorityLevel = getCurrentPriorityLevel();\n  runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root, renderPriorityLevel));\n  return null;\n}\n\nfunction commitRootImpl(root, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {\n    {\n      throw Error( formatProdErrorMessage(327));\n    }\n  }\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (finishedWork === null) {\n\n    return null;\n  }\n\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (!(finishedWork !== root.current)) {\n    {\n      throw Error( formatProdErrorMessage(177));\n    }\n  } // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n\n\n  root.callbackNode = null; // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes); // Clear already finished discrete updates in case that a later call of\n  // `flushDiscreteUpdates` starts a useless render pass which may cancels\n  // a scheduled timeout.\n\n  if (rootsWithPendingDiscreteUpdates !== null) {\n    if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root)) {\n      rootsWithPendingDiscreteUpdates.delete(root);\n    }\n  }\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } // Get the list of effects.\n\n\n  let firstEffect;\n\n  if (finishedWork.flags > PerformedWork) {\n    // A fiber's effect list consists only of its children, not itself. So if\n    // the root has an effect, we need to add it to the end of the list. The\n    // resulting list is the set that would belong to the root's parent, if it\n    // had one; that is, all the effects in the tree including the root.\n    if (finishedWork.lastEffect !== null) {\n      finishedWork.lastEffect.nextEffect = finishedWork;\n      firstEffect = finishedWork.firstEffect;\n    } else {\n      firstEffect = finishedWork;\n    }\n  } else {\n    // There is no effect on the root.\n    firstEffect = finishedWork.firstEffect;\n  }\n\n  if (firstEffect !== null) {\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n    const prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles\n\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n\n    focusedInstanceHandle = prepareForCommit(root.containerInfo);\n    shouldFireAfterActiveInstanceBlur = false;\n    nextEffect = firstEffect;\n\n    do {\n      {\n        try {\n          commitBeforeMutationEffects();\n        } catch (error) {\n          if (!(nextEffect !== null)) {\n            {\n              throw Error( formatProdErrorMessage(330));\n            }\n          }\n\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null); // We no longer need to track the active instance fiber\n\n\n    focusedInstanceHandle = null;\n\n    {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    } // The next phase is the mutation phase, where we mutate the host tree.\n\n\n    nextEffect = firstEffect;\n\n    do {\n      {\n        try {\n          commitMutationEffects(root, renderPriorityLevel);\n        } catch (error) {\n          if (!(nextEffect !== null)) {\n            {\n              throw Error( formatProdErrorMessage(330));\n            }\n          }\n\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n\n    nextEffect = firstEffect;\n\n    do {\n      {\n        try {\n          commitLayoutEffects(root, lanes);\n        } catch (error) {\n          if (!(nextEffect !== null)) {\n            {\n              throw Error( formatProdErrorMessage(330));\n            }\n          }\n\n          captureCommitPhaseError(nextEffect, error);\n          nextEffect = nextEffect.nextEffect;\n        }\n      }\n    } while (nextEffect !== null);\n\n    nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n\n    requestPaint();\n\n    {\n      popInteractions(prevInteractions);\n    }\n\n    executionContext = prevExecutionContext;\n  } else {\n    // No effects.\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n\n    {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n    pendingPassiveEffectsRenderPriority = renderPriorityLevel;\n  } else {\n    // We are done with the effect chain at this point so let's clear the\n    // nextEffect pointers to assist with GC. If we have passive effects, we'll\n    // clear this in flushPassiveEffects.\n    nextEffect = firstEffect;\n\n    while (nextEffect !== null) {\n      const nextNextEffect = nextEffect.nextEffect;\n      nextEffect.nextEffect = null;\n\n      if (nextEffect.flags & Deletion) {\n        detachFiberAfterEffects(nextEffect);\n      }\n\n      nextEffect = nextNextEffect;\n    }\n  } // Read this again, since an effect might have updated it\n\n\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\n\n  if (remainingLanes !== NoLanes) {\n    {\n      if (spawnedWorkDuringRender !== null) {\n        const expirationTimes = spawnedWorkDuringRender;\n        spawnedWorkDuringRender = null;\n\n        for (let i = 0; i < expirationTimes.length; i++) {\n          scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);\n        }\n      }\n\n      schedulePendingInteractions(root, remainingLanes);\n    }\n  } else {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  {\n    if (!rootDidHavePassiveEffects) {\n      // If there are no passive effects, then we can complete the pending interactions.\n      // Otherwise, we'll wait until after the passive effects are flushed.\n      // Wait to do this until after remaining work has been scheduled,\n      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.\n      finishPendingInteractions(root, lanes);\n    }\n  }\n\n  if (remainingLanes === SyncLane) {\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n  // additional work on this root is scheduled.\n\n\n  ensureRootIsScheduled(root, now());\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {\n    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired\n    // synchronously, but layout updates should be deferred until the end\n    // of the batch.\n\n\n    return null;\n  } // If layout work was scheduled, flush it now.\n\n\n  flushSyncCallbackQueue();\n\n  return null;\n}\n\nfunction commitBeforeMutationEffects() {\n  while (nextEffect !== null) {\n    const current = nextEffect.alternate;\n\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      if ((nextEffect.flags & Deletion) !== NoFlags) {\n        if (doesFiberContain(nextEffect, focusedInstanceHandle)) {\n          shouldFireAfterActiveInstanceBlur = true;\n        }\n      } else {\n        // TODO: Move this out of the hot path using a dedicated effect tag.\n        if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) {\n          shouldFireAfterActiveInstanceBlur = true;\n        }\n      }\n    }\n\n    const flags = nextEffect.flags;\n\n    if ((flags & Snapshot) !== NoFlags) {\n      commitBeforeMutationLifeCycles(current, nextEffect);\n    }\n\n    if ((flags & Passive) !== NoFlags) {\n      // If there are passive effects, schedule a callback to flush at\n      // the earliest opportunity.\n      if (!rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = true;\n        scheduleCallback(NormalPriority$1, () => {\n          flushPassiveEffects();\n          return null;\n        });\n      }\n    }\n\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitMutationEffects(root, renderPriorityLevel) {\n  // TODO: Should probably move the bulk of this function to commitWork.\n  while (nextEffect !== null) {\n    const flags = nextEffect.flags;\n\n    if (flags & ContentReset) {\n      commitResetTextContent(nextEffect);\n    }\n\n    if (flags & Ref) {\n      const current = nextEffect.alternate;\n\n      if (current !== null) {\n        commitDetachRef(current);\n      }\n    } // The following switch statement is only concerned about placement,\n    // updates, and deletions. To avoid needing to add a case for every possible\n    // bitmap value, we remove the secondary effects from the effect tag and\n    // switch on that value.\n\n\n    const primaryFlags = flags & (Placement | Update | Deletion | Hydrating);\n\n    switch (primaryFlags) {\n      case Placement:\n        {\n          commitPlacement(nextEffect); // Clear the \"placement\" from effect tag so that we know that this is\n          // inserted, before any life-cycles like componentDidMount gets called.\n          // TODO: findDOMNode doesn't rely on this any more but isMounted does\n          // and isMounted is deprecated anyway so we should be able to kill this.\n\n          nextEffect.flags &= ~Placement;\n          break;\n        }\n\n      case PlacementAndUpdate:\n        {\n          // Placement\n          commitPlacement(nextEffect); // Clear the \"placement\" from effect tag so that we know that this is\n          // inserted, before any life-cycles like componentDidMount gets called.\n\n          nextEffect.flags &= ~Placement; // Update\n\n          const current = nextEffect.alternate;\n          commitWork(current, nextEffect);\n          break;\n        }\n\n      case Hydrating:\n        {\n          nextEffect.flags &= ~Hydrating;\n          break;\n        }\n\n      case HydratingAndUpdate:\n        {\n          nextEffect.flags &= ~Hydrating; // Update\n\n          const current = nextEffect.alternate;\n          commitWork(current, nextEffect);\n          break;\n        }\n\n      case Update:\n        {\n          const current = nextEffect.alternate;\n          commitWork(current, nextEffect);\n          break;\n        }\n\n      case Deletion:\n        {\n          commitDeletion(root, nextEffect);\n          break;\n        }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction commitLayoutEffects(root, committedLanes) {\n\n\n  while (nextEffect !== null) {\n    const flags = nextEffect.flags;\n\n    if (flags & (Update | Callback)) {\n      const current = nextEffect.alternate;\n      commitLifeCycles(root, current, nextEffect);\n    }\n\n    {\n      if (flags & Ref) {\n        commitAttachRef(nextEffect);\n      }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n}\n\nfunction flushPassiveEffects() {\n  // Returns whether passive effects were flushed.\n  if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {\n    const priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;\n    pendingPassiveEffectsRenderPriority = NoPriority$1;\n\n    {\n      return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);\n    }\n  }\n\n  return false;\n}\nfunction enqueuePendingPassiveHookEffectMount(fiber, effect) {\n  pendingPassiveHookEffectsMount.push(effect, fiber);\n\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalPriority$1, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\nfunction enqueuePendingPassiveHookEffectUnmount(fiber, effect) {\n  pendingPassiveHookEffectsUnmount.push(effect, fiber);\n\n  if (!rootDoesHavePassiveEffects) {\n    rootDoesHavePassiveEffects = true;\n    scheduleCallback(NormalPriority$1, () => {\n      flushPassiveEffects();\n      return null;\n    });\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {\n    {\n      throw Error( formatProdErrorMessage(331));\n    }\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  const prevInteractions = pushInteractions(root); // It's important that ALL pending passive effect destroy functions are called\n  // before ANY passive effect create functions are called.\n  // Otherwise effects in sibling components might interfere with each other.\n  // e.g. a destroy function in one component may unintentionally override a ref\n  // value set by a create function in another component.\n  // Layout effects have the same constraint.\n  // First pass: Destroy stale passive effects.\n\n  const unmountEffects = pendingPassiveHookEffectsUnmount;\n  pendingPassiveHookEffectsUnmount = [];\n\n  for (let i = 0; i < unmountEffects.length; i += 2) {\n    const effect = unmountEffects[i];\n    const fiber = unmountEffects[i + 1];\n    const destroy = effect.destroy;\n    effect.destroy = undefined;\n\n    if (typeof destroy === 'function') {\n      {\n        try {\n          if (enableProfilerTimer && enableProfilerCommitHooks && fiber.mode & ProfileMode) {\n            try {\n              startPassiveEffectTimer();\n              destroy();\n            } finally {\n              recordPassiveEffectDuration(fiber);\n            }\n          } else {\n            destroy();\n          }\n        } catch (error) {\n          if (!(fiber !== null)) {\n            {\n              throw Error( formatProdErrorMessage(330));\n            }\n          }\n\n          captureCommitPhaseError(fiber, error);\n        }\n      }\n    }\n  } // Second pass: Create new passive effects.\n\n\n  const mountEffects = pendingPassiveHookEffectsMount;\n  pendingPassiveHookEffectsMount = [];\n\n  for (let i = 0; i < mountEffects.length; i += 2) {\n    const effect = mountEffects[i];\n    const fiber = mountEffects[i + 1];\n\n    {\n      try {\n        const create = effect.create;\n\n        if (enableProfilerTimer && enableProfilerCommitHooks && fiber.mode & ProfileMode) {\n          try {\n            startPassiveEffectTimer();\n            effect.destroy = create();\n          } finally {\n            recordPassiveEffectDuration(fiber);\n          }\n        } else {\n          effect.destroy = create();\n        }\n      } catch (error) {\n        if (!(fiber !== null)) {\n          {\n            throw Error( formatProdErrorMessage(330));\n          }\n        }\n\n        captureCommitPhaseError(fiber, error);\n      }\n    }\n  } // Note: This currently assumes there are no passive effects on the root fiber\n  // because the root is not part of its own effect list.\n  // This could change in the future.\n\n\n  let effect = root.current.firstEffect;\n\n  while (effect !== null) {\n    const nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC\n\n    effect.nextEffect = null;\n\n    if (effect.flags & Deletion) {\n      detachFiberAfterEffects(effect);\n    }\n\n    effect = nextNextEffect;\n  }\n\n  {\n    popInteractions(prevInteractions);\n    finishPendingInteractions(root, lanes);\n  }\n\n  executionContext = prevExecutionContext;\n  flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this\n  return true;\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n}\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\n\nconst onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  const errorInfo = createCapturedValue(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n  enqueueUpdate(rootFiber, update);\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);\n\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, SyncLane);\n  }\n}\n\nfunction captureCommitPhaseError(sourceFiber, error) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = sourceFiber.return;\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n\n      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n        const errorInfo = createCapturedValue(error, sourceFiber);\n        const update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n        enqueueUpdate(fiber, update);\n        const eventTime = requestEventTime();\n        const root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);\n\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n          schedulePendingInteractions(root, SyncLane);\n        } else {\n          // This component has already been unmounted.\n          // We can't schedule any follow up work for the root because the fiber is already unmounted,\n          // but we can still call the log-only boundary so the error isn't swallowed.\n          //\n          // TODO This is only a temporary bandaid for the old reconciler fork.\n          // We can delete this special case once the new fork is merged.\n          if (typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n            try {\n              instance.componentDidCatch(error, errorInfo);\n            } catch (errorToIgnore) {// TODO Ignore this error? Rethrow it?\n              // This is kind of an edge case.\n            }\n          }\n        }\n\n        return;\n      }\n    }\n\n    fiber = fiber.return;\n  }\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  const pingCache = root.pingCache;\n\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes);\n\n  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n  schedulePendingInteractions(root, pingedLanes);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new expiration time.\n  if (retryLane === NoLane) {\n    retryLane = requestRetryLane(boundaryFiber);\n  } // TODO: Special case idle priority?\n\n\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n    schedulePendingInteractions(root, retryLane);\n  }\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  let retryLane = NoLane; // Default\n\n  let retryCache;\n\n  {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n} // Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\n\nfunction jnd(timeElapsed) {\n  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n\n    {\n      {\n        throw Error( formatProdErrorMessage(185));\n      }\n    }\n  }\n}\n\nlet beginWork$1;\n\n{\n  beginWork$1 = beginWork;\n}\n\n\nconst IsThisRendererActing = {\n  current: false\n};\n\nfunction computeThreadID(root, lane) {\n  // Interaction threads are unique per root and expiration time.\n  // NOTE: Intentionally unsound cast. All that matters is that it's a number\n  // and it represents a batch of work. Could make a helper function instead,\n  // but meh this is fine for now.\n  return lane * 1000 + root.interactionThreadID;\n}\n\nfunction markSpawnedWork(lane) {\n\n  if (spawnedWorkDuringRender === null) {\n    spawnedWorkDuringRender = [lane];\n  } else {\n    spawnedWorkDuringRender.push(lane);\n  }\n}\n\nfunction scheduleInteractions(root, lane, interactions) {\n\n  if (interactions.size > 0) {\n    const pendingInteractionMap = root.pendingInteractionMap;\n    const pendingInteractions = pendingInteractionMap.get(lane);\n\n    if (pendingInteractions != null) {\n      interactions.forEach(interaction => {\n        if (!pendingInteractions.has(interaction)) {\n          // Update the pending async work count for previously unscheduled interaction.\n          interaction.__count++;\n        }\n\n        pendingInteractions.add(interaction);\n      });\n    } else {\n      pendingInteractionMap.set(lane, new Set(interactions)); // Update the pending async work count for the current interactions.\n\n      interactions.forEach(interaction => {\n        interaction.__count++;\n      });\n    }\n\n    const subscriber = tracing.__subscriberRef.current;\n\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lane);\n      subscriber.onWorkScheduled(interactions, threadID);\n    }\n  }\n}\n\nfunction schedulePendingInteractions(root, lane) {\n\n  scheduleInteractions(root, lane, tracing.__interactionsRef.current);\n}\n\nfunction startWorkOnPendingInteractions(root, lanes) {\n  // we can accurately attribute time spent working on it, And so that cascading\n  // work triggered during the render phase will be associated with it.\n\n\n  const interactions = new Set();\n  root.pendingInteractionMap.forEach((scheduledInteractions, scheduledLane) => {\n    if (includesSomeLane(lanes, scheduledLane)) {\n      scheduledInteractions.forEach(interaction => interactions.add(interaction));\n    }\n  }); // Store the current set of interactions on the FiberRoot for a few reasons:\n  // We can re-use it in hot functions like performConcurrentWorkOnRoot()\n  // without having to recalculate it. We will also use it in commitWork() to\n  // pass to any Profiler onRender() hooks. This also provides DevTools with a\n  // way to access it when the onCommitRoot() hook is called.\n\n  root.memoizedInteractions = interactions;\n\n  if (interactions.size > 0) {\n    const subscriber = tracing.__subscriberRef.current;\n\n    if (subscriber !== null) {\n      const threadID = computeThreadID(root, lanes);\n\n      try {\n        subscriber.onWorkStarted(interactions, threadID);\n      } catch (error) {\n        // If the subscriber throws, rethrow it in a separate task\n        scheduleCallback(ImmediatePriority$1, () => {\n          throw error;\n        });\n      }\n    }\n  }\n}\n\nfunction finishPendingInteractions(root, committedLanes) {\n\n  const remainingLanesAfterCommit = root.pendingLanes;\n  let subscriber;\n\n  try {\n    subscriber = tracing.__subscriberRef.current;\n\n    if (subscriber !== null && root.memoizedInteractions.size > 0) {\n      // FIXME: More than one lane can finish in a single commit.\n      const threadID = computeThreadID(root, committedLanes);\n      subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n    }\n  } catch (error) {\n    // If the subscriber throws, rethrow it in a separate task\n    scheduleCallback(ImmediatePriority$1, () => {\n      throw error;\n    });\n  } finally {\n    // Clear completed interactions from the pending Map.\n    // Unless the render was suspended or cascading work was scheduled,\n    // In which case– leave pending interactions until the subsequent render.\n    const pendingInteractionMap = root.pendingInteractionMap;\n    pendingInteractionMap.forEach((scheduledInteractions, lane) => {\n      // Only decrement the pending interaction count if we're done.\n      // If there's still work at the current priority,\n      // That indicates that we are waiting for suspense data.\n      if (!includesSomeLane(remainingLanesAfterCommit, lane)) {\n        pendingInteractionMap.delete(lane);\n        scheduledInteractions.forEach(interaction => {\n          interaction.__count--;\n\n          if (subscriber !== null && interaction.__count === 0) {\n            try {\n              subscriber.onInteractionScheduledWorkCompleted(interaction);\n            } catch (error) {\n              // If the subscriber throws, rethrow it in a separate task\n              scheduleCallback(ImmediatePriority$1, () => {\n                throw error;\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n} // `act` testing API\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return false ;\n}\n\nfunction detachFiberAfterEffects(fiber) {\n  fiber.sibling = null;\n  fiber.stateNode = null;\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null; // Fiber\n\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n  this.mode = mode; // Effects\n\n  this.flags = NoFlags;\n  this.nextEffect = null;\n  this.firstEffect = null;\n  this.lastEffect = null;\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n  this.alternate = null;\n\n  {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n} // This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\n\n\nconst createFiber = function (tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;\n}\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n\n  return IndeterminateComponent;\n} // This is used to create an alternate fiber to do work on.\n\nfunction createWorkInProgress(current, pendingProps) {\n  let workInProgress = current.alternate;\n\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // We already have an alternate.\n    // Reset the effect tag.\n\n    workInProgress.flags = NoFlags; // The effect list is no longer valid.\n\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n    {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies = currentDependencies === null ? null : {\n    lanes: currentDependencies.lanes,\n    firstContext: currentDependencies.firstContext\n  }; // These will be overridden during the parent's reconciliation\n\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  return workInProgress;\n} // Used to reuse a Fiber for a second pass.\n\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n  // Reset the effect tag but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= Placement; // The effect list is no longer valid.\n\n  workInProgress.nextEffect = null;\n  workInProgress.firstEffect = null;\n  workInProgress.lastEffect = null;\n  const current = workInProgress.alternate;\n\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n    workInProgress.child = null;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n    workInProgress.dependencies = null;\n    workInProgress.stateNode = null;\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies = currentDependencies === null ? null : {\n      lanes: currentDependencies.lanes,\n      firstContext: currentDependencies.firstContext\n    };\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\nfunction createHostRootFiber(tag) {\n  let mode;\n\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode | BlockingMode | StrictMode;\n  } else if (tag === BlockingRoot) {\n    mode = BlockingMode | StrictMode;\n  } else {\n    mode = NoMode;\n  }\n\n  if ( isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\nfunction createFiberFromTypeAndProps(type, // React$ElementType\nkey, pendingProps, owner, mode, lanes) {\n  let fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n  let resolvedType = type;\n\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= DebugTracingMode;\n        break;\n\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictMode;\n        break;\n\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n      case REACT_LEGACY_HIDDEN_TYPE:\n        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n\n      case REACT_SCOPE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      default:\n        {\n          if (typeof type === 'object' && type !== null) {\n            switch (type.$$typeof) {\n              case REACT_PROVIDER_TYPE:\n                fiberTag = ContextProvider;\n                break getTag;\n\n              case REACT_CONTEXT_TYPE:\n                // This is a consumer\n                fiberTag = ContextConsumer;\n                break getTag;\n\n              case REACT_FORWARD_REF_TYPE:\n                fiberTag = ForwardRef;\n\n                break getTag;\n\n              case REACT_MEMO_TYPE:\n                fiberTag = MemoComponent;\n                break getTag;\n\n              case REACT_LAZY_TYPE:\n                fiberTag = LazyComponent;\n                resolvedType = null;\n                break getTag;\n\n              case REACT_BLOCK_TYPE:\n                fiberTag = Block;\n                break getTag;\n            }\n          }\n\n          let info = '';\n\n          {\n            {\n              throw Error( formatProdErrorMessage(130, type == null ? type : typeof type, info));\n            }\n          }\n        }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  return fiber;\n}\nfunction createFiberFromElement(element, mode, lanes) {\n  let owner = null;\n\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n\n  return fiber;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.type = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0\n    };\n  }\n\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n  // This needs to be fixed in getComponentName so that it relies on the tag\n  // instead.\n\n  fiber.type = REACT_SUSPENSE_TYPE;\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode); // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.\n\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode); // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.\n\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromHostInstanceForDeletion() {\n  const fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.\n\n  fiber.elementType = 'DELETED';\n  fiber.type = 'DELETED';\n  return fiber;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n} // Used for stashing WIP properties to replay failed work in DEV.\n\nfunction FiberRootNode(containerInfo, tag, hydrate) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.hydrate = hydrate;\n  this.callbackNode = null;\n  this.callbackPriority = NoLanePriority;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  {\n    this.interactionThreadID = tracing.unstable_getThreadID();\n    this.memoizedInteractions = new Set();\n    this.pendingInteractionMap = new Map();\n  }\n}\n\nfunction createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {\n  const root = new FiberRootNode(containerInfo, tag, hydrate);\n  // stateNode is any.\n\n\n  const uninitializedFiber = createHostRootFiber(tag);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\n\nfunction registerMutableSourceForHydration(root, mutableSource) {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n\nfunction createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.\nimplementation) {\n  let key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo,\n    implementation\n  };\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = get(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component) {\n  const fiber = get(component);\n\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      {\n        {\n          throw Error( formatProdErrorMessage(188));\n        }\n      }\n    } else {\n      {\n        {\n          throw Error( formatProdErrorMessage(268, Object.keys(component)));\n        }\n      }\n    }\n  }\n\n  const hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {\n  return createFiberRoot(containerInfo, tag, hydrate);\n}\nfunction updateContainer(element, container, parentComponent, callback) {\n\n  const current = container.current;\n  const eventTime = requestEventTime();\n\n  const lane = requestUpdateLane(current);\n\n  const context = getContextForSubtree(parentComponent);\n\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  const update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element\n  };\n  callback = callback === undefined ? null : callback;\n\n  if (callback !== null) {\n\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current, update);\n  scheduleUpdateOnFiber(current, lane, eventTime);\n  return lane;\n}\nfunction getPublicRootInstance(container) {\n  const containerFiber = container.current;\n\n  if (!containerFiber.child) {\n    return null;\n  }\n\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nfunction markRetryLaneImpl(fiber, retryLane) {\n  const suspenseState = fiber.memoizedState;\n\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);\n  }\n} // Increases the priority of thennables when they resolve within this boundary.\n\n\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nfunction attemptUserBlockingHydration$1(fiber) {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n\n  const eventTime = requestEventTime();\n  const lane = InputDiscreteHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\nfunction attemptContinuousHydration$1(fiber) {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n\n  const eventTime = requestEventTime();\n  const lane = SelectiveHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\nfunction attemptHydrationAtCurrentPriority$1(fiber) {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\nfunction runWithPriority$2(priority, fn) {\n\n  try {\n    setCurrentUpdateLanePriority(priority);\n    return fn();\n  } finally {\n  }\n}\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setSuspenseHandler = null;\n\nfunction findHostInstanceByFiber(fiber) {\n  const hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(instance) {\n  return null;\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  const findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  const ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh:  null,\n    scheduleRefresh:  null,\n    scheduleRoot:  null,\n    setRefreshHandler:  null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber:  null\n  });\n}\n\nfunction ReactDOMRoot(container, options) {\n  this._internalRoot = createRootImpl(container, ConcurrentRoot, options);\n}\n\nfunction ReactDOMBlockingRoot(container, tag, options) {\n  this._internalRoot = createRootImpl(container, tag, options);\n}\n\nReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (children) {\n  const root = this._internalRoot;\n\n  updateContainer(children, root, null, null);\n};\n\nReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function () {\n\n  const root = this._internalRoot;\n  const container = root.containerInfo;\n  updateContainer(null, root, null, () => {\n    unmarkContainerAsRoot(container);\n  });\n};\n\nfunction createRootImpl(container, tag, options) {\n  // Tag is either LegacyRoot or Concurrent Root\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks = options != null && options.hydrationOptions || null;\n  const mutableSources = options != null && options.hydrationOptions != null && options.hydrationOptions.mutableSources || null;\n  const root = createContainer(container, tag, hydrate);\n  markContainerAsRoot(root.current, container);\n  const containerNodeType = container.nodeType;\n\n  {\n    const rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;\n    listenToAllSupportedEvents(rootContainerElement);\n  }\n\n  if (mutableSources) {\n    for (let i = 0; i < mutableSources.length; i++) {\n      const mutableSource = mutableSources[i];\n      registerMutableSourceForHydration(root, mutableSource);\n    }\n  }\n\n  return root;\n}\nfunction createLegacyRoot(container, options) {\n  return new ReactDOMBlockingRoot(container, LegacyRoot, options);\n}\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n}\n\nconst ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction shouldHydrateDueToLegacyHeuristic(container) {\n  const rootElement = getReactRootElementInContainer(container);\n  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));\n}\n\nfunction legacyCreateRootFromDOMContainer(container, forceHydrate) {\n  const shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.\n\n  if (!shouldHydrate) {\n    let rootSibling;\n\n    while (rootSibling = container.lastChild) {\n\n      container.removeChild(rootSibling);\n    }\n  }\n\n  return createLegacyRoot(container, shouldHydrate ? {\n    hydrate: true\n  } : undefined);\n}\n\nfunction legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\n  // member of intersection type.\" Whyyyyyy.\n\n\n  let root = container._reactRootContainer;\n  let fiberRoot;\n\n  if (!root) {\n    // Initial mount\n    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);\n    fiberRoot = root._internalRoot;\n\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n\n      callback = function () {\n        const instance = getPublicRootInstance(fiberRoot);\n        originalCallback.call(instance);\n      };\n    } // Initial mount should not be batched.\n\n\n    unbatchedUpdates(() => {\n      updateContainer(children, fiberRoot, parentComponent, callback);\n    });\n  } else {\n    fiberRoot = root._internalRoot;\n\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n\n      callback = function () {\n        const instance = getPublicRootInstance(fiberRoot);\n        originalCallback.call(instance);\n      };\n    } // Update\n\n\n    updateContainer(children, fiberRoot, parentComponent, callback);\n  }\n\n  return getPublicRootInstance(fiberRoot);\n}\n\nfunction findDOMNode(componentOrElement) {\n\n  if (componentOrElement == null) {\n    return null;\n  }\n\n  if (componentOrElement.nodeType === ELEMENT_NODE) {\n    return componentOrElement;\n  }\n\n  return findHostInstance(componentOrElement);\n}\nfunction hydrate(element, container, callback) {\n  if (!isValidContainer(container)) {\n    {\n      throw Error( formatProdErrorMessage(200));\n    }\n  }\n\n\n  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);\n}\nfunction render(element, container, callback) {\n  if (!isValidContainer(container)) {\n    {\n      throw Error( formatProdErrorMessage(200));\n    }\n  }\n\n  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);\n}\nfunction unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {\n  if (!isValidContainer(containerNode)) {\n    {\n      throw Error( formatProdErrorMessage(200));\n    }\n  }\n\n  if (!(parentComponent != null && has(parentComponent))) {\n    {\n      throw Error( formatProdErrorMessage(38));\n    }\n  }\n\n  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);\n}\nfunction unmountComponentAtNode(container) {\n  if (!isValidContainer(container)) {\n    {\n      throw Error( formatProdErrorMessage(40));\n    }\n  }\n\n  if (container._reactRootContainer) {\n\n\n    unbatchedUpdates(() => {\n      legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\n        // $FlowFixMe This should probably use `delete container._reactRootContainer`\n        container._reactRootContainer = null;\n        unmarkContainerAsRoot(container);\n      });\n    }); // If you call unmountComponentAtNode twice in quick succession, you'll\n    // get `true` twice. That's probably fine?\n\n    return true;\n  } else {\n\n    return false;\n  }\n}\n\nsetAttemptUserBlockingHydration(attemptUserBlockingHydration$1);\nsetAttemptContinuousHydration(attemptContinuousHydration$1);\nsetAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);\nsetAttemptHydrationAtPriority(runWithPriority$2);\n\nsetRestoreImplementation(restoreControlledState$3);\nsetBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);\n\nfunction createPortal$1(children, container) {\n  let key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!isValidContainer(container)) {\n    {\n      throw Error( formatProdErrorMessage(200));\n    }\n  } // TODO: pass ReactDOM portal implementation as third argument\n  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.\n\n\n  return createPortal(children, container, null, key);\n}\n\nfunction renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {\n\n  return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);\n}\n\nfunction unstable_createPortal(children, container) {\n  let key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  return createPortal$1(children, container, key);\n}\n\nconst Internals = {\n  // Keep in sync with ReactTestUtils.js, and ReactTestUtilsAct.js.\n  // This is an array for better minification.\n  Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, flushPassiveEffects, // TODO: This is related to `act`, not events. Move to separate key?\n  IsThisRendererActing]\n};\nconst foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType:  0,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom'\n});\n\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\nexports.createPortal = createPortal$1;\nexports.findDOMNode = findDOMNode;\nexports.flushSync = flushSync;\nexports.hydrate = hydrate;\nexports.render = render;\nexports.unmountComponentAtNode = unmountComponentAtNode;\nexports.unstable_batchedUpdates = batchedUpdates$1;\nexports.unstable_createPortal = unstable_createPortal;\nexports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;\nexports.version = ReactVersion;"]}